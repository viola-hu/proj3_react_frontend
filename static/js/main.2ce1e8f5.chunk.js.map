{"version":3,"sources":["serviceWorker.js","lib/url.js","components/SignUpForm.jsx","components/ModalSignUp.jsx","components/LogInForm.jsx","components/ModalLogIn.jsx","components/GoogleMaps.jsx","components/ModalHint.jsx","components/CheckoutFormTODO.js","components/Payment.js","routes.js","components/BootNav.jsx","components/Home.jsx","components/About.jsx","components/MyAccount.jsx","components/Category.jsx","components/Product.jsx","components/CartConfirm.jsx","components/CheckOut.jsx","components/Order.jsx","components/SearchResults.jsx","index.js"],"names":["Boolean","window","location","hostname","match","url","URL","withRouter","props","_useState","useState","_useState2","Object","slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","pwConfirmation","setPwConfirmation","_useState9","_useState10","errorMessage","setErrorMessage","_useState11","_useState12","setJwt","resetErrorMessageIfAnyTypedValue","event","target","value","length","getTokenAndRedirect","concat","data","auth","axios","post","then","res","console","log","jwt","localStorage","setItem","onHide","history","go","pathname","catch","err","warn","renderErrorMessage","react_default","a","createElement","map","error","Form_default","Text","key","className","onSubmit","preventDefault","user","password_confirmation","response","errors","Group","controlId","Label","Control","type","placeholder","onChange","Button_default","variant","ModalSignUp","modalShow","setModalShow","ButtonToolbar_default","onClick","SignUpVerticallyCenteredModal","show","Modal_default","assign","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","components_SignUpForm","performLogIn","getCartAndUserInfoAndRedirect","configHeader","headers","Authorization","getItem","get","products_number","current_user_name","current_user_email","ModalLogIn","LogInVerticallyCenteredModal","components_LogInForm","MapContainer","_Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","marker","setState","selectedPlace","activeMarker","showingInfoWindow","state","stores","coords","lat","lng","directionURL","inherits","createClass","_this2","dist","google","zoom","style","width","height","border","initialCenter","store","index","position","visible","href","Component","GoogleApiWrapper","apiKey","ModalHint","ModalHint_LogInVerticallyCenteredModal","CheckoutForm","message","submit","bind","assertThisInitialized","stripe","createToken","token","charge","stripeToken","statusText","moveLineItemsFromCartToOrderAndUpdateStock","orderId","push","Container_default","Row_default","Col_default","es","md","injectStripe","Payment","CheckoutFormTODO","Routes","react_router_dom","react_router","path","component","buttonLeft","buttonRight","keyWord","setKeyWord","totalProductsNumberInCart","setTotalProductsNumberInCart","currentProductsNumberInCart","useEffect","to","removeItem","Navbar_default","sticky","expand","Brand","src","process","Toggle","aria-controls","Collapse","Nav_default","Dropdown_default","Menu","NavDropdown_default","Item","inline","FormControl_default","exact","sm","padding","Carousel_default","Image_default","fluid","textAlign","GoogleMaps","orders","setOrders","userName","userEmail","Table_default","striped","hover","Accordion_default","defaultActiveKey","Card_default","order","as","Card","eventKey","order_created_at_date_formatted","order_total_amount","line_items","li","product_id","product","image","price","quantity","maxWidth","params","products","setProducts","getProductsOfCategory","color","Figure_default","Image","alt","defineProperty","Caption","stock","description","setProduct","category","setCategory","setQuantity","buttonStatus","setButtonStatus","buttonText","setButtonText","_useState13","_useState14","successAddToCartMessage","setSuccessAddToCartMessage","getProductById","showSuccessMessage","ListGroup_default","min","max","defaultValue","wantedQuantity","parseInt","disabled","line_item","total_products_number_in_cart","lineItems","setLineItems","noLineItemsToShow","subtotal","forEach","_handleUpdateQuantity","persist","updatedQuantity","lineItemId","isNaN","put","updateTotalProductsNumberInCart","_handleRemoveLineItem","delete","updatedLineItems","updatedTotalProductsNumberInCart","responsive","thumbnail","title","q","setMessage","getSearchResults","whatToShow","toyNumber","margin","Img","fontWeight","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ce1e8f5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// when local test!\n// const URL = 'http://localhost:3000';\n\n// when deployment, change to below\nconst URL = \"https://toyshoppingsite.herokuapp.com\";\n\nexport default{\n  URL\n};\n","import React, {useState} from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport url from '../lib/url';\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction SignUpForm(props){\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [pwConfirmation, setPwConfirmation] = useState('');\n  const [errorMessage, setErrorMessage] = useState([]);\n  const [jwt, setJwt] = useState('');\n\n  const resetErrorMessageIfAnyTypedValue = (event) => {\n    if(event.target.value.length > 0){\n      setErrorMessage([]);\n    }\n  };\n\n  const _handleNameChange = (event) => {\n    resetErrorMessageIfAnyTypedValue(event);\n    setName(event.target.value);\n  };\n\n  const _handleEmailChange = (event) => {\n    resetErrorMessageIfAnyTypedValue(event);\n    setEmail(event.target.value);\n  };\n\n  const _handlePasswordChange = (event) => {\n    resetErrorMessageIfAnyTypedValue(event);\n    setPassword(event.target.value);\n  };\n\n  const _handlePasswordConfirmation = (event) => {\n    resetErrorMessageIfAnyTypedValue(event);\n    setPwConfirmation(event.target.value)\n  };\n\n  // 1) create user, 2) get jwt\n  const _handleSubmit = (event) => {\n    event.preventDefault();\n\n    // const URL = \"https://toyshoppingsite.herokuapp.com/signup\";\n    const URL = `${url.URL}/signup`;\n\n    const data = {\n      user:{\n        name,\n        email,\n        password,\n        password_confirmation: pwConfirmation\n      }\n    };\n\n    axios.post(URL, data)\n    .then(res => {\n      console.log('created user!', res);\n      getTokenAndRedirect();\n    })\n    .catch(err => {\n      console.warn('SignUp ERROR!!!', err.response.data.errors); // an array of errors\n      setErrorMessage(err.response.data.errors)\n    });\n  }\n\n// *********************************************\n  const getTokenAndRedirect = () => {\n    // const URL = \"https://toyshoppingsite.herokuapp.com/user_token\";\n    const URL = `${url.URL}/user_token`;\n    const data = {\n      auth: {\n        email,\n        password\n      }\n    };\n\n    axios.post(URL, data)\n    .then(res => {\n      console.log('response from server:', res, props);\n      setJwt(res.data.jwt);\n      // once login success\n      // 1) store jwt token in the localStorage\n      window.localStorage.setItem('jwt', res.data.jwt);\n      // 2) store cart line_item number into localStorage\n      // in order to show on the top right - shopping bag\n      // as the user just signed up, the cart's line items number should be \"0\"\n      window.localStorage.setItem('totalProductsNumberInCart', 0);\n      // 3) store user name + email into localStorage\n      window.localStorage.setItem('userName', name);\n      window.localStorage.setItem('userEmail', email);\n      // 4) hide the modal\n      props.onHide();\n      // 5) couldn't find a way to rerender the current route,\n      // thus, use .go() to refresh current page!\n      props.history.go(props.location.pathname);\n    })\n    .catch(err => {\n      // if any error, update state and print out in UI\n      console.warn('LOGIN TOKEN ERROR:', err);\n      setErrorMessage(['Error connecting to server'])\n    });\n  }\n\n  // TEST:\n  // console.log('name:', name);\n  // console.log('email:', email);\n  // console.log('password:', password);\n  // console.log('pwConfirmation:', pwConfirmation);\n  // console.log('errorMessage', errorMessage);\n\n  const renderErrorMessage = (\n    <div>\n      {errorMessage.map(error => (\n        <Form.Text key={error} className=\"errorMessage\">\n          {error}\n        </Form.Text>\n        )\n      )}\n    </div>\n  )\n\n  return(\n    <Form onSubmit={_handleSubmit}>\n      {renderErrorMessage}\n      <Form.Group controlId=\"signUpFormBasicName\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"name\" placeholder=\"enter your name\" onChange={_handleNameChange}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"signUpFormBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"enter email\" onChange={_handleEmailChange}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"signUpFormBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"enter password\" onChange={_handlePasswordChange}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"signUpFormPasswordConfirmation\">\n        <Form.Label>Password Confirmation</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"enter password again\" onChange={_handlePasswordConfirmation}/>\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Sign Up\n      </Button>\n    </Form>\n  );\n}\n\nexport default withRouter(SignUpForm);\n","import React, {useState} from 'react';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\n\nimport SignUpForm from \"./SignUpForm\";\n\n\n\nexport default function ModalSignUp(props){\n\n  const[modalShow, setModalShow] = useState(false);\n\n  // console.log('Re-rendered ModalSignUp!!');\n\n  return(\n    <ButtonToolbar>\n      <Button className=\"btn-space\" variant=\"warning\" onClick={() => setModalShow(true)}>\n        SignUp\n      </Button>\n\n      <SignUpVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </ButtonToolbar>\n  );\n}\n\n// functional component\nfunction SignUpVerticallyCenteredModal(props) {\n  return(\n    <Modal\n    {...props}\n    size=\"sm\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Sign Up\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <SignUpForm onHide={props.onHide}/>\n      </Modal.Body>\n    </Modal>\n  );\n}\n","import React, {useState} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport url from '../lib/url';\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n// import FormText from \"react-bootstrap/FormText\";\n\n\nfunction LogInForm(props){\n  //use hook to replace this.state\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [jwt, setJwt] = useState('');\n\n\n  const _handleEmailChange = (event) => {\n    if(event.target.value.length > 0){\n      setErrorMessage('');\n    }\n    // event.persist();\n    // console.log(event);\n    // console.log('changed email:', event.target.value); // input value - ok!\n    setEmail(event.target.value);\n  };\n\n  const _handlePasswordChange = (event) => {\n    if(event.target.value.length > 0){\n      setErrorMessage('');\n    }\n    setPassword(event.target.value);\n  };\n\n  const _handleSubmit = (event) => {\n    event.preventDefault();\n    if(email.length === 0 || password.length === 0){\n      setErrorMessage('Please enter an email and password')\n    } else {\n      performLogIn();\n    }\n  };\n\n  // console.log(errorMessage);\n\n  const performLogIn = () => {\n    // console.log('email:', email);\n    // console.log('password:', password); // tested ok!\n    // const URL = \"https://toyshoppingsite.herokuapp.com/user_token\";\n    // const URL = \"http://localhost:3000/user_token\";\n    const URL = `${url.URL}/user_token`;\n    const data = {\n      auth: {\n        email,\n        password\n      }\n    };\n    // example:\n    // {\"auth\":\n    //   {\"email\": \"foo@bar.com\",\n    //     \"password\": \"secret\"\n    //   }\n    // }\n\n    axios.post(URL, data)\n    .then(res => {\n      console.log('response from server:', res, props);\n      setJwt(res.data.jwt);\n      // once login success\n      // 1) store jwt token in the localStorage\n      window.localStorage.setItem('jwt', res.data.jwt);\n      // 2) send another axios request to get the cart & user info from DB, to save in localStorage\n      getCartAndUserInfoAndRedirect();\n\n    })\n    .catch(err => {\n      // if any error, update state and print out in UI\n      console.warn('!!!ERROR:', err);\n      setErrorMessage('Invalid email or password')\n    });\n  };\n\n  // once a user has logged in, either\n  // 1) along with the login token, send back user cart's line_items\n  // 2) or, send another axios request to get the line_items information\n  // to store inside localStorage to show the shopping cart item number!\n  const getCartAndUserInfoAndRedirect = ()=>{\n    console.log('send another axios request!');\n\n    // send another axios request to get user info + user cart's line_items number\n    const URL = `${url.URL}/user`;\n\n    const jwt = localStorage.getItem('jwt');\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      },\n    };\n\n    // console.log('%c get CART', 'font-size: 20pt');\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log('second axios response:', res);\n\n      // 1, store cart totalProductsNumberInCart into localStorage\n      // in order to show on the top right - shopping bag\n      window.localStorage.setItem('totalProductsNumberInCart', res.data.products_number);\n\n      // 2, store user name + email into localStorage\n      window.localStorage.setItem('userName', res.data.current_user_name);\n      window.localStorage.setItem('userEmail', res.data.current_user_email);\n\n      // 3, hide the modal\n      props.onHide();\n\n      // 4, use props.history.go to force to go to the specified route, even it's the current route path, as it's forcing to REFRESH the page!!!\n      // so that it will trigger the current route page to re-render\n      // e.g. user in the product page and after login, stay in the same product page, but with everything enabled after login + re-render\n      // meanwhile, .go() also triggers BootNav to rerender to update shopping bag number on top right corner\n      props.history.go(props.location.pathname);\n    })\n    .catch(err => {\n      // very rare for error to appear here\n      // since the user has just logged in, a cart should already been created when the user initially signed up\n      // user's info + cart info should be retrieved fine.\n      console.warn('SERVER ERROR:', err);\n    });\n  };\n\n  //\n  // // TEST & LEARN:\n  // // if state (email / password's value) changes, then the whole function component will run again!\n  // // thus, the below line runs everytime the typed-in email's value changes!\n  // console.log('normal console.log', email);\n  // // Also, can use useEffect to catch the change of state\n  // useEffect(()=> console.log('useEffect:', email), [email]);\n  // console.log('currentPassword:', password);\n\n\n  return(\n    <Form onSubmit={_handleSubmit}>\n      <Form.Text className=\"errorMessage\">\n        {errorMessage}\n      </Form.Text>\n      <Form.Group controlId=\"loginFormBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"enter email\" onChange={_handleEmailChange}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"loginFormBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"enter password\" onChange={_handlePasswordChange}/>\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Log In\n      </Button>\n    </Form>\n  );\n}\n\n// using Curl in the bash to test - SUCCESS!\n// curl -X POST \"https://toyshoppingsite.herokuapp.com/user_token\" -d '{\"auth\": {\"email\": \"lily@lily.com\", \"password\": \"chicken\"}}' -H \"Content-Type: application/json\"\n\n\nexport default withRouter(LogInForm);\n","import React, {useState} from 'react';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\n\nimport LogInForm from \"./LogInForm\";\n\n\n\nexport default function ModalLogIn(props){\n\n  const[modalShow, setModalShow] = useState(false);\n\n  return(\n    <ButtonToolbar>\n      <Button className=\"btn-space\" variant=\"info\" onClick={() => setModalShow(true)}>\n        LogIn\n      </Button>\n\n\n      <LogInVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </ButtonToolbar>\n  );\n}\n\n// functional component\nfunction LogInVerticallyCenteredModal(props) {\n  return(\n    <Modal\n    {...props}\n    size=\"sm\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Log In\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <LogInForm\n          onHide={props.onHide}\n        />\n      </Modal.Body>\n    </Modal>\n  );\n}\n","import React, {Component} from 'react';\nimport {Map, GoogleApiWrapper, Marker, InfoWindow} from 'google-maps-react';\n\nexport class MapContainer extends Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      stores: [\n        {\n          coords: {lat:-33.8717, lng:151.2067},\n          name: \"V's Toy - QVB\",\n          location: \"455 George St, Sydney NSW 2000\",\n          directionURL: \"https://www.google.com/maps/place/455+George+St,+Sydney+NSW+2000/@-33.8721094,151.2045493,17z/data=!3m1!4b1!4m5!3m4!1s0x6b12ae3e8d0f5583:0xd8cb208eb31f2b0d!8m2!3d-33.8721139!4d151.206738\"\n        },\n        {\n          coords: {lat:-33.8597, lng:151.2082},\n          name: \"V's Toy - The Rocks\",\n          location: \"80 George St, The Rocks NSW 2000\",\n          directionURL: \"https://www.google.com/maps/place/80+George+St,+The+Rocks+NSW+2000/@-33.857201,151.2066144,17z/data=!3m1!4b1!4m5!3m4!1s0x6b12ae5d3ff9500b:0xaeebeb77916477b2!8m2!3d-33.8572055!4d151.2088031\"\n        }\n      ],\n      selectedPlace: {},\n      activeMarker:{},\n      showingInfoWindow: false,\n    };\n  }\n\n  handleClick = (props, marker, event) => {\n    // tested, all the above three parameters are inbuilt properties of Marker event handler\n    console.log('props:', props);\n    console.log('marker:', marker);\n    console.log('event:', event);\n\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n  }\n\n\n  render(){\n\n    const mapStyles = {\n      width: \"22em\",\n      height: \"20em\",\n      border: \"orange dashed\",\n    };\n\n    return(\n      <Map\n        google = {this.props.google}\n        zoom = {13}\n        style = {mapStyles}\n        initialCenter = {{lat: -33.8660, lng: 151.2056}}\n      >\n\n        {\n          this.state.stores.map((store, index) => {\n            return(\n                <Marker key={index} id={index} position={store.coords}\n                  onClick={this.handleClick}\n                  name={store.name}\n                  directionURL={store.directionURL}\n                  location={store.location}\n                />\n            )\n          })\n        }\n\n        <InfoWindow\n          marker = {this.state.activeMarker}\n          visible = {this.state.showingInfoWindow}>\n          <div>\n            <h5 className=\"info-window\"><i>{this.state.selectedPlace.name}</i></h5>\n            <p>{this.state.selectedPlace.location}</p>\n            <a href={this.state.selectedPlace.directionURL} target=\"_blank\">\n              How to get here?\n            </a>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBXG0-gC8Yje8zYu6RJlMYVT6oX5TeEjLA'\n})(MapContainer);\n\n// <InfoWindow onClose={this.onInfoWindowClose}>\n//   <div>\n//     <h1>hello!</h1>\n//   </div>\n// </InfoWindow>\n","import React, {useState} from 'react';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function ModalHint(props){\n\n  const[modalShow, setModalShow] = useState(false);\n\n\n  return(\n    <ButtonToolbar>\n      <button className=\"hint-button\" onClick={() => setModalShow(true)}>\n        <h5>Hint</h5>\n      </button>\n\n      <LogInVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </ButtonToolbar>\n  );\n}\n\n// functional component\nfunction LogInVerticallyCenteredModal(props) {\n  return(\n    <Modal\n    {...props}\n    size=\"sm\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          About Payment\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"note\">\n        <p><small>\n          Hi there, <br/>\n          We are using Stripe test environment.<br/>\n          Please select from the below cards to proceed.\n        </small></p>\n        <p><small>\n          <strong>Visa: 4242 4242 4242 4242</strong>\n        </small></p>\n        <p><small>\n          <strong>Mastercard: 5555 5555 5555 4444</strong>\n        </small></p>\n        <p><small>\n          <strong>American Express: 3782 822463 10005</strong>\n        </small></p>\n        <p><small>\n          <strong>\n          * a valid expiration date in the future <br/>\n          * any random CVC number\n          </strong>\n        </small></p>\n      </Modal.Body>\n    </Modal>\n  );\n}\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {CardElement, injectStripe} from 'react-stripe-elements';\nimport axios from 'axios';\nimport url from '../lib/url';\nimport ModalHint from './ModalHint';\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\n\nclass CheckoutForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message:''\n    };\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit(event) {\n    // LEARNING:\n    // DOCS:\n    // 1) The injectStripe function wraps the component, creating a new component with an injected stripe prop, which contains a Stripe object.\n    // MEANING: wrapped inside the injectStripe() function, CheckoutForm component gets a 'stripe' prop whose value is a stripe object => this.props.stripe\n    // this stripe object has many methods, and one of them is createToken(), used to tokenize the credential card info\n    // 2) https://stripe.com/docs/stripe-js/reference#stripe-create-token\n    // tokenData, an object containing additional payment information you might have collected, and it's highly recommended collecting name and address\n    // name should use the user's signup name!\n    // 2.5) tested: if not passing any argument to .createToken(), it still generates token\n    // however, as highly recommended by docs, collecting name and address can be used to perform a number of verifications, such as CVC, ZIP, and address verification!!!\n    let {token} = await this.props.stripe.createToken({name: \"Name\"});\n    // ********************** TODO: **********************\n    // 1, when a user login, send back user name for Stripe token creation + cart line_items info for updating top right corner cart items number, and store both in localStorage\n    // 2, when a user signup, store user name directly in localStorage, set cart item number as (0), later when add line items to cart, will need to update localStorage cart item number info!\n    // 3, when log out, clear localStorage, user name + cart info + jwt\n    // ***************************************************\n\n    // 3) the below line won't run, until the above line created a token and stored into the variable 'token', -> that's what await does!!!\n    console.log('****** token *****', token); // tested fine!\n\n    // some invalid card number will be recognised by stripe automatically during user input,\n    // while some numbers cannot generate Stripe token at all.\n    // to avoid crash, insert message and return function.\n    if(!token){\n      this.setState({\n        message:'Invalid card information. Please contact your card issuer for more details.'\n      });\n      return;\n    }\n\n    console.log('****** This is Stripe Token: *****', token.id); // tested fine!\n\n    // Only after the above token is generated, will then run the below code and post the data including the token to server, to actually make the charge!\n\n    // const URL = `https://toyshoppingsite.herokuapp.com/charge`;\n    const URL = `${url.URL}/charge`; // for test\n\n    const jwt = localStorage.getItem('jwt');\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt\n      }\n    };\n\n    const data = {\n      charge: {\n        stripeToken: token.id\n      }\n    };\n\n    axios.post(URL, data, configHeader)\n    .then(res => {\n      console.log('stripe response', res);\n      console.log('stripe response', res.statusText);\n\n      // 1, payment successful\n      if (res.statusText == \"OK\"){\n\n        // 1> frontend, reset localStorage totalProductsNumberInCart, to be reused!\n        // so that when redirect to the new route after payment,\n        // BootNav rerenders and top right corner shopping bag number changes back to \"0\"\n        localStorage.setItem('totalProductsNumberInCart', 0);\n\n        // 2> backend, send request to server to change DB\n        // 1) move line_items from cart into order\n        // 2) also update product stock!\n\n        // 3> at last redirect to order page!\n        // ********** TODO: **************\n        // doing the below in a separate axios request as previously have already built the below process based on faking Successful payment\n        // will need to minimise the axios request and do logic process at the backend in one step once payment is successful.\n        // for now, using the already built process as a separate step due to tight deadline\n        moveLineItemsFromCartToOrderAndUpdateStock();\n      }\n    })\n    .catch(err => {\n      console.warn('stripe error', err.response);\n      this.setState({\n        message: 'Transaction unsuccessful. Please contact your card issuer for more details.'\n      });\n    });\n\n\n    const moveLineItemsFromCartToOrderAndUpdateStock = () => {\n      const URL = `${url.URL}/order`;\n\n      const jwt = localStorage.getItem('jwt');\n\n      const configHeader = {\n        headers: {\n          Authorization: 'Bearer ' + jwt,\n        },\n      };\n\n      axios.get(URL, configHeader)\n      .then(res => {\n        console.log('response of success order id:', res.data.id);\n\n        // get the order_id from response, and redirect!\n        const orderId = res.data.id\n        // 1) if order succeed, redirect to order page, and show messages there!\n        this.props.history.push(`/order/${orderId}`)\n      })\n      .catch(err => {\n        // 2) if order failed, show message like out of order!\n        console.warn('ERROR!', err);\n      });\n    };\n  };\n\n\n\n  render(){\n    let errorMessage = (\n      <p className=\"errorMessage\"><small>\n        {this.state.message}\n      </small></p>\n    );\n\n    return (\n      <div className=\"payment-form\">\n        <Container>\n          <Row>\n            <Col>\n              <p className=\"enter-details\">Enter Card Details</p>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              {errorMessage}\n            </Col>\n          </Row>\n          <Row>\n            <Col className=\"stripe-form\">\n              <CardElement />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6} className=\"submit-button-container\">\n              <button className=\"submit-button\" onClick={this.submit}><h5>Submit</h5></button>\n            </Col>\n            <Col md={6} className=\"hint-button-container\">\n              <ModalHint/>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default injectStripe(withRouter(CheckoutForm));\n","import React, {Component} from 'react';\nimport {Elements, StripeProvider} from 'react-stripe-elements';\nimport CheckoutForm from './CheckoutFormTODO';\n\nclass Payment extends Component {\n\n  // StripeProvider is what actually creates the Stripe instance\n  // and passes in your API key.\n  render() {\n    return (\n      <StripeProvider apiKey=\"pk_test_dBB7Zc6zujggRBFHQUdShiJg00Ee8VeuNR\">\n        <div className=\"payment-form\">\n          <h1 className=\"payment-form-title\">Payment Form</h1>\n          <div className=\"payment-form\">\n            <Elements>\n              <CheckoutForm />\n            </Elements>\n          </div>\n        </div>\n      </StripeProvider>\n    );\n  }\n}\n\nexport default Payment;\n","import React from 'react';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport './css/bootstrap.min.css';// import Bootstrap css\nimport './css/main.css';// import custom css\n\nimport BootNav from './components/BootNav';\n// import Image from \"react-bootstrap/Image\";\n\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport MyAccount from \"./components/MyAccount\";\nimport Category from \"./components/Category\";\nimport Product from \"./components/Product\";\nimport CartConfirm from \"./components/CartConfirm\";\nimport CheckOut from \"./components/CheckOut\";\nimport Payment from './components/Payment.js';\nimport Order from './components/Order';\nimport SearchResults from './components/SearchResults';\n\n\nconst Routes = (\n  <Router>\n    <div className=\"entireBody\">\n      <Route path=\"/\" component={BootNav}/>\n      <Route exact path=\"/\" component={Home}/>\n      <Route exact path=\"/about\" component={About}/>\n      <Route exact path=\"/account\" component={MyAccount}/>\n      <Route exact path=\"/category/:id\" component={Category}/>\n      <Route exact path=\"/product/:id\" component={Product}/>\n      <Route exact path=\"/cart\" component={CartConfirm}/>\n      <Route exact path=\"/checkout\" component={CheckOut}/>\n      <Route exact path=\"/payment\" component={Payment}/>\n      <Route exact path=\"/order/:id\" component={Order}/>\n      <Route exact path=\"/search/:q\" component={SearchResults}/>\n\n\n\n      <footer className=\"body-footer\">\n        {\n        // <Image className=\"happykids\" src=\"/images/happykids.jpg\" />\n        // <img src={process.env.PUBLIC_URL + '/happykids.jpg'} />\n        }\n\n      </footer>\n    </div>\n  </Router>\n);\n\nexport default Routes;\n","import React, {useState, useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Dropdown from \"react-bootstrap/Dropdown\"\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\"\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\"\nimport DropdownItem from \"react-bootstrap/DropdownItem\"\n\nimport ModalSignUp from \"./ModalSignUp\";\nimport ModalLogIn from \"./ModalLogIn\";\n// import MyAccount from \"./MyAccount\";\n\n\n\nexport default function BootNav(props){\n\n  // state\n  const [jwt, setJwt] = useState(localStorage.getItem('jwt'));\n  const [keyWord, setKeyWord] = useState('');\n  const [totalProductsNumberInCart, setTotalProductsNumberInCart] = useState(0);\n\n  // useState(window.localStorage.getItem('totalProductsNumberInCart'));\n\n  const currentProductsNumberInCart = window.localStorage.getItem('totalProductsNumberInCart');\n\n\n  console.log('currentProductsNumberInCart from localStorage:', currentProductsNumberInCart);\n\n  console.log('BootNav state - totalProductsNumberInCart', totalProductsNumberInCart);\n\n\n  // when a user hasn't logged in , won't see the shopping bag icon!\n  // thus, totalProductsNumberInCart won't show up as null!\n  useEffect(() => {\n    // whenever the location.pathname changes - route changes\n    // useEffect's callback will run, and callback will always envolve update state\n    // if state changes, the whole component will re-render\n    // => here, check if the current localStorage has changed or not?\n    // if yes, update state and it will trigger component to re-render\n    if (currentProductsNumberInCart !== totalProductsNumberInCart){\n      setTotalProductsNumberInCart(currentProductsNumberInCart);\n    }\n  });\n\n\n  const _handleLogOut = () => {\n    // 1) clear localStorage : jwt, cart, userName\n    localStorage.removeItem('jwt');\n    localStorage.removeItem('userEmail');\n    localStorage.removeItem('userName');\n    localStorage.removeItem('totalProductsNumberInCart');\n\n\n    // 2) update state, so BootNav can re-render\n    setJwt('');\n    setTotalProductsNumberInCart(0);\n\n    // 3) redirect to Home\n    props.history.push('/');\n  }; //_handleLogOut()\n\n\n  const _handleChange = (event) => {\n    console.log('search keyword:', event.target.value);\n\n    // change state\n    setKeyWord(event.target.value)\n  };\n  // console.log('State search keyword:',keyWord);\n\n\n  const _handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log('lalal');\n\n    // if keyWord is empty, do nothing\n    // if (!keyWord) console.log('do nothing');\n    if (!keyWord) return;\n\n    // if keyWord is not empty, redirect to SearchResults route\n    // from there, do axios request, no matter what result is would be!\n    props.history.push(`/search/${keyWord}`)\n  };\n\n\n  let buttonLeft;\n  if(localStorage.getItem('jwt')){\n    // already logged in\n    buttonLeft = (\n      <Link to={'/account'}>\n        <Button className=\"btn-space\" variant=\"warning\">\n          Account\n        </Button>\n      </Link>\n    );\n  } else {\n    // not yet logged in\n    buttonLeft = (\n      <ModalSignUp />\n    );\n  }\n\n  let buttonRight;\n  if(localStorage.getItem('jwt')){\n    // already logged in\n    buttonRight = (\n      <div>\n        <Button className=\"btn-space\" variant=\"info\" onClick={_handleLogOut}>\n          LogOut\n        </Button>\n        <Link to={'/cart'} className=\"cart-icon-bg\">\n          <p className=\"cart-icon-number\">{totalProductsNumberInCart}</p>\n        </Link>\n      </div>\n    );\n  } else {\n    // not yet logged in\n    buttonRight = (\n      <ModalLogIn />\n    );\n  }\n\n  return(\n    <Navbar sticky=\"top\" expand=\"md\" className=\"entireBody\">\n      <Navbar.Brand href=\"#/\">\n        <div>V's Toy</div>\n        <img className=\"happy-kids\" src={process.env.PUBLIC_URL + '/images/happy-kids.png'}/>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <ButtonToolbar>\n            <Button className=\"btn-space\" href=\"#/\" variant=\"danger\">Home</Button>\n            <Button className=\"btn-space\" href=\"#about\" variant=\"primary\">About</Button>\n          </ButtonToolbar>\n\n          <Dropdown>\n            <Dropdown.Toggle className=\"btn-space\" variant=\"success\" id=\"dropdown-basic\">\n              Category\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <NavDropdown.Item id=\"category-1\" href=\"#category/1\">Age 0-2</NavDropdown.Item>\n              <NavDropdown.Item id=\"category-2\" href=\"#category/2\">Age 2-5</NavDropdown.Item>\n              <NavDropdown.Item id=\"category-3\" href=\"#category/3\">Age 5-8</NavDropdown.Item>\n              <NavDropdown.Item id=\"category-4\" href=\"#category/4\">Age over 8</NavDropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Nav>\n        <Nav>\n          <Form inline onSubmit={_handleSubmit}>\n            <FormControl type=\"text\" placeholder=\"e.g. hellokitty\" className=\"mr-sm-2\" onChange={_handleChange}/>\n            <Button type=\"submit\" variant=\"secondary\" className=\"btn-space\" size=\"sm\">Search</Button>\n          </Form>\n        </Nav>\n\n        <Nav className=\"mr-auto\">\n          {buttonLeft}\n          {buttonRight}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n\n}\n\n// class BootNav\n//\n// <Image className=\"cart-icon\" src=\"../public/images/cart-icon.png\" fluid />\n\n// <img className=\"cart-icon\" src={process.env.PUBLIC_URL + '/images/c101.jpg'} />\n\n// <div className=\"cart-icon\">\n//   </div>\n\n\n\n// buttonRight = (\n//   <div>\n//     <Button className=\"btn-space\" variant=\"info\" onClick={_handleLogOut}>\n//       LogOut\n//     </Button>\n//     <Link to={'/cart'}>\n//       <img className=\"cart-icon\" src={process.env.PUBLIC_URL +`/images/cart-icon.png`}></img>\n//     </Link>\n//   </div>\n// );\n","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport Button from \"react-bootstrap/Button\";\n\n\nexport default function Home(props){\n\n\n  return(\n    <Container>\n      <Row>\n        <Col sm={8} style={{padding:0}}>\n          <Carousel>\n            <Carousel.Item>\n              <Container className=\"carousel-container\">\n                <Row className=\"carousel-row-top\">\n                  <Col className=\"carousel-col-left\">\n                    <Link to={'/category/1'}>\n                      <div className=\"home-category-container home-category-01\">\n                        <div className=\"home-category\">\n                          Age <br/>0 - 2\n                        </div>\n                      </div>\n                    </Link>\n                  </Col>\n                  <Col className=\"carousel-col-right\">\n                    <Link to={'/product/1'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c101.jpg`} fluid />\n                    </Link>\n                  </Col>\n                </Row>\n                <Row className=\"carousel-row-bottom\">\n                  <Col className=\"carousel-col-left\">\n                    <Link to={'/product/8'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c108.jpg`} fluid />\n                    </Link>\n                  </Col>\n                  <Col className=\"carousel-col-right\">\n                    <Link to={'/product/5'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c105.jpg`} fluid />\n                    </Link>\n                  </Col>\n                </Row>\n              </Container>\n            </Carousel.Item>\n\n            <Carousel.Item>\n              <Container className=\"carousel-container\">\n                <Row className=\"carousel-row-top\">\n                  <Col className=\"carousel-col-left\">\n                    <Link to={'/product/14'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c205.jpg`} fluid />\n                    </Link>\n                  </Col>\n                  <Col className=\"carousel-col-right\">\n                    <Link to={'/category/2'}>\n                      <div className=\"home-category-container home-category-02\">\n                        <div className=\"home-category\">\n                          Age <br/>2 - 5\n                        </div>\n                      </div>\n                    </Link>\n                  </Col>\n                </Row>\n                <Row className=\"carousel-row-bottom\">\n                  <Col className=\"carousel-col-left\">\n                    <Link to={'/product/18'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c209.jpg`} fluid />\n                    </Link>\n                  </Col>\n                  <Col className=\"carousel-col-right\">\n                    <Link to={'/product/16'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c207.jpg`} fluid />\n                    </Link>\n                  </Col>\n                </Row>\n              </Container>\n            </Carousel.Item>\n\n            <Carousel.Item>\n              <Container className=\"carousel-container\">\n                <Row className=\"carousel-row-top\">\n                  <Col className=\"carousel-col-left\">\n                    <Link to={'/product/23'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c305.jpg`} fluid />\n                    </Link>\n                  </Col>\n                  <Col className=\"carousel-col-right\">\n                    <Link to={'/product/22'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c304.jpeg`} fluid />\n                    </Link>\n                  </Col>\n                </Row>\n                <Row className=\"carousel-row-bottom\">\n                  <Col className=\"carousel-col-left\">\n                    <Link to={'/product/19'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c301.jpg`} fluid />\n                    </Link>\n                  </Col>\n                  <Col className=\"carousel-col-right\">\n                    <Link to={'/category/3'}>\n                      <div className=\"home-category-container home-category-03\">\n                        <div className=\"home-category\">\n                          Age <br/>5 - 8\n                        </div>\n                      </div>\n                    </Link>\n                  </Col>\n                </Row>\n              </Container>\n            </Carousel.Item>\n\n            <Carousel.Item>\n              <Container className=\"carousel-container\">\n                <Row className=\"carousel-row-top\">\n                  <Col className=\"carousel-col-left\">\n                    <Link to={'/product/31'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c404.jpg`} fluid />\n                    </Link>\n                  </Col>\n                  <Col className=\"carousel-col-right\">\n                    <Link to={'/product/33'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c406.jpg`} fluid />\n                    </Link>\n                  </Col>\n                </Row>\n                <Row className=\"carousel-row-bottom\">\n                  <Col className=\"carousel-col-left\">\n                    <Link to={'/category/4'}>\n                      <div className=\"home-category-container home-category-04\">\n                        <div className=\"home-category\">\n                          Age <br/>over 8\n                        </div>\n                      </div>\n                    </Link>\n                  </Col>\n                  <Col className=\"carousel-col-right\">\n                    <Link to={'/product/32'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c405.jpg`} fluid />\n                    </Link>\n                  </Col>\n                </Row>\n              </Container>\n            </Carousel.Item>\n          </Carousel>\n        </Col>\n\n        <Col className=\"home-right-col\" sm={4}>\n          <h1 className=\"home-category-title\">\n            V's Toy\n          </h1>\n          <Link to={'/about'}>\n            <Button className=\"btn-our-story\" variant=\"outline-secondary\">Our Story</Button>\n          </Link>\n          <Link to={'/category/1'}>\n            <h5 className=\"home-category-list home-category-01\">\n              Age 0-2\n            </h5>\n          </Link>\n          <Link to={'/category/2'}>\n            <h5 className=\"home-category-list home-category-02\">\n              Age 2-5\n            </h5>\n          </Link>\n          <Link to={'category/3'}>\n            <h5 className=\"home-category-list home-category-03\">\n              Age 5-8\n            </h5>\n          </Link>\n          <Link to={'category/4'}>\n            <h5 className=\"home-category-list home-category-04\">\n              Age over 8\n            </h5>\n          </Link>\n\n        </Col>\n      </Row>\n    </Container>\n\n  );\n}\n","import React from 'react';\nimport MapContainer from './GoogleMaps';\n\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\n\n\n\nexport default function About(props){\n\n\n\n  return(\n    <div className=\"about-container\">\n      <Container>\n        <Row className=\"about-welcome\">\n          <Col style={{textAlign:\"center\"}}>\n            <h1 className=\"about-title\">Welcome to V's Toy!</h1>\n          </Col>\n        </Row>\n        <Row className=\"about-welcome\">\n          <Col>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eius nostrum necessitatibus odio, eaque illum accusamus blanditiis. Cupiditate, autem libero nam rerum laudantium delectus. Suscipit minus tempora vitae et voluptate dolore.\n            </p>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col sm={12} md={6}>\n            <Row className=\"shop-contact\">\n                <h5 className=\"shop-title\">\n                  <Image style={{width:\"2.5rem\"}} src={process.env.PUBLIC_URL +`/images/icon-shop.png`} /> {' '}\n                  V's Toy - QVB\n                </h5>\n            </Row>\n            <Row className=\"shop-contact\">\n              <p>\n                455 George St, Sydney NSW 2000\n              </p>\n            </Row>\n            <Row className=\"shop-contact\">\n              <p>\n                <Image style={{width:\"1rem\"}} src={process.env.PUBLIC_URL +`/images/icon-phone.png`} />  +61 02 3456 7890\n              </p>\n            </Row>\n            <Row className=\"shop-contact\">\n              <p>\n                <Image style={{width:\"1rem\"}} src={process.env.PUBLIC_URL +`/images/icon-email.png`} /> <a href=\"mailto:viola.zj.hu@gmail.com\">contact@vtoy.com</a>\n              </p>\n            </Row>\n            <Row className=\"shop-contact\">\n              <h5 className=\"shop-title\">\n                <Image style={{width:\"2.5rem\"}} src={process.env.PUBLIC_URL +`/images/icon-shop.png`} /> {' '}\n                V's Toy - The Rocks\n              </h5>\n            </Row>\n            <Row className=\"shop-contact\">\n              <p>\n                80 George St, The Rocks NSW 2000\n              </p>\n            </Row>\n            <Row className=\"shop-contact\">\n              <p>\n                <Image style={{width:\"1rem\"}} src={process.env.PUBLIC_URL +`/images/icon-phone.png`} />  +61 02 0987 6543\n              </p>\n            </Row>\n            <Row className=\"shop-contact\">\n              <p>\n                <Image style={{width:\"1rem\"}} src={process.env.PUBLIC_URL +`/images/icon-email.png`} /> <a href=\"mailto:viola.zj.hu@gmail.com\">contact@vtoy.com</a>\n              </p>\n            </Row>\n          </Col>\n\n          <Col sm={12} md={6}>\n              <MapContainer/>\n          </Col>\n        </Row>\n      </Container>\n\n    </div>\n  );\n}\n\n// <Image className=\"about-image\" src={process.env.PUBLIC_URL +`/images/happykidsplaying05.png`} />\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport url from '../lib/url';\n\n\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Table from \"react-bootstrap/Table\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Media from \"react-bootstrap/Media\";\n\nexport default function MyAccount(props){\n\n  // state\n  const [orders, setOrders] = useState([]);\n\n  const userName = localStorage.getItem('userName');\n  const userEmail = localStorage.getItem('userEmail');\n\n  //************** TODO: tomorrow **********************\n  // 1, when page loaded, first thing to retrieve all the user's orders including line-items\n  useEffect(() => {\n\n    const jwt = localStorage.getItem('jwt');\n\n    const URL = `${url.URL}/orders`;\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      },\n    };\n\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log('Request orders response:', res.data);\n      // array of all orders,\n      // each order includes an array of all line_items\n      // each line_item includes associated product\n      // However, there could be no order at all\n      setOrders(res.data);\n\n    })\n    .catch(err => {\n      console.warn('SERVER ERROR:', err);\n    });\n  },[]);\n\n  // 2, user update account +\n  // 3, delete Account\n  // 4, CSS\n\n\n\n  return(\n    <div>\n\n      <Container className='account-container'>\n        <Row>\n          <Col sm={12} md={4}>\n            <h3 className=\"account-title\">My Account</h3>\n            <Table striped hover size=\"sm\">\n              <thead>\n                <tr>\n                  <th className=\"account-table-header\">User Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{userName}</td>\n                </tr>\n              </tbody>\n\n              <thead>\n                <tr>\n                  <th className=\"account-table-header\">Email Address</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{userEmail}</td>\n                </tr>\n              </tbody>\n            </Table>\n            <ButtonToolbar>\n              <Button className='update-account' variant=\"outline-warning\">Update Account</Button><br/>\n              <Button className='delete-account' variant=\"outline-info\">Delete Account</Button>\n            </ButtonToolbar>\n          </Col>\n\n          <Col sm={12} md={8}>\n            <h3 className=\"account-title\">My Orders</h3>\n            {\n              orders.length === 0\n              ?\n              (\n              <div>\n                <h5 className=\"no-purchase\">No purchase yet. Go get them! </h5>\n                <Image src={process.env.PUBLIC_URL + `/images/nopurchaseyet02.gif`} fluid />\n              </div>\n              )\n              :\n              <Accordion defaultActiveKey=\"0\">\n                <Card>\n                  {\n                    orders.map((order, index)=> (\n                      <div key={index}>\n                        <Accordion.Toggle\n                          as={Card.Header}\n                          eventKey={`${index + 1}`}\n                          className=\"order-card-header\"\n                        >\n                        <Row>\n                          <Col>\n                            <small>#</small>{' '}Order{' '}{order.id} {' '}\n                            <small><i>{order.order_created_at_date_formatted}</i></small>\n                          </Col>\n                          <Col style={{textAlign: 'right'}}>\n                            <span>Total: ${order.order_total_amount}</span>\n                          </Col>\n                        </Row>\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey={`${index + 1}`} key={order.id}>\n                            <Card.Body className=\"order-card-body\">\n                              {\n                                order.line_items.map(li =>(\n                                  <Row className=\"order-card-row\" key={li.id}>\n                                    <Col sm={12} md={4}>\n                                      <Link to={`/product/${li.product_id}`}>\n                                      <img\n                                        name={li.product.name}\n                                        src={process.env.PUBLIC_URL + `/images/${li.product.image}`}\n                                        className=\"order-list-image\"\n                                      />\n                                      </Link>\n                                    </Col>\n                                    <Col sm={12} md={8}>\n                                      <h5 className=\"order-list-product\">{li.product.name}</h5>\n                                      <p>Price: ${li.product.price}</p>\n                                      <p>Purchased Number: {li.quantity}</p>\n                                      <p>Subtotal: ${li.quantity * li.product.price}</p>\n                                    </Col>\n                                  </Row>\n                                ))\n                              }\n                            </Card.Body>\n                        </Accordion.Collapse>\n                      </div>\n                    ))\n                  }\n                </Card>\n              </Accordion>\n            }\n          </Col>\n        </Row>\n      </Container>\n\n      <footer>\n        <Image style={{maxWidth: '50vw'}} src={process.env.PUBLIC_URL + `/images/happykidsplaying01.jpg`} fluid />\n        <Image style={{maxWidth: '50vw'}} src={process.env.PUBLIC_URL + `/images/happykidsplaying01.jpg`} fluid />\n      </footer>\n    </div>\n\n  );\n}\n\n// <Image style={{maxWidth: '45vw'}} src={process.env.PUBLIC_URL + `/images/playingkids001.png`} fluid />\n// <Image style={{maxWidth: '55vw'}} src={process.env.PUBLIC_URL + `/images/playingkids002.png`} fluid />\n\n\n// <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n//   Order2\n// </Accordion.Toggle>\n// <Accordion.Collapse eventKey=\"1\">\n//   <ListGroup>\n//     <ListGroup.Item>No style</ListGroup.Item>\n//     <ListGroup.Item variant=\"primary\">Primary</ListGroup.Item>\n//     <ListGroup.Item action variant=\"secondary\">\n//       Secondary\n//     </ListGroup.Item>\n//     <ListGroup.Item action variant=\"success\">\n//       Success\n//     </ListGroup.Item>\n//     <ListGroup.Item action variant=\"danger\">\n//       Danger\n//     </ListGroup.Item>\n//     <ListGroup.Item action variant=\"warning\">\n//       Warning\n//     </ListGroup.Item>\n//     <ListGroup.Item action variant=\"info\">\n//       Info\n//     </ListGroup.Item>\n//     <ListGroup.Item action variant=\"light\">\n//       Light\n//     </ListGroup.Item>\n//     <ListGroup.Item action variant=\"dark\">\n//       Dark\n//     </ListGroup.Item>\n//   </ListGroup>\n// </Accordion.Collapse>\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport url from '../lib/url';\n\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Figure from \"react-bootstrap/Figure\";\nimport FigureImage from \"react-bootstrap/FigureImage\";\nimport FigureCaption from \"react-bootstrap/FigureCaption\";\n\n\n\nexport default function Category(props){\n\n  console.log('url is', url.URL);\n\n  const {id} = props.match.params;\n  // LEARNING: same as below\n  // const categoryId = props.match.params.id;\n  // console.log('categoryId:',categoryId);\n\n  const [products, setProducts] = useState([]);\n  // const [jwt, setJwt] = useState(localStorage.getItem('jwt'))\n\n  // LEARNING:\n  // whenever the props id changes, useEffect will catch that change and render the whole page\n  // even for the first time the component renders\n  useEffect(()=>{\n    getProductsOfCategory();\n  },[id]);\n\n\n  const getProductsOfCategory = ()=>{\n    // console.log('make axios request!');\n\n    // const URL = `https://toyshoppingsite.herokuapp.com/categories/${id}`;\n    // const URL = `http://localhost:3000/categories/${id}`;\n    const URL = `${url.URL}/categories/${id}`;\n\n    // LEARNING:\n    // category page doesn't need user authentication, thus no need to include jwt inside Header\n    // const configHeader = {\n    //   header: {\n    //     Authorization: 'Bearer ' + jwt\n    //   }\n    // };\n\n    axios.get(URL) //, configHeader\n    .then(res => {\n      // console.log('!!!res is :', res);\n      console.log('get all the products response:', res.data);// an array of products items\n      setProducts(res.data);\n    })\n    .catch(err => {\n      console.warn('ERRORS!!!:', err);\n    });\n  }\n\n  // console.log('updated products:', products);\n\n  // different border color based on category id\n  const color = ['lightpink', 'gold', 'yellowgreen', 'turquoise'];\n\n\n  return(\n    <Container>\n      <Row>\n        {\n          products.map( product => (\n            <Col sm={4} key={product.name} style={{textAlign:'center'}}>\n              <Link to={`/product/${product.id}`}>\n                <Figure>\n                  <Figure.Image\n                    width={300}\n                    height={300}\n                    fluid={false}\n                    alt=\"300x300\"\n                    style={{\n                      padding: '1rem',\n                      border: `dashed ${color[id-1]}`,\n                      padding: '1rem'\n                    }}\n                    src={process.env.PUBLIC_URL + `/images/${product.image}`}\n                  />\n                  <Figure.Caption>\n                    <p><strong>{product.name}</strong></p>\n                    <p>Price: {`$${product.price}`}</p>\n                    <p>In Stock: {product.stock}</p>\n                    <p>{product.description}</p>\n                  </Figure.Caption>\n                </Figure>\n              </Link>\n            </Col>\n          ))\n        }\n      </Row>\n    </Container>\n  )\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport url from '../lib/url';\n\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Figure from \"react-bootstrap/Figure\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport Form from \"react-bootstrap/Form\";\nimport FormText from \"react-bootstrap/FormText\";\nimport Button from \"react-bootstrap/Button\";\n\n\nexport default function Product(props){\n\n  // product id passed by props\n  const {id} = props.match.params;\n  // console.log(id);\n\n  // need jwt for user to get a cart\n  // if use logged in, valid string; if not, null\n  const jwt = localStorage.getItem('jwt');\n  const [product, setProduct] = useState({});\n  const [category, setCategory] = useState({});\n  const [quantity, setQuantity]= useState(1);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [buttonStatus, setButtonStatus] = useState(false);\n  const [buttonText, setButtonText] = useState('Add to Cart');\n  const [successAddToCartMessage, setSuccessAddToCartMessage] = useState('');\n\n  // first time the component renders\n  // axios request to get the product info by id\n  useEffect(()=>{\n    getProductById(id);\n    if(!jwt){\n      setButtonStatus(true);\n      setButtonText('Login to use cart')\n    }\n  },[id]);\n\n  const getProductById = (id)=>{\n    const URL = `${url.URL}/products/${id}`;\n\n    axios.get(URL)\n    .then(res => {\n      console.log('response:', res.data);\n      console.log('categoryName:', res.data.category.name);\n\n      setProduct(res.data); // the product object, including its category object\n      setCategory(res.data.category); // the associated category object\n    })\n    .catch(err => {\n      console.warn('ERRORS!!!:', err);\n      // setErrorMessage('Product not found');\n      props.history.push('/')\n    });\n  };\n\n\n  // ************ regardless of user loggin, check if the product is out of stock *************\n  // if yes, 1) show message, 2) disable AddtoCart button\n  // TESTED: if a button is disabled, won't be able to trigger click event handler\n  // let setButtonStatus(false);\n  // let inStockUI;\n  // if (product.stock <= 0){\n  //   setButtonStatus(true);\n  //   inStockUI = (\n  //     <span class=\"out-of-stock\">Sorry, this product is out of stock.</span>\n  //   );\n  // } else {\n  //   inStockUI = (<span>{product.stock} pcs</span>)\n  // }\n  // ************ // ************ // ************ // ************ // ************\n\n\n\n  // _handleChangeQuantity make sure quantity stored in state is <= stock\n  const _handleChangeQuantity = (event) => {\n    console.log('event.target.value:', event.target.value); // actual input quantity\n\n    // Only when a user is logged in,\n    // can the user toggle the button status based on user input quantity\n    if(jwt){\n      // if the user has added product into the cart, will get success message\n      // on next click on quantity, clear the message;\n      setSuccessAddToCartMessage('');\n\n      // TEST: typeof event.target.value is a string, need to parse it to integer!!!\n      let wantedQuantity = parseInt(event.target.value);\n      // console.log('type of wantedQuantity', typeof(wantedQuantity));\n\n      // check if the input quantity is more than actual stock\n      // since user can manually type in the amount\n      // ********************#TODO*********************\n      // this logic is not perfect\n      // should axios request the current cart data with the existing quantity(if any, by default = 0)\n      // then compare total requested quantity (wantedQuantity + existing cart quantity) with the product stock,\n      // currently, once post request, backend is checking the total requested quantity (existing + new) to make sure <= stock\n      // if not, would send back error to .catch()\n      // it's not perfect user experience, but at least currently, at the frontend\n      // make sure user's actual type-in value is <= stock number,\n      // will leave it for now due to tight deadline, but will refactor late\n      if (wantedQuantity > product.stock){\n        // 1) prompt message\n        setErrorMessage('Sorry, not enough stock.');\n        // 2) the input quantity doesn't count, reset state quantity to 0\n        setQuantity(1);\n        // 3) disable 'Add to Cart' button, cannot click\n        setButtonStatus(true);\n      } else {\n        setErrorMessage('');\n        setQuantity(wantedQuantity);\n        setButtonStatus(false);\n        setButtonText('Add to Cart');\n      }\n      console.log('wantedQuantity:', wantedQuantity);\n    }\n    // if a user is not logged in, do nothing, as the user cannot click 'Add to Cart'\n\n  }; //_handleChangeQuantity\n\n  console.log('stateQuantity:', quantity);\n  console.log('button disabled?:', buttonStatus);\n\n\n  // At this stage, have ensure that\n  // only when 1) user login & 2) input quantity <= stock\n  // that a user can click the 'Add to Cart' button!\n  const _handleAddToCart = (event) => {\n    // console.log(event);\n    console.log('clicked cart');\n    console.log('when click cart, stateQuantity', quantity);\n    console.log('when click cart, typeof stateQuantity', typeof(quantity));\n\n    // check if the state quantity is 0 or empty?\n    // if yes, propmt message, disable button and return early\n    if(!quantity){\n      console.log('when quantity === 0, it ran!');\n      setErrorMessage('Please select a quantity.')\n      setButtonStatus(true);\n      return;\n    }\n    // if not, then quantity is valid, send to the DB and add into the cart!\n    // const URL = \"https://toyshoppingsite.herokuapp.com/line_items\";\n    // const URL = \"http://localhost:3000/line_items\";\n    const URL = `${url.URL}/line_items`;\n    const product_id = product.id;\n    const data = {\n      line_item:{\n        product_id,\n        quantity\n      }\n    };\n    const configHeader = {\n      headers: {\n        Authorization: \"Bearer \" + jwt\n      }\n    };\n\n    axios.post(URL, data, configHeader)\n    .then(res => {\n      console.log('added to cart',res);\n\n      // 1) update localStorage's totalProductsNumberInCart\n      window.localStorage.setItem('totalProductsNumberInCart', res.data.total_products_number_in_cart);\n\n      // 2) pop up a msg to user, showing adding to cart successfully, with a link to cart page\n      setSuccessAddToCartMessage(`Successfully added to cart!`);\n\n      // 3) push to itself to trigger BootNav rerender and update shopping bag number\n      props.history.push(`/product/${id}`);\n    })\n    .catch(err => {\n      console.warn('ERROR of adding to cart', err);\n      setErrorMessage('Sorry, not enough stock.')\n    });\n  }; // _handleAddToCart\n\n  let showSuccessMessage = \"\";\n  if(successAddToCartMessage){\n    showSuccessMessage = (\n      <Link to={`/cart`} className=\"view-your-cart\">\n        <strong><p className = 'show-success-mesage'>\n          {successAddToCartMessage} {' '}\n          View your cart\n        </p></strong>\n      </Link>\n    )\n  }\n\n\n\n  return(\n    <Container>\n      <Row>\n        <Col sm md={7}>\n          <Figure>\n            <Figure.Image\n              fluid={true}\n              alt=\"500x500\"\n              src={process.env.PUBLIC_URL +`/images/${product.image}`}\n            />\n            <Figure.Caption>\n              {product.description}\n            </Figure.Caption>\n          </Figure>\n        </Col>\n        <Col sm md={5}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item><strong>{product.name}</strong></ListGroup.Item>\n            <ListGroup.Item>Category: {category.name}\n            </ListGroup.Item>\n            <ListGroup.Item>Price: {`$${product.price}`}</ListGroup.Item>\n            <ListGroup.Item>\n              <Form.Text className=\"errorMessage\">\n                {errorMessage}\n              </Form.Text>\n              Select Quantity:{' '}\n              <input type=\"number\" min=\"1\" max={product.stock} defaultValue=\"1\" onChange={_handleChangeQuantity}/>\n              <Form.Text>\n                (In stock: {product.stock})\n              </Form.Text>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button id=\"add-to-cart\" disabled={buttonStatus} onClick={_handleAddToCart}>{buttonText}</Button>\n            </ListGroup.Item>\n            <ListGroup.Item>{showSuccessMessage}</ListGroup.Item>\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport url from '../lib/url';\n\nimport Table from \"react-bootstrap/Table\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\n\n\n\nexport default function CartConfirm(props){\n\n  const jwt = localStorage.getItem('jwt');\n\n  const [lineItems, setLineItems] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  // const [totalProductsNumberInCart, setTotalProductsNumberInCart] = useState(window.localStorage.getItem('totalProductsNumberInCart'))\n  // const [quantity, setQuantity] = useState(0);\n  // const [product, setProduct] = useState({});\n\n  useEffect(()=>{\n    // const URL = `https://toyshoppingsite.herokuapp.com/cart`;\n    const URL = `${url.URL}/cart`;\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      },\n    };\n\n    // console.log('%c get CART', 'font-size: 20pt');\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log('response:', res.data); // an array of all line_item objects of the cart / current_user\n      setLineItems(res.data);\n    })\n    .catch(err => {\n      console.warn('SERVER ERROR:', err);\n      // if any error, e.g. unlogged in user send random request in address bar\n      // redirect to home page\n      props.history.push('/');\n    });\n  },[]);\n\n  // in case there's no line_items inside the cart of the current_user\n  let noLineItemsToShow = (\n    <tbody>\n      <tr>\n        <td>There's no item in your cart.</td>\n        <td> </td>\n        <td> </td>\n        <td> </td>\n        <td> </td>\n      </tr>\n    </tbody>\n  );\n\n\n  let subtotal = 0;\n  lineItems.forEach(li => {\n    subtotal += li.quantity * li.product.price;\n  })\n\n\n  const _handleUpdateQuantity = (event)=>{\n    event.preventDefault();\n    event.persist();\n    console.log(event);\n\n    const updatedQuantity = parseInt(event.target[0].value);\n    const lineItemId = parseInt(event.target[0].name);\n    console.log('updated quantity',updatedQuantity); // new quantity input\n    console.log('lineItemId',lineItemId); // product_id\n\n    // ******************LEARNING: ******************\n    // let currentProductStock;\n    // lineItems.forEach((li)=>{\n    //   if(li.product_id === lineItemId){\n    //     console.log('currentProductId', li.product_id);\n    //     currentProductStock = li.product.stock\n    //   }\n    // });\n    // console.log('currentProductStock', currentProductStock);\n    //\n    // // 1) double check if the updatedQuantity is <= currentProductStock\n    // // if no, pop up error message, and return early, no need to proceed\n    // // until the next updatedQuantity is a valid number, then do axios request\n    // if(updatedQuantity > currentProductStock){\n    //   setErrorMessage(`Sorry, only ${currentProductStock} in stock.`)\n    //   return;\n    // }\n    // ******************************************************\n\n    // APPARENTLY, the form input is very smart to check\n    // if the updatedQuantity(user input) is <= max && >= min\n    // ONE MORE THING !!!\n    if (isNaN(updatedQuantity)){\n      console.log('its NaN');\n      // POP UP MESSAGE:\n      setErrorMessage('Please select a quantity.')\n      // return early\n      return;\n    }\n    console.log('should not run if its NaN');\n\n    // if the above is clear,\n    // 1) clear errorMessage first\n    setErrorMessage('');\n    // 2) ideally, check if the updatedQuantity is the same as the existing quantity stored in line_item\n    // if yes, no need to send further axios request,\n    // but for now, it might be rare, leave this for refactor later.\n    // 3) send axios post request to DB, to update the single line_item\n    // axios.put(url[, data[, config]])\n    // const URL = `https://toyshoppingsite.herokuapp.com/line_items/${lineItemId}`;\n    const URL = `${url.URL}/line_items/${lineItemId}`;\n    const data = {\n      line_item: {\n        quantity: updatedQuantity\n      }\n    };\n    const configHeader = {\n      headers: {\n        Authorization: \"Bearer \" + jwt\n      }\n    };\n\n    axios.put(URL, data, configHeader)\n    .then(res => {\n      console.log('response from server:', res.data); // an array of all line_item objects of the cart / current_user\n\n      // 1) update localStorage totalProductsNumberInCart\n      updateTotalProductsNumberInCart(res.data);\n\n      // 2) update the state: lineItems\n      // DB send back the whole array of line_item objects, including its product association\n      // the whole page will re-render with updated state\n      setLineItems(res.data);\n\n      // 3) push to itself which will trigger BootNav to rerender,\n      // in order to show updated number in top right corner shopping bag\n      // Though get warning in console:\n      // Warning: Hash history cannot PUSH the same path; a new entry will not be added to the history stack\n      // it won't go to a new page, but did trigger BootNav to re-render\n      props.history.push('/cart');\n\n    })\n    .catch(err => {\n      console.warn('ERROR of updating quantity', err);\n      setErrorMessage('Sorry, not enough stock.')\n    });\n\n  }\n\n\n\n  const _handleRemoveLineItem = (event) => {\n    event.persist();\n    console.log('click image', event);\n    console.log('lineItemId', event.target.name);\n    // console.log('typeof', typeof(event.target.name));\n\n    const lineItemId = parseInt(event.target.name);\n    // console.log('typeof', typeof(lineItemId));\n\n    // send delete request to DB with line_item id\n    // axios.delete(url[, config])\n    // const URL = `https://toyshoppingsite.herokuapp.com/line_items/${lineItemId}`;\n    const URL = `${url.URL}/line_items/${lineItemId}`;\n\n    const configHeader = {\n      headers: {\n        Authorization: \"Bearer \" + jwt\n      }\n    };\n\n    axios.delete(URL, configHeader)\n    .then(res => {\n      console.log('DELETE response:', res.data);\n      // after deleting, send back a new line_items array to update state!\n\n      // 1) update localStorage totalProductsNumberInCart\n      updateTotalProductsNumberInCart(res.data);\n\n      // 2) update the state: lineItems\n      setLineItems(res.data);\n\n      // 3) push to itself which will trigger BootNav to rerender\n      props.history.push('/cart');\n\n    })\n    .catch(err => {\n      console.warn('ERRORS!!!:', err);\n    });\n  };\n\n\n\n  const updateTotalProductsNumberInCart = ( updatedLineItems ) => {\n\n    // 1) if there's no line item left in the cart, empty array\n    // update localStorage, totalProductsNumberInCart = 0\n    if(updatedLineItems.length === 0){\n      console.log('totalProductsNumberInCart', 0);\n      window.localStorage.setItem('totalProductsNumberInCart', 0);\n    } else {\n      let updatedTotalProductsNumberInCart = 0;\n\n      updatedLineItems.forEach(li => {\n        updatedTotalProductsNumberInCart += li.quantity;\n      });\n\n      console.log('updatedTotalProductsNumberInCart:', updatedTotalProductsNumberInCart);\n\n      // update localStorage with the new totalProductsNumberInCart\n      window.localStorage.setItem(\n        'totalProductsNumberInCart',\n        updatedTotalProductsNumberInCart\n      );\n    };\n  };\n\n\n  return(\n    <Table striped hover responsive=\"md\">\n      <thead>\n        <tr>\n          <th className=\"cart-label\"><strong>My Cart</strong></th>\n          <th className=\"cart-label\"><strong>Item</strong></th>\n          <th className=\"cart-label\"><strong>Quantity</strong></th>\n          <th className=\"cart-label\"><strong>Price</strong></th>\n          <th className=\"cart-label\"><strong>Total</strong></th>\n        </tr>\n      </thead>\n\n      { // if there's no line_items in the cart\n       !lineItems.length\n       ?\n       noLineItemsToShow\n       :\n      (\n        <tbody>\n          {lineItems.map(li => (\n            <tr key={li.product.name}>\n              <td>\n                <Link to={`/product/${li.product_id}`}>\n                  <Image\n                    className=\"cart-thumbnail\"\n                    src={process.env.PUBLIC_URL +`/images/${li.product.image}`}\n                    thumbnail\n                  />\n                </Link>\n              </td>\n\n              <td className=\"product-name\"><br/><strong>{li.product.name}</strong></td>\n\n              <td>\n                <form className=\"quantity-update change-quantity\" onSubmit={_handleUpdateQuantity}>\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    max={li.product.stock}\n                    name={li.id}\n                    defaultValue={li.quantity}\n                  /> {' '}\n                  <input\n                    type=\"submit\"\n                    className=\"update-quantity\"\n                    value=\"Update\"\n                    disabled={false}\n                  /> {' '}\n                </form>\n                <Image\n                  name={li.id}\n                  className=\"trash change-quantity\"\n                  src={process.env.PUBLIC_URL + '/images/small-trash.png'}\n                  title=\"Remove\"\n                  onClick={_handleRemoveLineItem}\n                  fluid\n                />\n              </td>\n\n              <td><br/><strong>${li.product.price}</strong></td>\n\n              <td><br/><strong>${li.quantity * li.product.price}</strong></td>\n            </tr>\n           ))\n          }\n          <tr>\n            <td> </td>\n            <td> </td>\n            <td>\n              <p className=\"errorMessage\">\n                {errorMessage}\n              </p>\n            </td>\n            <td><strong className=\"cart-label\">Subtotal: </strong></td>\n            <td><strong className=\"cart-label\">${subtotal}</strong></td>\n          </tr>\n          <tr>\n            <td> </td>\n            <td> </td>\n            <td> </td>\n            <td> </td>\n            <td>\n              <Link to={'/checkout'}>\n                <Button id=\"checkout\">Check Out</Button>\n              </Link>\n            </td>\n          </tr>\n        </tbody>\n      )}\n    </Table>\n  );\n} // CartConfirm\n\n\n\n\n\n\n// <div className=\"errorMessage\">{errorMessage}</div>\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport url from '../lib/url';\n\nimport Table from \"react-bootstrap/Table\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function CheckOut(props){\n  const jwt = localStorage.getItem('jwt');\n\n  const [lineItems, setLineItems] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  // const [quantity, setQuantity] = useState(0);\n  // const [product, setProduct] = useState({});\n\n  useEffect(()=>{\n    // const URL = `https://toyshoppingsite.herokuapp.com/cart`;\n    const URL = `${url.URL}/cart`;\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      },\n    };\n\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log('response:', res.data); // an array of all line_item objects of the cart / current_user\n      setLineItems(res.data);\n    })\n    .catch(err => {\n      console.warn('SERVER ERROR:', err);\n      // if any error, e.g. unlogged in user send random request in address bar\n      // redirect to home page\n      props.history.push('/');\n    });\n  },[]);\n\n  let subtotal = 0;\n  lineItems.forEach(li => {\n    subtotal += li.quantity * li.product.price;\n  })\n\n  return(\n    <Table responsive=\"md\">\n      <thead>\n        <tr>\n          <th className=\"cart-label\">\n            <strong>Confirm order</strong>\n          </th>\n          <th className=\"cart-label\"><strong>Item</strong></th>\n          <th className=\"cart-label\"><strong>Quantity</strong></th>\n          <th className=\"cart-label\"><strong>Price</strong></th>\n          <th className=\"cart-label\"><strong>Total</strong></th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {lineItems.map(li => (\n          <tr key={li.product.name}>\n            <td>\n              <Link to={`/product/${li.product_id}`}>\n                <Image className=\"cart-thumbnail\" src={process.env.PUBLIC_URL + `/images/${li.product.image}`} thumbnail />\n              </Link>\n            </td>\n            <td><strong>{li.product.name}</strong></td>\n            <td><strong>{li.quantity}</strong></td>\n            <td><strong>${li.product.price}</strong></td>\n            <td><strong>${li.quantity * li.product.price}</strong></td>\n          </tr>\n        ))\n      }\n        <tr>\n          <td> </td>\n          <td> </td>\n          <td>\n            <Link to={'/cart'} id=\"back-to-cart\">\n              <strong>\n                Back to cart\n              </strong>\n            </Link>\n          </td>\n          <td><strong className=\"cart-label\">Subtotal: </strong></td>\n          <td><strong className=\"cart-label\">${subtotal}</strong></td>\n        </tr>\n        <tr>\n          <td> </td>\n          <td> </td>\n          <td> </td>\n          <td> </td>\n          <td>\n            <Link to={'/payment'}>\n              <Button id=\"pay-by-card\">Pay by Card</Button>\n            </Link>\n          </td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport url from '../lib/url';\n\nimport Table from \"react-bootstrap/Table\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\n\n\n\n\nexport default function Order(props){\n\n  const orderId = props.match.params.id\n  console.log('orderId', orderId);\n  const jwt = localStorage.getItem('jwt');\n\n  const [lineItems, setLineItems] = useState([]);\n\n  const [show, setShow] = useState(true);\n\n  useEffect(() => {\n    // const URL = `https://toyshoppingsite.herokuapp.com/order/${orderId}`;\n    const URL = `${url.URL}/order/${orderId}`;\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      }\n    };\n\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log(res.data);\n      setLineItems(res.data);\n    })\n    .catch(err => {\n      console.warn('ERROR', err);\n    });\n  },[]);\n\n  let subtotal = 0;\n  lineItems.forEach(li => {\n    subtotal += li.quantity * li.product.price;\n  })\n\n\n  return(\n    <div>\n      <div className=\"success-purchase\">\n        <strong>Thanks for Purchase!</strong> {' '}\n        <Link className=\"success-purchase-link\" to={'/category/4'}>\n          <strong>Find More Toys?!</strong>\n        </Link>\n      </div>\n      <Table responsive=\"md\">\n        <thead>\n          <tr>\n            <th className=\"cart-label\">\n              <strong>Your Order</strong>\n            </th>\n            <th className=\"cart-label\"><strong>Item</strong></th>\n            <th className=\"cart-label\"><strong>Quantity</strong></th>\n            <th className=\"cart-label\"><strong>Price</strong></th>\n            <th className=\"cart-label\"><strong>Total</strong></th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {lineItems.map(li => (\n            <tr key={li.product.name}>\n              <td>\n                <Link to={`/product/${li.product_id}`}>\n                  <Image className=\"cart-thumbnail\" src={process.env.PUBLIC_URL + `/images/${li.product.image}`} thumbnail />\n                </Link>\n              </td>\n              <td><strong>{li.product.name}</strong></td>\n              <td><strong>{li.quantity}</strong></td>\n              <td><strong>${li.product.price}</strong></td>\n              <td><strong>${li.quantity * li.product.price}</strong></td>\n            </tr>\n          ))\n        }\n          <tr>\n            <td> </td>\n            <td> </td>\n            <td> </td>\n            <td><strong className=\"cart-label\">Subtotal: </strong></td>\n            <td><strong className=\"cart-label\">${subtotal}</strong></td>\n          </tr>\n          <tr>\n            <td> </td>\n            <td> </td>\n            <td> </td>\n            <td> </td>\n            <td>\n              <Link to={'/category/4'}>\n                <Button className=\"back-to-home\">Find More Toys</Button>\n              </Link>\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n\n\n\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport url from '../lib/url';\nimport {Link} from 'react-router-dom';\n\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\n\nexport default function SearchResults(props){\n\n  // BootNav has ensured this keyWord is not empty before redirect to this route\n  const keyWord = props.match.params.q\n\n  const [products, setProducts] = useState([]);\n  const [message, setMessage] = useState('');\n\n  console.log('keyword:', keyWord);\n\n  // first time the component renders\n  useEffect(() => {\n    // call pre-determined function to get search results\n    getSearchResults();\n  },[keyWord]);\n\n\n  const getSearchResults = () => {\n    // send axios request to server for search\n    const URL = `${url.URL}/search/${keyWord}`;\n    // no need of user login, so no jwt is needed in the request\n    axios.get(URL)\n    .then(res => {\n      // console.log('Search Result:', res);\n      console.log('Matching products:', res.data); // an array of matching products\n\n      if(res.data.length === 0){\n        console.log('Sorry, No Results Found.');\n        setMessage('Sorry, No Results Found.');\n        setProducts([])\n      } else {\n        setProducts(res.data);\n\n        const toyNumber = res.data.length;\n\n        toyNumber === 1\n        ?\n        setMessage(`Found (${res.data.length}) toy!`)\n        :\n        setMessage(`Found (${res.data.length}) toys!`)\n      }\n    })\n    .catch(res => {\n      console.warn('Search failed:', res);\n    });\n  };\n\n  let whatToShow;\n  if(products.length === 0){\n    whatToShow = (\n      <Row className=\"found-no-toys-row\">\n        <h5 className=\"found-result\">{message}</h5>\n      </Row>\n    );\n  } else {\n    whatToShow = (\n      <Row className=\"found-toys-row\">\n        <h5 className=\"found-result\">{message}</h5>\n      </Row>\n    );\n  }\n\n  return(\n    <Container>\n      {whatToShow}\n\n      <Row>\n        {\n          products.map(product => (\n            <Col sm={12} md={4} style={{margin: '1rem 0'}} key={product.name}>\n              <Card className=\"card-background\">\n                <Link to={`/product/${product.id}`}>\n                  <Card.Img\n                    variant=\"top\"\n                    src={process.env.PUBLIC_URL + `/images/${product.image}`}\n                    height={300}\n                  />\n                </Link>\n                <Card.Body>\n                  <Card.Title style={{color: 'grey', fontWeight: 600}}>{product.name}</Card.Title>\n                  <Card.Text style={{color: 'grey'}}>\n                    Price: ${product.price} <br/>\n                    In Stock: ${product.stock} <br/>\n                    {product.description}\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))\n        }\n      </Row>\n    </Container>\n  );\n}\n","// import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport Routes from './routes';\n\n\n\nReactDOM.render(Routes, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}