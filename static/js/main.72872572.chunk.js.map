{"version":3,"sources":["serviceWorker.js","lib/url.js","components/SignUpForm.jsx","components/ModalSignUp.jsx","components/LogInForm.jsx","components/ModalLogIn.jsx","components/GoogleMaps.jsx","components/ModalHint.jsx","components/CheckoutFormTODO.js","components/Payment.js","routes.js","components/BootNav.jsx","components/Home.jsx","components/About.jsx","components/MyAccount.jsx","components/Category.jsx","components/Product.jsx","components/CartConfirm.jsx","components/CheckOut.jsx","components/Order.jsx","components/SearchResults.jsx","index.js"],"names":["Boolean","window","location","hostname","match","url","URL","withRouter","props","_useState","useState","_useState2","Object","slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","pwConfirmation","setPwConfirmation","_useState9","_useState10","errorMessage","setErrorMessage","resetErrorMessageIfAnyTypedValue","event","target","value","length","getTokenAndRedirect","concat","data","auth","axios","post","then","res","console","log","localStorage","setItem","jwt","onHide","history","go","catch","err","warn","renderErrorMessage","react_default","a","createElement","map","error","Form_default","Text","key","className","onSubmit","preventDefault","user","password_confirmation","response","errors","Group","controlId","Label","Control","type","placeholder","onChange","Button_default","variant","ModalSignUp","modalShow","setModalShow","ButtonToolbar_default","onClick","SignUpVerticallyCenteredModal","show","Modal_default","assign","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","components_SignUpForm","performLogIn","getCartAndUserInfoAndRedirect","configHeader","headers","Authorization","getItem","get","products_number","current_user_name","current_user_email","ModalLogIn","LogInVerticallyCenteredModal","components_LogInForm","MapContainer","_Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","marker","setState","selectedPlace","activeMarker","showingInfoWindow","state","stores","coords","lat","lng","directionURL","inherits","createClass","_this2","dist","google","zoom","style","width","height","border","initialCenter","store","index","position","visible","href","Component","GoogleApiWrapper","apiKey","ModalHint","ModalHint_LogInVerticallyCenteredModal","CheckoutForm","message","submit","bind","assertThisInitialized","stripe","createToken","token","charge","stripeToken","statusText","moveLineItemsFromCartToOrderAndUpdateStock","orderId","push","Container_default","Row_default","Col_default","es","injectStripe","Payment","CheckoutFormTODO","Routes","react_router_dom","react_router","path","component","buttonLeft","buttonRight","keyWord","setKeyWord","totalProductsNumberInCart","setTotalProductsNumberInCart","currentProductsNumberInCart","useEffect","to","removeItem","Navbar_default","sticky","expand","Brand","src","process","alt","Toggle","aria-controls","Collapse","Nav_default","Dropdown_default","Menu","NavDropdown_default","Item","inline","FormControl_default","exact","lg","padding","Carousel_default","Image_default","fluid","textAlign","md","sm","margin","GoogleMaps","orders","setOrders","userName","userEmail","Table_default","striped","hover","Accordion_default","defaultActiveKey","Card_default","order","as","Card","eventKey","order_created_at_date_formatted","order_total_amount","line_items","li","product_id","product","image","price","quantity","params","products","setProducts","getProductsOfCategory","color","Figure_default","Image","Caption","stock","description","setProduct","category","setCategory","setQuantity","buttonStatus","setButtonStatus","_useState11","_useState12","buttonText","setButtonText","_useState13","_useState14","successAddToCartMessage","setSuccessAddToCartMessage","getProductById","showSuccessMessage","ReactImageMagnify","smallImage","isFluidWidth","largeImage","isHintEnabled","shouldHideHintAfterFirstActivation","min","max","defaultValue","wantedQuantity","parseInt","disabled","line_item","total_products_number_in_cart","lineItems","setLineItems","noLineItemsToShow","responsive","maxWidth","total","forEach","_handleUpdateQuantity","persist","updatedQuantity","lineItemId","isNaN","put","updateTotalProductsNumberInCart","_handleRemoveLineItem","delete","updatedLineItems","updatedTotalProductsNumberInCart","thumbnail","title","components_Payment","class","q","setMessage","getSearchResults","whatToShow","toyNumber","Img","fontWeight","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72872572.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// when local test!\n// const URL = 'http://localhost:3000';\n\n// when deployment, change to below\nconst URL = \"https://toyshoppingsite.herokuapp.com\";\n\nexport default{\n  URL\n};\n","import React, {useState} from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport url from '../lib/url';\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction SignUpForm(props){\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [pwConfirmation, setPwConfirmation] = useState('');\n  const [errorMessage, setErrorMessage] = useState([]);\n\n  const resetErrorMessageIfAnyTypedValue = (event) => {\n    if(event.target.value.length > 0){\n      setErrorMessage([]);\n    }\n  };\n\n  const _handleNameChange = (event) => {\n    resetErrorMessageIfAnyTypedValue(event);\n    setName(event.target.value);\n  };\n\n  const _handleEmailChange = (event) => {\n    resetErrorMessageIfAnyTypedValue(event);\n    setEmail(event.target.value);\n  };\n\n  const _handlePasswordChange = (event) => {\n    resetErrorMessageIfAnyTypedValue(event);\n    setPassword(event.target.value);\n  };\n\n  const _handlePasswordConfirmation = (event) => {\n    resetErrorMessageIfAnyTypedValue(event);\n    setPwConfirmation(event.target.value)\n  };\n\n  // 1) create user, 2) get jwt\n  const _handleSubmit = (event) => {\n    event.preventDefault();\n\n    // const URL = \"https://toyshoppingsite.herokuapp.com/signup\";\n    const URL = `${url.URL}/signup`;\n\n    const data = {\n      user:{\n        name,\n        email,\n        password,\n        password_confirmation: pwConfirmation\n      }\n    };\n\n    axios.post(URL, data)\n    .then(res => {\n      console.log('created user!', res);\n      getTokenAndRedirect();\n    })\n    .catch(err => {\n      console.warn('SignUp ERROR!!!', err.response.data.errors); // an array of errors\n      setErrorMessage(err.response.data.errors)\n    });\n  }\n\n// *********************************************\n  const getTokenAndRedirect = () => {\n    // const URL = \"https://toyshoppingsite.herokuapp.com/user_token\";\n    const URL = `${url.URL}/user_token`;\n    const data = {\n      auth: {\n        email,\n        password\n      }\n    };\n\n    axios.post(URL, data)\n    .then(res => {\n      console.log('response from server:', res, props);\n      // once login success\n      // 1) store jwt token in the localStorage\n      window.localStorage.setItem('jwt', res.data.jwt);\n      // 2) store cart line_item number into localStorage\n      // in order to show on the top right - shopping bag\n      // as the user just signed up, the cart's line items number should be \"0\"\n      window.localStorage.setItem('totalProductsNumberInCart', 0);\n      // 3) store user name + email into localStorage\n      window.localStorage.setItem('userName', name);\n      window.localStorage.setItem('userEmail', email);\n      // 4) hide the modal\n      props.onHide();\n      // 5) couldn't find a way to rerender the current route,\n      // thus, use .go() to refresh current page!\n      props.history.go(0);\n    })\n    .catch(err => {\n      // if any error, update state and print out in UI\n      console.warn('LOGIN TOKEN ERROR:', err);\n      setErrorMessage(['Error connecting to server'])\n    });\n  }\n\n  // TEST:\n  // console.log('name:', name);\n  // console.log('email:', email);\n  // console.log('password:', password);\n  // console.log('pwConfirmation:', pwConfirmation);\n  // console.log('errorMessage', errorMessage);\n\n  const renderErrorMessage = (\n    <div>\n      {errorMessage.map(error => (\n        <Form.Text key={error} className=\"errorMessage\">\n          {error}\n        </Form.Text>\n        )\n      )}\n    </div>\n  )\n\n  return(\n    <Form onSubmit={_handleSubmit}>\n      {renderErrorMessage}\n      <Form.Group controlId=\"signUpFormBasicName\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"name\" placeholder=\"enter your name\" onChange={_handleNameChange}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"signUpFormBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"enter email\" onChange={_handleEmailChange}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"signUpFormBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"enter password\" onChange={_handlePasswordChange}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"signUpFormPasswordConfirmation\">\n        <Form.Label>Password Confirmation</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"enter password again\" onChange={_handlePasswordConfirmation}/>\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Sign Up\n      </Button>\n    </Form>\n  );\n}\n\nexport default withRouter(SignUpForm);\n","import React, {useState} from 'react';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\n\nimport SignUpForm from \"./SignUpForm\";\n\n\n\nexport default function ModalSignUp(props){\n\n  const[modalShow, setModalShow] = useState(false);\n\n  // console.log('Re-rendered ModalSignUp!!');\n\n  return(\n    <ButtonToolbar>\n      <Button className=\"btn-space\" variant=\"warning\" onClick={() => setModalShow(true)}>\n        SignUp\n      </Button>\n\n      <SignUpVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </ButtonToolbar>\n  );\n}\n\n// functional component\nfunction SignUpVerticallyCenteredModal(props) {\n  return(\n    <Modal\n    {...props}\n    size=\"sm\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Sign Up\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <SignUpForm onHide={props.onHide}/>\n      </Modal.Body>\n    </Modal>\n  );\n}\n","import React, {useState} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport url from '../lib/url';\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n// import FormText from \"react-bootstrap/FormText\";\n\n\nfunction LogInForm(props){\n  //use hook to replace this.state\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n\n  const _handleEmailChange = (event) => {\n    if(event.target.value.length > 0){\n      setErrorMessage('');\n    }\n    // event.persist();\n    // console.log(event);\n    // console.log('changed email:', event.target.value); // input value - ok!\n    setEmail(event.target.value);\n  };\n\n  const _handlePasswordChange = (event) => {\n    if(event.target.value.length > 0){\n      setErrorMessage('');\n    }\n    setPassword(event.target.value);\n  };\n\n  const _handleSubmit = (event) => {\n    event.preventDefault();\n    if(email.length === 0 || password.length === 0){\n      setErrorMessage('Please enter an email and password')\n    } else {\n      performLogIn();\n    }\n  };\n\n  // console.log(errorMessage);\n\n  const performLogIn = () => {\n    // console.log('email:', email);\n    // console.log('password:', password); // tested ok!\n    // const URL = \"https://toyshoppingsite.herokuapp.com/user_token\";\n    // const URL = \"http://localhost:3000/user_token\";\n    const URL = `${url.URL}/user_token`;\n    const data = {\n      auth: {\n        email,\n        password\n      }\n    };\n    // example:\n    // {\"auth\":\n    //   {\"email\": \"foo@bar.com\",\n    //     \"password\": \"secret\"\n    //   }\n    // }\n\n    axios.post(URL, data)\n    .then(res => {\n      console.log('response from server:', res, props);\n      // once login success\n      // 1) store jwt token in the localStorage\n      window.localStorage.setItem('jwt', res.data.jwt);\n      // 2) send another axios request to get the cart & user info from DB, to save in localStorage\n      getCartAndUserInfoAndRedirect();\n\n    })\n    .catch(err => {\n      // if any error, update state and print out in UI\n      console.warn('!!!ERROR:', err);\n      setErrorMessage('Invalid email or password')\n    });\n  };\n\n  // once a user has logged in, either\n  // 1) along with the login token, send back user cart's line_items\n  // 2) or, send another axios request to get the line_items information\n  // to store inside localStorage to show the shopping cart item number!\n  const getCartAndUserInfoAndRedirect = ()=>{\n    console.log('send another axios request!');\n\n    // send another axios request to get user info + user cart's line_items number\n    const URL = `${url.URL}/user`;\n\n    const jwt = localStorage.getItem('jwt');\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      },\n    };\n\n    // console.log('%c get CART', 'font-size: 20pt');\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log('second axios response:', res);\n\n      // 1, store cart totalProductsNumberInCart into localStorage\n      // in order to show on the top right - shopping bag\n      window.localStorage.setItem('totalProductsNumberInCart', res.data.products_number);\n\n      // 2, store user name + email into localStorage\n      window.localStorage.setItem('userName', res.data.current_user_name);\n      window.localStorage.setItem('userEmail', res.data.current_user_email);\n\n      // 3, hide the modal\n      props.onHide();\n\n      // 4, go(n) - (function) Moves the pointer in the history stack by n entries\n      // use props.history.go to force to go to the specified route, even it's the current route path, as it's forcing to REFRESH the page!!!\n      // so that it will trigger the current route page to re-render\n      // e.g. user in the product page and after login, stay in the same product page, but with everything enabled after login / page re-render\n      // meanwhile, .go() also triggers BootNav to rerender to update shopping bag number on top right corner\n      // 0 means the current entry - the newest entry in the history stack\n      // stack, last in first out, thus, the current entry (the lastest entry) is the first to go out, stays at the beginning of the stack!\n      props.history.go(0);\n    })\n    .catch(err => {\n      // very rare for error to appear here\n      // since the user has just logged in, a cart should already been created when the user initially signed up\n      // user's info + cart info should be retrieved fine.\n      console.warn('SERVER ERROR:', err);\n    });\n  };\n\n  //\n  // // TEST & LEARN:\n  // // if state (email / password's value) changes, then the whole function component will run again!\n  // // thus, the below line runs everytime the typed-in email's value changes!\n  // console.log('normal console.log', email);\n  // // Also, can use useEffect to catch the change of state\n  // useEffect(()=> console.log('useEffect:', email), [email]);\n  // console.log('currentPassword:', password);\n\n\n  return(\n    <Form onSubmit={_handleSubmit}>\n      <Form.Text className=\"errorMessage\">\n        {errorMessage}\n      </Form.Text>\n      <Form.Group controlId=\"loginFormBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"enter email\" onChange={_handleEmailChange}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"loginFormBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"enter password\" onChange={_handlePasswordChange}/>\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Log In\n      </Button>\n    </Form>\n  );\n}\n\n// using Curl in the bash to test - SUCCESS!\n// curl -X POST \"https://toyshoppingsite.herokuapp.com/user_token\" -d '{\"auth\": {\"email\": \"lily@lily.com\", \"password\": \"chicken\"}}' -H \"Content-Type: application/json\"\n\n\nexport default withRouter(LogInForm);\n","import React, {useState} from 'react';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\n\nimport LogInForm from \"./LogInForm\";\n\n\n\nexport default function ModalLogIn(props){\n\n  const[modalShow, setModalShow] = useState(false);\n\n  return(\n    <ButtonToolbar>\n      <Button className=\"btn-space\" variant=\"info\" onClick={() => setModalShow(true)}>\n        LogIn\n      </Button>\n\n\n      <LogInVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </ButtonToolbar>\n  );\n}\n\n// functional component\nfunction LogInVerticallyCenteredModal(props) {\n  return(\n    <Modal\n    {...props}\n    size=\"sm\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Log In\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <LogInForm\n          onHide={props.onHide}\n        />\n      </Modal.Body>\n    </Modal>\n  );\n}\n","import React, {Component} from 'react';\nimport {Map, GoogleApiWrapper, Marker, InfoWindow} from 'google-maps-react';\n\nexport class MapContainer extends Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      stores: [\n        {\n          coords: {lat:-33.8717, lng:151.2067},\n          name: \"V's Toy - The QVB\",\n          location: \"455 George St, Sydney NSW 2000\",\n          directionURL: \"https://www.google.com/maps/place/455+George+St,+Sydney+NSW+2000/@-33.8721094,151.2045493,17z/data=!3m1!4b1!4m5!3m4!1s0x6b12ae3e8d0f5583:0xd8cb208eb31f2b0d!8m2!3d-33.8721139!4d151.206738\"\n        },\n        {\n          coords: {lat:-33.8597, lng:151.2082},\n          name: \"V's Toy - The Rocks\",\n          location: \"80 George St, The Rocks NSW 2000\",\n          directionURL: \"https://www.google.com/maps/place/80+George+St,+The+Rocks+NSW+2000/@-33.857201,151.2066144,17z/data=!3m1!4b1!4m5!3m4!1s0x6b12ae5d3ff9500b:0xaeebeb77916477b2!8m2!3d-33.8572055!4d151.2088031\"\n        }\n      ],\n      selectedPlace: {},\n      activeMarker:{},\n      showingInfoWindow: false,\n    };\n  }\n\n  handleClick = (props, marker, event) => {\n    // tested, all the above three parameters are inbuilt properties of Marker event handler\n    console.log('props:', props);\n    console.log('marker:', marker);\n    console.log('event:', event);\n\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n  }\n\n\n  render(){\n\n    const mapStyles = {\n      width: \"90%\",\n      height: \"73vh\",\n      border: \"orange dashed\",\n    };\n\n    return(\n      <Map\n        google = {this.props.google}\n        zoom = {14}\n        style = {mapStyles}\n        initialCenter = {{lat: -33.8660, lng: 151.2056}}\n      >\n\n        {\n          this.state.stores.map((store, index) => {\n            return(\n                <Marker key={index} id={index} position={store.coords}\n                  onClick={this.handleClick}\n                  name={store.name}\n                  directionURL={store.directionURL}\n                  location={store.location}\n                />\n            )\n          })\n        }\n\n        <InfoWindow\n          marker = {this.state.activeMarker}\n          visible = {this.state.showingInfoWindow}>\n          <div>\n            <h5 className=\"info-window\"><i>{this.state.selectedPlace.name}</i></h5>\n            <p>{this.state.selectedPlace.location}</p>\n            <a href={this.state.selectedPlace.directionURL} target=\"_blank\">\n              How to get here?\n            </a>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBXG0-gC8Yje8zYu6RJlMYVT6oX5TeEjLA'\n})(MapContainer);\n","import React, {useState} from 'react';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function ModalHint(props){\n\n  const[modalShow, setModalShow] = useState(false);\n\n\n  return(\n    <ButtonToolbar className=\"hint-button-container\">\n      <button className=\"hint-button\" onClick={() => setModalShow(true)}>\n        <h5>Hint</h5>\n      </button>\n\n      <LogInVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </ButtonToolbar>\n  );\n}\n\n// functional component\nfunction LogInVerticallyCenteredModal(props) {\n  return(\n    <Modal\n    {...props}\n    size=\"sm\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          About Payment\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"note\">\n        <p><small>\n          Hi there, <br/>\n          We are using Stripe test environment.<br/>\n          Please select from the below cards to proceed.\n        </small></p>\n        <p><small>\n          <strong>Visa: 4242 4242 4242 4242</strong>\n        </small></p>\n        <p><small>\n          <strong>Mastercard: 5555 5555 5555 4444</strong>\n        </small></p>\n        <p><small>\n          <strong>American Express: 3782 822463 10005</strong>\n        </small></p>\n        <p><small>\n          <strong>\n          * a valid expiration date in the future <br/>\n          * any random CVC number\n          </strong>\n        </small></p>\n      </Modal.Body>\n    </Modal>\n  );\n}\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {CardElement, injectStripe} from 'react-stripe-elements';\nimport axios from 'axios';\nimport url from '../lib/url';\nimport ModalHint from './ModalHint';\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\n\nclass CheckoutForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message:''\n    };\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit(event) {\n    // LEARNING:\n    // DOCS:\n    // 1) The injectStripe function wraps the component, creating a new component with an injected stripe prop, which contains a Stripe object.\n    // MEANING: wrapped inside the injectStripe() function, CheckoutForm component gets a 'stripe' prop whose value is a stripe object => this.props.stripe\n    // this stripe object has many methods, and one of them is createToken(), used to tokenize the credential card info\n    // 2) https://stripe.com/docs/stripe-js/reference#stripe-create-token\n    // tokenData, an object containing additional payment information you might have collected, and it's highly recommended collecting name and address\n    // name should use the user's signup name!\n    // 2.5) tested: if not passing any argument to .createToken(), it still generates token\n    // however, as highly recommended by docs, collecting name and address can be used to perform a number of verifications, such as CVC, ZIP, and address verification!!!\n    let {token} = await this.props.stripe.createToken({name: \"Name\"});\n    // ********************** TODO: **********************\n    // 1, when a user login, send back user name for Stripe token creation + cart line_items info for updating top right corner cart items number, and store both in localStorage\n    // 2, when a user signup, store user name directly in localStorage, set cart item number as (0), later when add line items to cart, will need to update localStorage cart item number info!\n    // 3, when log out, clear localStorage, user name + cart info + jwt\n    // ***************************************************\n\n    // 3) the below line won't run, until the above line created a token and stored into the variable 'token', -> that's what await does!!!\n    console.log('****** token *****', token); // tested fine!\n\n    // some invalid card number will be recognised by stripe automatically during user input,\n    // while some numbers cannot generate Stripe token at all.\n    // to avoid crash, insert message and return function.\n    if(!token){\n      this.setState({\n        message:'Invalid card information. Please contact your card issuer for more details.'\n      });\n      return;\n    }\n\n    console.log('****** This is Stripe Token: *****', token.id); // tested fine!\n\n    // Only after the above token is generated, will then run the below code and post the data including the token to server, to actually make the charge!\n\n    // const URL = `https://toyshoppingsite.herokuapp.com/charge`;\n    const URL = `${url.URL}/charge`; // for test\n\n    const jwt = localStorage.getItem('jwt');\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt\n      }\n    };\n\n    const data = {\n      charge: {\n        stripeToken: token.id\n      }\n    };\n\n    axios.post(URL, data, configHeader)\n    .then(res => {\n      console.log('stripe response', res);\n      console.log('stripe response', res.statusText);\n\n      // 1, payment successful\n      if (res.statusText == \"OK\"){\n\n        // 1> frontend, reset localStorage totalProductsNumberInCart, to be reused!\n        // so that when redirect to the new route after payment,\n        // BootNav rerenders and top right corner shopping bag number changes back to \"0\"\n        localStorage.setItem('totalProductsNumberInCart', 0);\n\n        // 2> backend, send request to server to change DB\n        // 1) move line_items from cart into order\n        // 2) also update product stock!\n\n        // 3> at last redirect to order page!\n        // ********** TODO: **************\n        // doing the below in a separate axios request as previously have already built the below process based on faking Successful payment\n        // will need to minimise the axios request and do logic process at the backend in one step once payment is successful.\n        // for now, using the already built process as a separate step due to tight deadline\n        moveLineItemsFromCartToOrderAndUpdateStock();\n      }\n    })\n    .catch(err => {\n      console.warn('stripe error', err.response);\n      this.setState({\n        message: 'Transaction unsuccessful. Please contact your card issuer for more details.'\n      });\n    });\n\n\n    const moveLineItemsFromCartToOrderAndUpdateStock = () => {\n      const URL = `${url.URL}/order`;\n\n      const jwt = localStorage.getItem('jwt');\n\n      const configHeader = {\n        headers: {\n          Authorization: 'Bearer ' + jwt,\n        },\n      };\n\n      axios.get(URL, configHeader)\n      .then(res => {\n        console.log('response of success order id:', res.data.id);\n\n        // get the order_id from response, and redirect!\n        const orderId = res.data.id\n        // 1) if order succeed, redirect to order page, and show messages there!\n        this.props.history.push(`/order/${orderId}`)\n      })\n      .catch(err => {\n        // 2) if order failed, show message like out of order!\n        console.warn('ERROR!', err);\n      });\n    };\n  };\n\n\n\n  render(){\n    let errorMessage = (\n      <p className=\"checkout-errorMessage\"><small>\n        {this.state.message}\n      </small></p>\n    );\n\n    return (\n      <div className=\"payment-form\">\n        <Container>\n          <Row>\n            <Col>\n              <p className=\"enter-details\">Enter Card Details</p>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              {errorMessage}\n            </Col>\n          </Row>\n          <Row>\n            <Col className=\"stripe-form\">\n              <CardElement />\n            </Col>\n          </Row>\n          <Row>\n            <button className=\"submit-button\" onClick={this.submit}><h5>Submit</h5></button>\n          </Row>\n          <Row>\n            <ModalHint/>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default injectStripe(withRouter(CheckoutForm));\n","import React, {Component} from 'react';\nimport {Elements, StripeProvider} from 'react-stripe-elements';\nimport CheckoutForm from './CheckoutFormTODO';\n\nclass Payment extends Component {\n\n  // StripeProvider is what actually creates the Stripe instance\n  // and passes in your API key.\n  render() {\n    return (\n      <StripeProvider apiKey=\"pk_test_dBB7Zc6zujggRBFHQUdShiJg00Ee8VeuNR\">\n        <div className=\"payment-form\">\n          <h3 className=\"payment-form-title\">Payment Form</h3>\n          <div className=\"payment-form\">\n            <Elements>\n              <CheckoutForm />\n            </Elements>\n          </div>\n        </div>\n      </StripeProvider>\n    );\n  }\n}\n\nexport default Payment;\n","import React from 'react';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport './css/bootstrap.min.css';// import Bootstrap css\nimport './css/main.css';// import custom css\n\nimport BootNav from './components/BootNav';\nimport Image from \"react-bootstrap/Image\";\n\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport MyAccount from \"./components/MyAccount\";\nimport Category from \"./components/Category\";\nimport Product from \"./components/Product\";\nimport CartConfirm from \"./components/CartConfirm\";\nimport CheckOut from \"./components/CheckOut\";\nimport Payment from './components/Payment.js';\nimport Order from './components/Order';\nimport SearchResults from './components/SearchResults';\n\n\nconst Routes = (\n  <Router>\n    <div className=\"entireBody\">\n      <Route path=\"/\" component={BootNav}/>\n      <Route exact path=\"/\" component={Home}/>\n      <Route exact path=\"/about\" component={About}/>\n      <Route exact path=\"/account\" component={MyAccount}/>\n      <Route exact path=\"/category/:id\" component={Category}/>\n      <Route exact path=\"/product/:id\" component={Product}/>\n      <Route exact path=\"/cart\" component={CartConfirm}/>\n      <Route exact path=\"/checkout\" component={CheckOut}/>\n      <Route exact path=\"/payment\" component={Payment}/>\n      <Route exact path=\"/order/:id\" component={Order}/>\n      <Route exact path=\"/search/:q\" component={SearchResults}/>\n\n      <footer>\n        <Image style={{width: '50vw'}} src={process.env.PUBLIC_URL + `/images/happykidsplaying01.jpg`} fluid />\n        <Image style={{width: '50vw'}} src={process.env.PUBLIC_URL + `/images/happykidsplaying01.jpg`} fluid />\n      </footer>\n\n    </div>\n  </Router>\n);\n\nexport default Routes;\n","import React, {useState, useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Dropdown from \"react-bootstrap/Dropdown\"\nimport ModalSignUp from \"./ModalSignUp\";\nimport ModalLogIn from \"./ModalLogIn\";\n// import MyAccount from \"./MyAccount\";\n\n\n\nexport default function BootNav(props){\n\n  // state\n  const [keyWord, setKeyWord] = useState('');\n  const [totalProductsNumberInCart, setTotalProductsNumberInCart] = useState(0);\n\n  // useState(window.localStorage.getItem('totalProductsNumberInCart'));\n\n  const currentProductsNumberInCart = window.localStorage.getItem('totalProductsNumberInCart');\n\n\n  console.log('currentProductsNumberInCart from localStorage:', currentProductsNumberInCart);\n\n  console.log('BootNav state - totalProductsNumberInCart', totalProductsNumberInCart);\n\n\n  // when a user hasn't logged in , won't see the shopping bag icon!\n  // thus, totalProductsNumberInCart won't show up as null!\n  useEffect(() => {\n    // whenever the route changes (location.pathname changes)\n    // useEffect's callback will run\n    // if state changes, the whole component will re-render\n    // => here, check if the current localStorage has changed or not?\n    // if yes, update state and it will trigger component to re-render\n    if (currentProductsNumberInCart !== totalProductsNumberInCart){\n      setTotalProductsNumberInCart(currentProductsNumberInCart);\n    }\n  });\n\n\n  const _handleLogOut = () => {\n    // 1) clear localStorage : jwt, cart, userName\n    localStorage.removeItem('jwt');\n    localStorage.removeItem('userEmail');\n    localStorage.removeItem('userName');\n    localStorage.removeItem('totalProductsNumberInCart');\n\n\n    // 2) update state, so BootNav can re-render\n    setTotalProductsNumberInCart(0);\n\n    // 3) redirect to Home\n    props.history.push('/');\n  }; //_handleLogOut()\n\n\n  const _handleChange = (event) => {\n    console.log('search keyword:', event.target.value);\n\n    // change state\n    setKeyWord(event.target.value)\n  };\n  // console.log('State search keyword:',keyWord);\n\n\n  const _handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log('lalal');\n\n    // if keyWord is empty, do nothing\n    // if (!keyWord) console.log('do nothing');\n    if (!keyWord) return;\n\n    // if keyWord is not empty, redirect to SearchResults route\n    // from there, do axios request, no matter what result is would be!\n    props.history.push(`/search/${keyWord}`)\n  };\n\n\n  let buttonLeft;\n  if(localStorage.getItem('jwt')){\n    // already logged in\n    buttonLeft = (\n      <Link to={'/account'}>\n        <Button className=\"nav-btn-space\" variant=\"warning\">\n          Account\n        </Button>\n      </Link>\n    );\n  } else {\n    // not yet logged in\n    buttonLeft = (\n      <ModalSignUp />\n    );\n  }\n\n  let buttonRight;\n  if(localStorage.getItem('jwt')){\n    // already logged in\n    buttonRight = (\n      <div>\n        <Button className=\"nav-btn-space\" variant=\"info\" onClick={_handleLogOut}>\n          LogOut\n        </Button>\n        <Link to={'/cart'} className=\"cart-icon-bg\">\n          <p className=\"cart-icon-number\">{totalProductsNumberInCart}</p>\n        </Link>\n      </div>\n    );\n  } else {\n    // not yet logged in\n    buttonRight = (\n      <ModalLogIn />\n    );\n  }\n\n  return(\n    <Navbar sticky=\"top\" expand=\"lg\" className=\"entireBody\">\n      <Navbar.Brand href=\"#/\">\n        <div className=\"store-name\">V's Toy</div>\n        <img\n          className=\"happy-kids\"\n          src={process.env.PUBLIC_URL + '/images/happy-kids.png'}\n          alt=\"happykids\"\n        />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n\n        <Nav>\n          <ButtonToolbar>\n            <div>\n              <Button className=\"nav-btn-space\" href=\"#/\" variant=\"danger\">Home</Button>\n            </div>\n            <div>\n              <Button className=\"nav-btn-space\" href=\"#about\" variant=\"primary\">About</Button>\n            </div>\n            <Dropdown>\n              <Dropdown.Toggle className=\"nav-btn-space\" variant=\"success\" id=\"dropdown-basic\">\n                Category\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                <NavDropdown.Item id=\"category-1\" href=\"#category/1\">Age 0-2</NavDropdown.Item>\n                <NavDropdown.Item id=\"category-2\" href=\"#category/2\">Age 2-5</NavDropdown.Item>\n                <NavDropdown.Item id=\"category-3\" href=\"#category/3\">Age 5-8</NavDropdown.Item>\n                <NavDropdown.Item id=\"category-4\" href=\"#category/4\">Age over 8</NavDropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </ButtonToolbar>\n          <ButtonToolbar>\n            <Form inline onSubmit={_handleSubmit}>\n              <FormControl type=\"text\" placeholder=\"e.g. hellokitty\" className=\"search-form\" onChange={_handleChange}/>\n              <Button type=\"submit\" variant=\"secondary\" className=\"nav-btn-space\" size=\"sm\">Search</Button>\n            </Form>\n          </ButtonToolbar>\n        </Nav>\n\n        <Nav >\n          <ButtonToolbar>\n            {buttonLeft}\n            {buttonRight}\n          </ButtonToolbar>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n\n}\n\n// class BootNav\n//\n// <Image className=\"cart-icon\" src=\"../public/images/cart-icon.png\" fluid />\n\n// <img className=\"cart-icon\" src={process.env.PUBLIC_URL + '/images/c101.jpg'} />\n\n// <div className=\"cart-icon\">\n//   </div>\n\n\n\n// buttonRight = (\n//   <div>\n//     <Button className=\"nav-btn-space\" variant=\"info\" onClick={_handleLogOut}>\n//       LogOut\n//     </Button>\n//     <Link to={'/cart'}>\n//       <img className=\"cart-icon\" src={process.env.PUBLIC_URL +`/images/cart-icon.png`}></img>\n//     </Link>\n//   </div>\n// );\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport Button from \"react-bootstrap/Button\";\n\n\nexport default function Home(props){\n\n\n  return(\n    <Container>\n      <Row>\n        <Col lg={8} style={{padding:0}}>\n          <Carousel>\n            <Carousel.Item>\n              <Container className=\"carousel-container\">\n                <Row className=\"carousel-row-top\">\n                  <Col className=\"carousel-col-left\">\n                    <Link to={'/category/1'}>\n                      <div className=\"home-category-container home-category-01\">\n                        <div className=\"home-category\">\n                          Age <br/>0 - 2\n                        </div>\n                      </div>\n                    </Link>\n                  </Col>\n                  <Col className=\"carousel-col-right\">\n                    <Link to={'/product/1'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c101.jpg`} fluid />\n                    </Link>\n                  </Col>\n                </Row>\n                <Row className=\"carousel-row-bottom\">\n                  <Col className=\"carousel-col-left\">\n                    <Link to={'/product/8'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c108.jpg`} fluid />\n                    </Link>\n                  </Col>\n                  <Col className=\"carousel-col-right\">\n                    <Link to={'/product/5'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c105.jpg`} fluid />\n                    </Link>\n                  </Col>\n                </Row>\n              </Container>\n            </Carousel.Item>\n\n            <Carousel.Item>\n              <Container className=\"carousel-container\">\n                <Row className=\"carousel-row-top\">\n                  <Col className=\"carousel-col-left\">\n                    <Link to={'/product/14'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c205.jpg`} fluid />\n                    </Link>\n                  </Col>\n                  <Col className=\"carousel-col-right\">\n                    <Link to={'/category/2'}>\n                      <div className=\"home-category-container home-category-02\">\n                        <div className=\"home-category\">\n                          Age <br/>2 - 5\n                        </div>\n                      </div>\n                    </Link>\n                  </Col>\n                </Row>\n                <Row className=\"carousel-row-bottom\">\n                  <Col className=\"carousel-col-left\">\n                    <Link to={'/product/18'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c209.jpg`} fluid />\n                    </Link>\n                  </Col>\n                  <Col className=\"carousel-col-right\">\n                    <Link to={'/product/16'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c207.jpg`} fluid />\n                    </Link>\n                  </Col>\n                </Row>\n              </Container>\n            </Carousel.Item>\n\n            <Carousel.Item>\n              <Container className=\"carousel-container\">\n                <Row className=\"carousel-row-top\">\n                  <Col className=\"carousel-col-left\">\n                    <Link to={'/product/23'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c305.jpg`} fluid />\n                    </Link>\n                  </Col>\n                  <Col className=\"carousel-col-right\">\n                    <Link to={'/product/22'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c304.jpeg`} fluid />\n                    </Link>\n                  </Col>\n                </Row>\n                <Row className=\"carousel-row-bottom\">\n                  <Col className=\"carousel-col-left\">\n                    <Link to={'/product/19'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c301.jpg`} fluid />\n                    </Link>\n                  </Col>\n                  <Col className=\"carousel-col-right\">\n                    <Link to={'/category/3'}>\n                      <div className=\"home-category-container home-category-03\">\n                        <div className=\"home-category\">\n                          Age <br/>5 - 8\n                        </div>\n                      </div>\n                    </Link>\n                  </Col>\n                </Row>\n              </Container>\n            </Carousel.Item>\n\n            <Carousel.Item>\n              <Container className=\"carousel-container\">\n                <Row className=\"carousel-row-top\">\n                  <Col className=\"carousel-col-left\">\n                    <Link to={'/product/31'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c404.jpg`} fluid />\n                    </Link>\n                  </Col>\n                  <Col className=\"carousel-col-right\">\n                    <Link to={'/product/33'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c406.jpg`} fluid />\n                    </Link>\n                  </Col>\n                </Row>\n                <Row className=\"carousel-row-bottom\">\n                  <Col className=\"carousel-col-left\">\n                    <Link to={'/category/4'}>\n                      <div className=\"home-category-container home-category-04\">\n                        <div className=\"home-category\">\n                          Age <br/>over 8\n                        </div>\n                      </div>\n                    </Link>\n                  </Col>\n                  <Col className=\"carousel-col-right\">\n                    <Link to={'/product/32'}>\n                      <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/c405.jpg`} fluid />\n                    </Link>\n                  </Col>\n                </Row>\n              </Container>\n            </Carousel.Item>\n          </Carousel>\n        </Col>\n\n        <Col className=\"home-right-col\" lg={4}>\n          <h1 className=\"home-category-title\">\n            V's Toy\n          </h1>\n          <Link to={'/about'}>\n            <Button className=\"btn-our-story\" variant=\"outline-secondary\">Our Story</Button>\n          </Link>\n          <Link to={'/category/1'}>\n            <h5 className=\"home-category-list home-category-01\">\n              Age 0-2\n            </h5>\n          </Link>\n          <Link to={'/category/2'}>\n            <h5 className=\"home-category-list home-category-02\">\n              Age 2-5\n            </h5>\n          </Link>\n          <Link to={'category/3'}>\n            <h5 className=\"home-category-list home-category-03\">\n              Age 5-8\n            </h5>\n          </Link>\n          <Link to={'category/4'}>\n            <h5 className=\"home-category-list home-category-04\">\n              Age over 8\n            </h5>\n          </Link>\n\n        </Col>\n      </Row>\n    </Container>\n\n  );\n}\n","import React from 'react';\nimport MapContainer from './GoogleMaps';\n\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\n\n\n\nexport default function About(props){\n\n\n\n  return(\n    <Container className=\"about-container\">\n      <Row className=\"about-welcome\">\n        <Col style={{textAlign:\"center\"}}>\n          <h1 className=\"about-title\">Welcome to V's Toy!</h1>\n        </Col>\n      </Row>\n      <Row className=\"about-welcome\">\n        <Col md={1}></Col>\n        <Col md={10}>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eius nostrum necessitatibus odio, eaque illum accusamus blanditiis. Cupiditate, autem libero nam rerum laudant\n            ium delectus. Suscipit minus tempora vitae et voluptate dolore.\n          </p>\n        </Col>\n        <Col md={1}></Col>\n      </Row>\n\n      <Row>\n        <Col sm md={5} style={{textAlign:'center'}}>\n          <Row>\n            <Image\n              src={process.env.PUBLIC_URL +`/images/welcome.gif`}\n              style={{width:'50%', margin:'auto'}}\n            />\n          </Row>\n          <h5 className=\"shop-title\">\n            <Image style={{width:\"2.5rem\"}} src={process.env.PUBLIC_URL +`/images/icon-shop.png`} /> {' '}\n            V's Toy - The QVB\n          </h5>\n          <p>\n            455 George St, Sydney NSW 2000\n          </p>\n          <p>\n            <Image style={{width:\"1rem\"}} src={process.env.PUBLIC_URL +`/images/icon-phone.png`} />  +61 02 3456 7890\n          </p>\n          <p>\n            <Image style={{width:\"1rem\"}} src={process.env.PUBLIC_URL +`/images/icon-email.png`} /> <a href=\"mailto:viola.zj.hu@gmail.com\">contact@vtoy.com</a>\n          </p>\n          <h5 className=\"shop-title\">\n            <Image style={{width:\"2.5rem\"}} src={process.env.PUBLIC_URL +`/images/icon-shop.png`} /> {' '}\n            V's Toy - The Rocks\n          </h5>\n          <p>\n            80 George St, The Rocks NSW 2000\n          </p>\n          <p>\n            <Image style={{width:\"1rem\"}} src={process.env.PUBLIC_URL +`/images/icon-phone.png`} />  +61 02 0987 6543\n          </p>\n          <p>\n            <Image style={{width:\"1rem\"}} src={process.env.PUBLIC_URL +`/images/icon-email.png`} /> <a href=\"mailto:viola.zj.hu@gmail.com\">contact@vtoy.com</a>\n          </p>\n        </Col>\n\n        <Col sm md={7}>\n            <MapContainer/>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\n// <Image className=\"about-image\" src={process.env.PUBLIC_URL +`/images/happykidsplaying05.png`} />\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport url from '../lib/url';\n\n\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Table from \"react-bootstrap/Table\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Media from \"react-bootstrap/Media\";\n\nexport default function MyAccount(props){\n\n  // state\n  const [orders, setOrders] = useState([]);\n\n  const userName = localStorage.getItem('userName');\n  const userEmail = localStorage.getItem('userEmail');\n\n  //************** TODO: tomorrow **********************\n  // 1, when page loaded, first thing to retrieve all the user's orders including line-items\n  useEffect(() => {\n\n    const jwt = localStorage.getItem('jwt');\n\n    const URL = `${url.URL}/orders`;\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      },\n    };\n\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log('Request orders response:', res.data);\n      // array of all orders,\n      // each order includes an array of all line_items\n      // each line_item includes associated product\n      // However, there could be no order at all\n      setOrders(res.data);\n\n    })\n    .catch(err => {\n      console.warn('SERVER ERROR:', err);\n    });\n  },[]);\n\n  // 2, user update account +\n  // 3, delete Account\n  // 4, CSS\n\n\n\n  return(\n    <div>\n\n      <Container className='account-container'>\n        <Row>\n          <Col sm={12} md={4}>\n            <h3 className=\"account-title\">My Account</h3>\n            <Table striped hover size=\"sm\">\n              <thead>\n                <tr>\n                  <th className=\"account-table-header\">User Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{userName}</td>\n                </tr>\n              </tbody>\n\n              <thead>\n                <tr>\n                  <th className=\"account-table-header\">Email Address</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{userEmail}</td>\n                </tr>\n              </tbody>\n            </Table>\n            <ButtonToolbar>\n              <Button className='update-account' variant=\"outline-warning\">Update Account</Button><br/>\n              <Button className='delete-account' variant=\"outline-info\">Delete Account</Button>\n            </ButtonToolbar>\n          </Col>\n\n          <Col sm={12} md={8}>\n            <h3 className=\"account-title\">My Orders</h3>\n            {\n              orders.length === 0\n              ?\n              (\n              <div>\n                <h5 className=\"no-purchase\">No purchase yet. Go get them! </h5>\n                <Image src={process.env.PUBLIC_URL + `/images/nopurchaseyet02.gif`} fluid />\n              </div>\n              )\n              :\n              <Accordion defaultActiveKey=\"0\">\n                <Card>\n                  {\n                    orders.map((order, index)=> (\n                      <div key={index}>\n                        <Accordion.Toggle\n                          as={Card.Header}\n                          eventKey={`${index + 1}`}\n                          className=\"order-card-header\"\n                        >\n                        <Row>\n                          <Col>\n                            <small>#</small>{' '}Order{' '}{order.id} {' '}\n                            <small><i>{order.order_created_at_date_formatted}</i></small>\n                          </Col>\n                          <Col style={{textAlign: 'right'}}>\n                            <span>Total: ${order.order_total_amount}</span>\n                          </Col>\n                        </Row>\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey={`${index + 1}`} key={order.id}>\n                            <Card.Body className=\"order-card-body\">\n                              {\n                                order.line_items.map(li =>(\n                                  <Row className=\"order-card-row\" key={li.id}>\n                                    <Col sm={12} md={4}>\n                                      <Link to={`/product/${li.product_id}`}>\n                                      <img\n                                        name={li.product.name}\n                                        src={process.env.PUBLIC_URL + `/images/${li.product.image}`}\n                                        className=\"order-list-image\"\n                                      />\n                                      </Link>\n                                    </Col>\n                                    <Col sm={12} md={8}>\n                                      <h5 className=\"order-list-product\">{li.product.name}</h5>\n                                      <p>Price: ${li.product.price}</p>\n                                      <p>Purchased Number: {li.quantity}</p>\n                                      <p>Subtotal: ${li.quantity * li.product.price}</p>\n                                    </Col>\n                                  </Row>\n                                ))\n                              }\n                            </Card.Body>\n                        </Accordion.Collapse>\n                      </div>\n                    ))\n                  }\n                </Card>\n              </Accordion>\n            }\n          </Col>\n        </Row>\n      </Container>\n\n    </div>\n\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport url from '../lib/url';\n\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Figure from \"react-bootstrap/Figure\";\n\n\n\nexport default function Category(props){\n\n  console.log('url is', url.URL);\n\n  const {id} = props.match.params;\n  // LEARNING: same as below\n  // const categoryId = props.match.params.id;\n  // console.log('categoryId:',categoryId);\n\n  const [products, setProducts] = useState([]);\n  // const [jwt, setJwt] = useState(localStorage.getItem('jwt'))\n\n  // LEARNING:\n  // whenever the props id changes, useEffect will catch that change and render the whole page\n  // even for the first time the component renders\n  useEffect(()=>{\n    getProductsOfCategory();\n  },[id]);\n\n\n  const getProductsOfCategory = ()=>{\n    // console.log('make axios request!');\n\n    // const URL = `https://toyshoppingsite.herokuapp.com/categories/${id}`;\n    // const URL = `http://localhost:3000/categories/${id}`;\n    const URL = `${url.URL}/categories/${id}`;\n\n    // LEARNING:\n    // category page doesn't need user authentication, thus no need to include jwt inside Header\n    // const configHeader = {\n    //   header: {\n    //     Authorization: 'Bearer ' + jwt\n    //   }\n    // };\n\n    axios.get(URL) //, configHeader\n    .then(res => {\n      // console.log('!!!res is :', res);\n      console.log('get all the products response:', res.data);// an array of products items\n      setProducts(res.data);\n    })\n    .catch(err => {\n      console.warn('ERRORS!!!:', err);\n    });\n  }\n\n  // console.log('updated products:', products);\n\n  // different border color based on category id\n  const color = ['lightpink', 'gold', 'yellowgreen', 'turquoise'];\n\n\n  return(\n    <Container>\n      <Row>\n        {\n          products.map( product => (\n            <Col lg={4} key={product.name} style={{textAlign:'center'}}>\n              <Link to={`/product/${product.id}`}>\n                <Figure>\n                  <Figure.Image\n                    width={300}\n                    height={300}\n                    fluid={false}\n                    alt=\"300x300\"\n                    style={{\n                      padding: '1rem',\n                      border: `dashed ${color[id-1]}`,\n                    }}\n                    src={process.env.PUBLIC_URL + `/images/${product.image}`}\n                  />\n                  <Figure.Caption>\n                    <p><strong>{product.name}</strong></p>\n                    <p>Price: {`$${product.price}`}</p>\n                    <p>In Stock: {product.stock}</p>\n                    <p>{product.description}</p>\n                  </Figure.Caption>\n                </Figure>\n              </Link>\n            </Col>\n          ))\n        }\n      </Row>\n    </Container>\n  )\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport url from '../lib/url';\nimport ReactImageMagnify from 'react-image-magnify';\n\n\nexport default function Product(props){\n\n  // product id passed by props\n  const {id} = props.match.params;\n  // console.log(id);\n\n  // need jwt for user to get a cart\n  // if use logged in, valid string; if not, null\n  const jwt = localStorage.getItem('jwt');\n  const [product, setProduct] = useState({});\n  const [category, setCategory] = useState({});\n  const [quantity, setQuantity]= useState(1);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [buttonStatus, setButtonStatus] = useState(false);\n  const [buttonText, setButtonText] = useState('Add to Cart');\n  const [successAddToCartMessage, setSuccessAddToCartMessage] = useState('');\n\n  // first time the component renders\n  // axios request to get the product info by id\n  useEffect(()=>{\n    getProductById(id);\n    if(!jwt){\n      setButtonStatus(true);\n      setButtonText('Login to use cart')\n    }\n  },[id]);\n\n  const getProductById = (id)=>{\n    const URL = `${url.URL}/products/${id}`;\n\n    axios.get(URL)\n    .then(res => {\n      console.log('response:', res.data);\n      console.log('categoryName:', res.data.category.name);\n\n      setProduct(res.data); // the product object, including its category object\n      setCategory(res.data.category); // the associated category object\n    })\n    .catch(err => {\n      console.warn('ERRORS!!!:', err);\n      // setErrorMessage('Product not found');\n      props.history.push('/')\n    });\n  };\n\n\n  // ************ regardless of user loggin, check if the product is out of stock *************\n  // if yes, 1) show message, 2) disable AddtoCart button\n  // TESTED: if a button is disabled, won't be able to trigger click event handler\n  // let setButtonStatus(false);\n  // let inStockUI;\n  // if (product.stock <= 0){\n  //   setButtonStatus(true);\n  //   inStockUI = (\n  //     <span class=\"out-of-stock\">Sorry, this product is out of stock.</span>\n  //   );\n  // } else {\n  //   inStockUI = (<span>{product.stock} pcs</span>)\n  // }\n  // ************ // ************ // ************ // ************ // ************\n\n\n\n  // _handleChangeQuantity make sure quantity stored in state is <= stock\n  const _handleChangeQuantity = (event) => {\n    console.log('event.target.value:', event.target.value); // actual input quantity\n\n    // Only when a user is logged in,\n    // can the user toggle the button status based on user input quantity\n    if(jwt){\n      // if the user has added product into the cart, will get success message\n      // on next click on quantity, clear the message;\n      setSuccessAddToCartMessage('');\n\n      // TEST: typeof event.target.value is a string, need to parse it to integer!!!\n      let wantedQuantity = parseInt(event.target.value);\n      // console.log('type of wantedQuantity', typeof(wantedQuantity));\n\n      // check if the input quantity is more than actual stock\n      // since user can manually type in the amount\n      // ********************#TODO*********************\n      // this logic is not perfect\n      // should axios request the current cart data with the existing quantity(if any, by default = 0)\n      // then compare total requested quantity (wantedQuantity + existing cart quantity) with the product stock,\n      // currently, once post request, backend is checking the total requested quantity (existing + new) to make sure <= stock\n      // if not, would send back error to .catch()\n      // it's not perfect user experience, but at least currently, at the frontend\n      // make sure user's actual type-in value is <= stock number,\n      // will leave it for now due to tight deadline, but will refactor late\n      if (wantedQuantity > product.stock){\n        // 1) prompt message\n        setErrorMessage('Sorry, not enough stock.');\n        // 2) the input quantity doesn't count, reset state quantity to 0\n        setQuantity(1);\n        // 3) disable 'Add to Cart' button, cannot click\n        setButtonStatus(true);\n      } else {\n        setErrorMessage('');\n        setQuantity(wantedQuantity);\n        setButtonStatus(false);\n        setButtonText('Add to Cart');\n      }\n      console.log('wantedQuantity:', wantedQuantity);\n    }\n    // if a user is not logged in, do nothing, as the user cannot click 'Add to Cart'\n\n  }; //_handleChangeQuantity\n\n  console.log('stateQuantity:', quantity);\n  console.log('button disabled?:', buttonStatus);\n\n\n  // At this stage, have ensure that\n  // only when 1) user login & 2) input quantity <= stock\n  // that a user can click the 'Add to Cart' button!\n  const _handleAddToCart = (event) => {\n    // console.log(event);\n    console.log('clicked cart');\n    console.log('when click cart, stateQuantity', quantity);\n    console.log('when click cart, typeof stateQuantity', typeof(quantity));\n\n    // check if the state quantity is 0 or empty?\n    // if yes, propmt message, disable button and return early\n    if(!quantity){\n      console.log('when quantity === 0, it ran!');\n      setErrorMessage('Please select a quantity.')\n      setButtonStatus(true);\n      return;\n    }\n    // if not, then quantity is valid, send to the DB and add into the cart!\n    // const URL = \"https://toyshoppingsite.herokuapp.com/line_items\";\n    // const URL = \"http://localhost:3000/line_items\";\n    const URL = `${url.URL}/line_items`;\n    const product_id = product.id;\n    const data = {\n      line_item:{\n        product_id,\n        quantity\n      }\n    };\n    const configHeader = {\n      headers: {\n        Authorization: \"Bearer \" + jwt\n      }\n    };\n\n    axios.post(URL, data, configHeader)\n    .then(res => {\n      console.log('added to cart',res);\n\n      // 1) update localStorage's totalProductsNumberInCart\n      window.localStorage.setItem('totalProductsNumberInCart', res.data.total_products_number_in_cart);\n\n      // 2) pop up a msg to user, showing adding to cart successfully, with a link to cart page\n      setSuccessAddToCartMessage(`Successfully added to cart!`);\n\n      // 3) push to itself to trigger BootNav rerender and update shopping bag number\n      props.history.push(`/product/${id}`);\n    })\n    .catch(err => {\n      console.warn('ERROR of adding to cart', err);\n      setErrorMessage('Sorry, not enough stock.')\n    });\n  }; // _handleAddToCart\n\n  let showSuccessMessage = \"\";\n  if(successAddToCartMessage){\n    showSuccessMessage = (\n      <Link to={`/cart`} className=\"view-your-cart\">\n        <strong><p className = 'show-success-mesage'>\n          {successAddToCartMessage} {' '}\n          View your cart\n        </p></strong>\n      </Link>\n    )\n  }\n\n\n\n  return(\n    <div className=\"fluid\">\n      <div className=\"fluid__image-container\">\n        <div className=\"image_wrapper\">\n          <ReactImageMagnify {...{\n              smallImage: {\n                  alt: `${props.image}`,\n                  isFluidWidth: true,\n                  src: process.env.PUBLIC_URL +`/images/${product.image}`,\n              },\n              largeImage: {\n                  src: process.env.PUBLIC_URL +`/images/${product.image}`,\n                  width: 600,\n                  height: 600\n              },\n              isHintEnabled: true,\n              shouldHideHintAfterFirstActivation: false\n          }} />\n        </div>\n      </div>\n      <div className=\"fluid__instructions\">\n        <div>\n          {showSuccessMessage}\n        </div>\n        <h3 className=\"product-name\">\n          <strong>\n            {product.name}\n          </strong>\n        </h3>\n        <p>\n          <span className=\"product-label\">\n            Category\n          </span>\n          :{' '}\n          {category.name}\n        </p>\n        <p>\n          <span className=\"product-label\">\n            Price\n          </span>\n          : {`$${product.price}`}\n        </p>\n        <small className=\"errorMessage\">\n          {errorMessage}\n        </small>\n        <div>\n          <span className=\"product-label\">\n            Select Quantity\n          </span>:{' '}\n          <input\n            type=\"number\"\n            min=\"1\"\n            max={product.stock}\n            defaultValue=\"1\" onChange={_handleChangeQuantity}\n          />\n          <br/>\n          <small>\n          (In stock: {product.stock})\n          </small>\n        </div>\n        <div>\n          <button\n            id=\"add-to-cart\"\n            disabled={buttonStatus} onClick={_handleAddToCart}\n          >\n            {buttonText}\n          </button>\n        </div>\n        <p>\n          <span className=\"product-label\">\n            Description\n          </span>\n          : <br/>\n          {product.description}\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport url from '../lib/url';\n\nimport Table from \"react-bootstrap/Table\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\n\n\n\nexport default function CartConfirm(props){\n\n  const jwt = localStorage.getItem('jwt');\n\n  const [lineItems, setLineItems] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  // const [totalProductsNumberInCart, setTotalProductsNumberInCart] = useState(window.localStorage.getItem('totalProductsNumberInCart'))\n  // const [quantity, setQuantity] = useState(0);\n  // const [product, setProduct] = useState({});\n\n  useEffect(()=>{\n    // const URL = `https://toyshoppingsite.herokuapp.com/cart`;\n    const URL = `${url.URL}/cart`;\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      },\n    };\n\n    // console.log('%c get CART', 'font-size: 20pt');\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log('response:', res.data); // an array of all line_item objects of the cart / current_user\n      setLineItems(res.data);\n    })\n    .catch(err => {\n      console.warn('SERVER ERROR:', err);\n      // if any error, e.g. unlogged in user send random request in address bar\n      // redirect to home page\n      props.history.push('/');\n    });\n  },[]);\n\n  // in case there's no line_items inside the cart of the current_user\n  let noLineItemsToShow = (\n    <div>\n      <Table striped hover responsive=\"md\">\n        <thead>\n          <tr>\n            <th className=\"cart-label\"><strong>My Cart</strong></th>\n            <th className=\"cart-label\"><strong>Item</strong></th>\n            <th className=\"cart-label\"><strong>Quantity</strong></th>\n            <th className=\"cart-label\"><strong>Price</strong></th>\n            <th className=\"cart-label\"><strong>Subtotal</strong></th>\n          </tr>\n        </thead>\n      </Table>\n\n      <div className=\"no-items-in-cart\">\n        <div>There's no item in your cart.</div>\n        <Image\n          src={process.env.PUBLIC_URL + `/images/nopurchaseyet02.gif`}\n          style={{maxWidth: '100%'}}\n        />\n      </div>\n    </div>\n  );\n\n\n  let total = 0;\n  lineItems.forEach(li => {\n    total += li.quantity * li.product.price;\n  })\n\n\n  const _handleUpdateQuantity = (event)=>{\n    event.preventDefault();\n    event.persist();\n    console.log(event);\n\n    const updatedQuantity = parseInt(event.target[0].value);\n    const lineItemId = parseInt(event.target[0].name);\n    console.log('updated quantity',updatedQuantity); // new quantity input\n    console.log('lineItemId',lineItemId); // product_id\n\n    // ******************LEARNING: ******************\n    // let currentProductStock;\n    // lineItems.forEach((li)=>{\n    //   if(li.product_id === lineItemId){\n    //     console.log('currentProductId', li.product_id);\n    //     currentProductStock = li.product.stock\n    //   }\n    // });\n    // console.log('currentProductStock', currentProductStock);\n    //\n    // // 1) double check if the updatedQuantity is <= currentProductStock\n    // // if no, pop up error message, and return early, no need to proceed\n    // // until the next updatedQuantity is a valid number, then do axios request\n    // if(updatedQuantity > currentProductStock){\n    //   setErrorMessage(`Sorry, only ${currentProductStock} in stock.`)\n    //   return;\n    // }\n    // ******************************************************\n\n    // APPARENTLY, the form input is very smart to check\n    // if the updatedQuantity(user input) is <= max && >= min\n    // ONE MORE THING !!!\n    if (isNaN(updatedQuantity)){\n      console.log('its NaN');\n      // POP UP MESSAGE:\n      setErrorMessage('Please select a quantity.')\n      // return early\n      return;\n    }\n    console.log('should not run if its NaN');\n\n    // if the above is clear,\n    // 1) clear errorMessage first\n    setErrorMessage('');\n    // 2) ideally, check if the updatedQuantity is the same as the existing quantity stored in line_item\n    // if yes, no need to send further axios request,\n    // but for now, it might be rare, leave this for refactor later.\n    // 3) send axios post request to DB, to update the single line_item\n    // axios.put(url[, data[, config]])\n    // const URL = `https://toyshoppingsite.herokuapp.com/line_items/${lineItemId}`;\n    const URL = `${url.URL}/line_items/${lineItemId}`;\n    const data = {\n      line_item: {\n        quantity: updatedQuantity\n      }\n    };\n    const configHeader = {\n      headers: {\n        Authorization: \"Bearer \" + jwt\n      }\n    };\n\n    axios.put(URL, data, configHeader)\n    .then(res => {\n      console.log('response from server:', res.data); // an array of all line_item objects of the cart / current_user\n\n      // 1) update localStorage totalProductsNumberInCart\n      updateTotalProductsNumberInCart(res.data);\n\n      // 2) update the state: lineItems\n      // DB send back the whole array of line_item objects, including its product association\n      // the whole page will re-render with updated state\n      setLineItems(res.data);\n\n      // 3) push to itself which will trigger BootNav to rerender,\n      // in order to show updated number in top right corner shopping bag\n      // Though get warning in console:\n      // Warning: Hash history cannot PUSH the same path; a new entry will not be added to the history stack\n      // it won't go to a new page, but did trigger BootNav to re-render\n      props.history.push('/cart');\n\n    })\n    .catch(err => {\n      console.warn('ERROR of updating quantity', err);\n      setErrorMessage('Sorry, not enough stock.')\n    });\n\n  }\n\n\n\n  const _handleRemoveLineItem = (event) => {\n    event.persist();\n    console.log('click image', event);\n    console.log('lineItemId', event.target.name);\n    // console.log('typeof', typeof(event.target.name));\n\n    const lineItemId = parseInt(event.target.name);\n    // console.log('typeof', typeof(lineItemId));\n\n    // send delete request to DB with line_item id\n    // axios.delete(url[, config])\n    // const URL = `https://toyshoppingsite.herokuapp.com/line_items/${lineItemId}`;\n    const URL = `${url.URL}/line_items/${lineItemId}`;\n\n    const configHeader = {\n      headers: {\n        Authorization: \"Bearer \" + jwt\n      }\n    };\n\n    axios.delete(URL, configHeader)\n    .then(res => {\n      console.log('DELETE response:', res.data);\n      // after deleting, send back a new line_items array to update state!\n\n      // 1) update localStorage totalProductsNumberInCart\n      updateTotalProductsNumberInCart(res.data);\n\n      // 2) update the state: lineItems\n      setLineItems(res.data);\n\n      // 3) push to itself which will trigger BootNav to rerender\n      props.history.push('/cart');\n\n    })\n    .catch(err => {\n      console.warn('ERRORS!!!:', err);\n    });\n  };\n\n\n\n  const updateTotalProductsNumberInCart = ( updatedLineItems ) => {\n\n    // 1) if there's no line item left in the cart, empty array\n    // update localStorage, totalProductsNumberInCart = 0\n    if(updatedLineItems.length === 0){\n      console.log('totalProductsNumberInCart', 0);\n      window.localStorage.setItem('totalProductsNumberInCart', 0);\n    } else {\n      let updatedTotalProductsNumberInCart = 0;\n\n      updatedLineItems.forEach(li => {\n        updatedTotalProductsNumberInCart += li.quantity;\n      });\n\n      console.log('updatedTotalProductsNumberInCart:', updatedTotalProductsNumberInCart);\n\n      // update localStorage with the new totalProductsNumberInCart\n      window.localStorage.setItem(\n        'totalProductsNumberInCart',\n        updatedTotalProductsNumberInCart\n      );\n    };\n  };\n\n\n  return(\n    <Container>\n      { // if there's no line_items in the cart\n        !lineItems.length\n        ?\n        noLineItemsToShow\n        :\n        <Table striped hover responsive=\"md\">\n          <thead>\n            <tr>\n              <th className=\"cart-label\"><strong>My Cart</strong></th>\n              <th className=\"cart-label\"><strong>Item</strong></th>\n              <th className=\"cart-label\"><strong>Quantity</strong></th>\n              <th className=\"cart-label\"><strong>Price</strong></th>\n              <th className=\"cart-label\"><strong>Subtotal</strong></th>\n            </tr>\n          </thead>\n\n            <tbody>\n              {lineItems.map(li => (\n                <tr key={li.product.name}>\n                  <td>\n                    <Link to={`/product/${li.product_id}`}>\n                      <Image\n                        className=\"cart-thumbnail\"\n                        src={process.env.PUBLIC_URL +`/images/${li.product.image}`}\n                        thumbnail\n                      />\n                    </Link>\n                  </td>\n\n                  <td className=\"product-name\"><br/><strong>{li.product.name}</strong></td>\n\n                  <td>\n\n                    <form className=\"quantity-update change-quantity\" onSubmit={_handleUpdateQuantity}>\n                      <input\n                        type=\"number\"\n                        min=\"1\"\n                        max={li.product.stock}\n                        name={li.id}\n                        defaultValue={li.quantity}\n                      /> {' '}\n                      <input\n                        type=\"submit\"\n                        className=\"update-quantity\"\n                        value=\"Update\"\n                        disabled={false}\n                      /> {' '}\n                    </form>\n                    <Image\n                      name={li.id}\n                      className=\"trash change-quantity\"\n                      src={process.env.PUBLIC_URL + '/images/small-trash.png'}\n                      title=\"Remove\"\n                      onClick={_handleRemoveLineItem}\n                      fluid\n                    />\n                  </td>\n\n                  <td><br/><strong>${li.product.price}</strong></td>\n\n                  <td><br/><strong>${li.quantity * li.product.price}</strong></td>\n                </tr>\n               ))\n              }\n              <tr>\n                <td> </td>\n                <td> </td>\n                <td>\n                  <small className=\"errorMessage\">\n                    {errorMessage}\n                  </small>\n                </td>\n                <td><strong className=\"cart-label\">Total: </strong></td>\n                <td><strong className=\"cart-label\">${total}</strong></td>\n              </tr>\n              <tr>\n                <td> </td>\n                <td> </td>\n                <td> </td>\n                <td> </td>\n                <td>\n                  <Link to={'/checkout'}>\n                    <Button id=\"checkout\">Check Out</Button>\n                  </Link>\n                </td>\n              </tr>\n            </tbody>\n        </Table>\n      }\n    </Container>\n  );\n} // CartConfirm\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport url from '../lib/url';\nimport Payment from './Payment';\n\nimport Table from \"react-bootstrap/Table\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default function CheckOut(props){\n  const jwt = localStorage.getItem('jwt');\n\n  const [lineItems, setLineItems] = useState([]);\n\n  useEffect(()=>{\n    // const URL = `https://toyshoppingsite.herokuapp.com/cart`;\n    const URL = `${url.URL}/cart`;\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      },\n    };\n\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log('response:', res.data); // an array of all line_item objects of the cart / current_user\n      setLineItems(res.data);\n    })\n    .catch(err => {\n      console.warn('SERVER ERROR:', err);\n      // if any error, e.g. unlogged in user send random request in address bar\n      // redirect to home page\n      props.history.push('/');\n    });\n  },[]);\n\n  let total = 0;\n  lineItems.forEach(li => {\n    total += li.quantity * li.product.price;\n  })\n\n  return(\n    <Container style={{maxWidth:'90vw'}}>\n      <Row>\n        <Col lg={8}>\n          <Row>\n            <h3 className=\"confirmorder-title\">Confirm order</h3>\n          </Row>\n          <Table striped hover responsive=\"lg\">\n            <thead>\n              <tr>\n                <th className=\"cart-label\">\n                  <Link to={'/cart'}>\n                    <Button className=\"back-to-cart\">\n                      Back to cart\n                    </Button>\n                  </Link>\n                </th>\n                <th className=\"cart-label\"><strong>Item</strong></th>\n                <th className=\"cart-label\"><strong>Quantity</strong></th>\n                <th className=\"cart-label\"><strong>Price</strong></th>\n                <th className=\"cart-label\"><strong>Subtotal</strong></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {\n                lineItems.map(li => (\n                  <tr key={li.product.name}>\n                    <td>\n                      <Link to={`/product/${li.product_id}`}>\n                        <Image className=\"cart-thumbnail\" src={process.env.PUBLIC_URL + `/images/${li.product.image}`} thumbnail />\n                      </Link>\n                    </td>\n                    <td><strong>{li.product.name}</strong></td>\n                    <td><strong>{li.quantity}</strong></td>\n                    <td><strong>${li.product.price}</strong></td>\n                    <td><strong>${li.quantity * li.product.price}</strong></td>\n                  </tr>\n                ))\n              }\n              <tr>\n                <td> </td>\n                <td> </td>\n                <td>\n                </td>\n                <td><strong className=\"cart-label\">Total: </strong></td>\n                <td><strong className=\"cart-label\">${total}</strong></td>\n              </tr>\n            </tbody>\n          </Table>\n        </Col>\n        <Col lg={4}>\n          <Payment />\n        </Col>\n      </Row>\n    </Container>\n\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport url from '../lib/url';\n\nimport Table from \"react-bootstrap/Table\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\n\n\n\nexport default function Order(props){\n\n  const orderId = props.match.params.id\n  console.log('orderId', orderId);\n  const jwt = localStorage.getItem('jwt');\n\n  const [lineItems, setLineItems] = useState([]);\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    // const URL = `https://toyshoppingsite.herokuapp.com/order/${orderId}`;\n    const URL = `${url.URL}/order/${orderId}`;\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      }\n    };\n\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log(res.data);\n      setLineItems(res.data);\n      setErrorMessage('');\n    })\n    .catch(err => {\n      console.warn('ERROR', err.response);\n      // in backend, if that's an invalid request\n      // e.g. user requested an order id that didn't belong to the user,\n      // backend will return error as set\n      // render json: {message: 'invalid request'}, status: 404\n      setErrorMessage('Page Not Found.')\n    });\n  },[orderId]);\n\n  let total = 0;\n  lineItems.forEach(li => {\n    total += li.quantity * li.product.price;\n  })\n\n\n  return(\n    <div>\n    {\n      errorMessage\n      ?\n      <div class=\"page-not-found\">\n        {errorMessage}\n      </div>\n      :\n      <Container>\n        <Row>\n          <Col lg={8}>\n            <Table striped hover responsive=\"lg\">\n              <thead>\n                <tr>\n                  <th className=\"cart-label\">\n                    <strong>My Order</strong>\n                  </th>\n                  <th className=\"cart-label\"><strong>Item</strong></th>\n                  <th className=\"cart-label\"><strong>Quantity</strong></th>\n                  <th className=\"cart-label\"><strong>Price</strong></th>\n                  <th className=\"cart-label\"><strong>\n                    Subtotal</strong></th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {lineItems.map(li => (\n                  <tr key={li.product.name}>\n                    <td>\n                      <Link to={`/product/${li.product_id}`}>\n                        <Image className=\"cart-thumbnail\" src={process.env.PUBLIC_URL + `/images/${li.product.image}`} thumbnail />\n                      </Link>\n                    </td>\n                    <td><strong>{li.product.name}</strong></td>\n                    <td><strong>{li.quantity}</strong></td>\n                    <td><strong>${li.product.price}</strong></td>\n                    <td><strong>${li.quantity * li.product.price}</strong></td>\n                  </tr>\n                ))\n              }\n                <tr>\n                  <td> </td>\n                  <td> </td>\n                  <td> </td>\n                  <td><strong className=\"cart-label\">Total: </strong></td>\n                  <td><strong className=\"cart-label\">${total}</strong></td>\n                </tr>\n              </tbody>\n            </Table>\n          </Col>\n          <Col lg={4}>\n            <div className=\"success-purchase\">Thanks for Purchase!</div> {' '}\n\n            <Image\n              src={process.env.PUBLIC_URL + `/images/thanks.gif`}\n              style={{width: '100%'}}\n            />\n\n          <div className=\"find-more-toys\">\n              <Link to={'/'}>\n                <Button className=\"back-to-home\">Find More Toys</Button>\n              </Link>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    }\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport url from '../lib/url';\nimport {Link} from 'react-router-dom';\n\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\n\n\nexport default function SearchResults(props){\n\n  // BootNav has ensured this keyWord is not empty before redirect to this route\n  const keyWord = props.match.params.q\n\n  const [products, setProducts] = useState([]);\n  const [message, setMessage] = useState('');\n\n  console.log('keyword:', keyWord);\n\n  // first time the component renders\n  useEffect(() => {\n    // call pre-determined function to get search results\n    getSearchResults();\n  },[keyWord]);\n\n\n  const getSearchResults = () => {\n    // send axios request to server for search\n    const URL = `${url.URL}/search/${keyWord}`;\n    // no need of user login, so no jwt is needed in the request\n    axios.get(URL)\n    .then(res => {\n      // console.log('Search Result:', res);\n      console.log('Matching products:', res.data); // an array of matching products\n\n      if(res.data.length === 0){\n        console.log('Sorry, No Results Found.');\n        setMessage('Sorry, No Results Found.');\n        setProducts([])\n      } else {\n        setProducts(res.data);\n\n        const toyNumber = res.data.length;\n\n        toyNumber === 1\n        ?\n        setMessage(`Found (${res.data.length}) toy!`)\n        :\n        setMessage(`Found (${res.data.length}) toys!`)\n      }\n    })\n    .catch(res => {\n      console.warn('Search failed:', res);\n    });\n  };\n\n\n  let whatToShow;\n  if(products.length === 0){\n    whatToShow = (\n      <div className=\"found-no-toys-row\">\n        <div>{message}</div>\n        <Image\n          src={process.env.PUBLIC_URL + `/images/thanks.gif`}\n          style={{maxWidth: '60%'}}\n        />\n    </div>\n    );\n  } else {\n    whatToShow = (\n      <Row className=\"found-toys-row\">\n        <h5 className=\"found-result\">{message}</h5>\n      </Row>\n    );\n  }\n\n  return(\n    <Container>\n      {whatToShow}\n\n      <Row>\n        {\n          products.map(product => (\n            <Col  md={6} lg={4} style={{margin: '1rem 0'}} key={product.name}>\n              <Card className=\"card-background\">\n                <Link to={`/product/${product.id}`}>\n                  <Card.Img\n                    variant=\"top\"\n                    src={process.env.PUBLIC_URL + `/images/${product.image}`}\n                    height={300}\n                  />\n                </Link>\n                <Card.Body>\n                  <Card.Title style={{color: 'grey', fontWeight: 600}}>{product.name}</Card.Title>\n                  <Card.Text style={{color: 'grey'}}>\n                    Price: ${product.price} <br/>\n                    In Stock: ${product.stock} <br/>\n                    {product.description}\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))\n        }\n      </Row>\n    </Container>\n  );\n}\n","// import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport Routes from './routes';\n\n\n\nReactDOM.render(Routes, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}