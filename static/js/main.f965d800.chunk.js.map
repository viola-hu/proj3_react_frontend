{"version":3,"sources":["serviceWorker.js","lib/url.js","components/SignUpForm.jsx","components/ModalSignUp.jsx","components/LogInForm.jsx","components/ModalLogIn.jsx","components/ModalHint.jsx","components/CheckoutFormTODO.js","components/Payment.js","routes.js","components/BootNav.jsx","components/Home.jsx","components/MyAccount.jsx","components/Category.jsx","components/Product.jsx","components/CartConfirm.jsx","components/CheckOut.jsx","components/Order.jsx","index.js"],"names":["Boolean","window","location","hostname","match","url","URL","withRouter","props","_useState","useState","_useState2","Object","slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","pwConfirmation","setPwConfirmation","_useState9","_useState10","errorMessage","setErrorMessage","_useState11","_useState12","setJwt","resetErrorMessageIfAnyTypedValue","event","target","value","length","getTokenAndRedirect","concat","data","auth","axios","post","then","res","console","log","jwt","localStorage","setItem","onHide","history","push","catch","err","warn","renderErrorMessage","react_default","a","createElement","map","error","Form_default","Text","key","className","onSubmit","preventDefault","user","password_confirmation","response","errors","Group","controlId","Label","Control","type","placeholder","onChange","Button_default","variant","ModalSignUp","modalShow","setModalShow","ButtonToolbar_default","onClick","SignUpVerticallyCenteredModal","show","Modal_default","assign","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","components_SignUpForm","performLogIn","getCart","ModalLogIn","LogInVerticallyCenteredModal","components_LogInForm","ModalHint","ModalHint_LogInVerticallyCenteredModal","CheckoutForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","message","submit","bind","assertThisInitialized","stripe","createToken","token","setState","getItem","configHeader","headers","Authorization","charge","stripeToken","statusText","moveLineItemsFromCartToOrderAndUpdateStock","_this2","get","orderId","Container_default","Row_default","Col_default","es","md","Component","injectStripe","Payment","apiKey","CheckoutFormTODO","Routes","react_router_dom","react_router","path","component","buttonLeft","buttonRight","to","removeItem","src","process","Navbar_default","sticky","expand","Brand","href","Toggle","aria-controls","Collapse","Nav_default","Dropdown_default","Menu","NavDropdown_default","Item","inline","FormControl_default","exact","products","setProducts","useEffect","Image_default","fluid","params","getProductsOfCategory","product","xs","Figure_default","Image","width","height","alt","image","Caption","price","stock","description","setProduct","category","setCategory","quantity","setQuantity","buttonStatus","setButtonStatus","buttonText","setButtonText","_useState13","_useState14","successAddToCartMessage","setSuccessAddToCartMessage","getProductById","showSuccessMessage","sm","ListGroup_default","min","max","defaultValue","wantedQuantity","parseInt","disabled","line_item","product_id","lineItems","setLineItems","noLineItemsToShow","subtotal","forEach","li","_handleUpdateQuantity","persist","updatedQuantity","lineItemId","isNaN","put","_handleRemoveLineItem","delete","Table_default","striped","hover","responsive","thumbnail","title","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f965d800.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// when local test!\n// const URL = 'http://localhost:3000';\n\n// when deployment, change to below\nconst URL = \"https://toyshoppingsite.herokuapp.com\";\n\nexport default{\n  URL\n};\n","import React, {useState} from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport url from '../lib/url';\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction SignUpForm(props){\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [pwConfirmation, setPwConfirmation] = useState('');\n  const [errorMessage, setErrorMessage] = useState([]);\n  const [jwt, setJwt] = useState('');\n\n  const resetErrorMessageIfAnyTypedValue = (event) => {\n    if(event.target.value.length > 0){\n      setErrorMessage([]);\n    }\n  };\n\n  const _handleNameChange = (event) => {\n    resetErrorMessageIfAnyTypedValue(event);\n    setName(event.target.value);\n  };\n\n  const _handleEmailChange = (event) => {\n    resetErrorMessageIfAnyTypedValue(event);\n    setEmail(event.target.value);\n  };\n\n  const _handlePasswordChange = (event) => {\n    resetErrorMessageIfAnyTypedValue(event);\n    setPassword(event.target.value);\n  };\n\n  const _handlePasswordConfirmation = (event) => {\n    resetErrorMessageIfAnyTypedValue(event);\n    setPwConfirmation(event.target.value)\n  };\n\n  // 1) create user, 2) get jwt\n  const _handleSubmit = (event) => {\n    event.preventDefault();\n\n    // const URL = \"https://toyshoppingsite.herokuapp.com/signup\";\n    const URL = `${url.URL}/signup`;\n\n    const data = {\n      user:{\n        name,\n        email,\n        password,\n        password_confirmation: pwConfirmation\n      }\n    };\n\n    axios.post(URL, data)\n    .then(res => {\n      console.log('created user!', res);\n      getTokenAndRedirect();\n    })\n    .catch(err => {\n      console.warn('SignUp ERROR!!!', err.response.data.errors); // an array of errors\n      setErrorMessage(err.response.data.errors)\n    });\n  }\n\n// *********************************************\n  const getTokenAndRedirect = () => {\n    // const URL = \"https://toyshoppingsite.herokuapp.com/user_token\";\n    const URL = `${url.URL}/user_token`;\n    const data = {\n      auth: {\n        email,\n        password\n      }\n    };\n\n    axios.post(URL, data)\n    .then(res => {\n      console.log('response from server:', res, props);\n      setJwt(res.data.jwt);\n      // once login success\n      // 1) store jwt token in the localStorage\n      window.localStorage.setItem('jwt', res.data.jwt);\n      // 2) hide the modal\n      props.onHide();\n      // 3) go to the next page\n      props.history.push('/account');\n    })\n    .catch(err => {\n      // if any error, update state and print out in UI\n      console.warn('LOGIN TOKEN ERROR:', err);\n      setErrorMessage(['Error connecting to server'])\n    });\n  }\n\n  // TEST:\n  // console.log('name:', name);\n  // console.log('email:', email);\n  // console.log('password:', password);\n  // console.log('pwConfirmation:', pwConfirmation);\n  // console.log('errorMessage', errorMessage);\n\n  const renderErrorMessage = (\n    <div>\n      {errorMessage.map(error => (\n        <Form.Text key={error} className=\"errorMessage\">\n          {error}\n        </Form.Text>\n        )\n      )}\n    </div>\n  )\n\n  return(\n    <Form onSubmit={_handleSubmit}>\n      {renderErrorMessage}\n      <Form.Group controlId=\"signUpFormBasicName\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"name\" placeholder=\"enter your name\" onChange={_handleNameChange}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"signUpFormBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"enter email\" onChange={_handleEmailChange}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"signUpFormBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"enter password\" onChange={_handlePasswordChange}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"signUpFormPasswordConfirmation\">\n        <Form.Label>Password Confirmation</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"enter password again\" onChange={_handlePasswordConfirmation}/>\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Sign Up\n      </Button>\n    </Form>\n  );\n}\n\nexport default withRouter(SignUpForm);\n","import React, {useState} from 'react';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\n\nimport SignUpForm from \"./SignUpForm\";\n\n\n\nexport default function ModalSignUp(props){\n\n  const[modalShow, setModalShow] = useState(false);\n\n  // console.log('Re-rendered ModalSignUp!!');\n\n  return(\n    <ButtonToolbar>\n      <Button className=\"btn-space\" variant=\"warning\" onClick={() => setModalShow(true)}>\n        SignUp\n      </Button>\n\n      <SignUpVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </ButtonToolbar>\n  );\n}\n\n// functional component\nfunction SignUpVerticallyCenteredModal(props) {\n  return(\n    <Modal\n    {...props}\n    size=\"sm\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Sign Up\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <SignUpForm onHide={props.onHide}/>\n      </Modal.Body>\n    </Modal>\n  );\n}\n","import React, {useState} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport url from '../lib/url';\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n// import FormText from \"react-bootstrap/FormText\";\n\n\nfunction LogInForm(props){\n  //use hook to replace this.state\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [jwt, setJwt] = useState('');\n\n\n  const _handleEmailChange = (event) => {\n    if(event.target.value.length > 0){\n      setErrorMessage('');\n    }\n    // event.persist();\n    // console.log(event);\n    // console.log('changed email:', event.target.value); // input value - ok!\n    setEmail(event.target.value);\n  };\n\n  const _handlePasswordChange = (event) => {\n    if(event.target.value.length > 0){\n      setErrorMessage('');\n    }\n    setPassword(event.target.value);\n  };\n\n  const _handleSubmit = (event) => {\n    event.preventDefault();\n    if(email.length === 0 || password.length === 0){\n      setErrorMessage('Please enter an email and password')\n    } else {\n      performLogIn();\n    }\n  };\n\n  // console.log(errorMessage);\n\n  const performLogIn = () => {\n    // console.log('email:', email);\n    // console.log('password:', password); // tested ok!\n    // const URL = \"https://toyshoppingsite.herokuapp.com/user_token\";\n    // const URL = \"http://localhost:3000/user_token\";\n    const URL = `${url.URL}/user_token`;\n    const data = {\n      auth: {\n        email,\n        password\n      }\n    };\n    // example:\n    // {\"auth\":\n    //   {\"email\": \"foo@bar.com\",\n    //     \"password\": \"secret\"\n    //   }\n    // }\n\n    axios.post(URL, data)\n    .then(res => {\n      console.log('response from server:', res, props);\n      setJwt(res.data.jwt);\n      // once login success\n      // 1) store jwt token in the localStorage\n      window.localStorage.setItem('jwt', res.data.jwt);\n      // 2) send another axios request to get the cart from DB, to save in localStorage\n      getCart();\n      // 3) hide the modal\n      props.onHide();\n      // 4) go to the next page\n      props.history.push('/category/1');\n    })\n    .catch(err => {\n      // if any error, update state and print out in UI\n      console.warn('!!!ERROR:', err);\n      setErrorMessage('Invalid email or password')\n    });\n  };\n  // **************TODO:**************\n  // once a user has logged in, either\n  // 1) along with the login token, send back user cart information: line_items\n  // 2) or, send another axios request to get the line_items information\n  // to store inside localStorage to show the shopping cart item number!\n  const getCart = ()=>{\n    console.log('send another axios request!');\n    // axios.get('https://toyshoppingsite.herokuapp.com/cart')\n    // axios.get('http://localhost:3000/cart')\n    // continue!!!!\n    // **************TODO:**************\n    // axios.get(`${url.URL}/cart`)\n\n\n  };\n\n  //\n  // // TEST & LEARN:\n  // // if state (email / password's value) changes, then the whole function component will run again!\n  // // thus, the below line runs everytime the typed-in email's value changes!\n  // console.log('normal console.log', email);\n  // // Also, can use useEffect to catch the change of state\n  // useEffect(()=> console.log('useEffect:', email), [email]);\n  // console.log('currentPassword:', password);\n\n\n  return(\n    <Form onSubmit={_handleSubmit}>\n      <Form.Text className=\"errorMessage\">\n        {errorMessage}\n      </Form.Text>\n      <Form.Group controlId=\"loginFormBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"enter email\" onChange={_handleEmailChange}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"loginFormBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"enter password\" onChange={_handlePasswordChange}/>\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Log In\n      </Button>\n    </Form>\n  );\n}\n\n// using Curl in the bash to test - SUCCESS!\n// curl -X POST \"https://toyshoppingsite.herokuapp.com/user_token\" -d '{\"auth\": {\"email\": \"lily@lily.com\", \"password\": \"chicken\"}}' -H \"Content-Type: application/json\"\n\n\nexport default withRouter(LogInForm);\n","import React, {useState} from 'react';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\n\nimport LogInForm from \"./LogInForm\";\n\n\n\nexport default function ModalLogIn(props){\n\n  const[modalShow, setModalShow] = useState(false);\n\n  return(\n    <ButtonToolbar>\n      <Button className=\"btn-space\" variant=\"info\" onClick={() => setModalShow(true)}>\n        LogIn\n      </Button>\n\n\n      <LogInVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </ButtonToolbar>\n  );\n}\n\n// functional component\nfunction LogInVerticallyCenteredModal(props) {\n  return(\n    <Modal\n    {...props}\n    size=\"sm\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Log In\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <LogInForm onHide={props.onHide}/>\n      </Modal.Body>\n    </Modal>\n  );\n}\n","import React, {useState} from 'react';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function ModalHint(props){\n\n  const[modalShow, setModalShow] = useState(false);\n\n\n  return(\n    <ButtonToolbar>\n      <button className=\"hint-button\" onClick={() => setModalShow(true)}>\n        <h5>Hint</h5>\n      </button>\n\n      <LogInVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </ButtonToolbar>\n  );\n}\n\n// functional component\nfunction LogInVerticallyCenteredModal(props) {\n  return(\n    <Modal\n    {...props}\n    size=\"sm\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          About Payment\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"note\">\n        <p><small>\n          Hi there, <br/>\n          We are using Stripe test environment.<br/>\n          Please select from the below cards to proceed.\n        </small></p>\n        <p><small>\n          <strong>Visa: 4242 4242 4242 4242</strong>\n        </small></p>\n        <p><small>\n          <strong>Mastercard: 5555 5555 5555 4444</strong>\n        </small></p>\n        <p><small>\n          <strong>American Express: 3782 822463 10005</strong>\n        </small></p>\n        <p><small>\n          <strong>\n          * a valid expiration date in the future <br/>\n          * any random CVC number\n          </strong>\n        </small></p>\n      </Modal.Body>\n    </Modal>\n  );\n}\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {CardElement, injectStripe} from 'react-stripe-elements';\nimport axios from 'axios';\nimport url from '../lib/url';\nimport ModalHint from './ModalHint';\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\n\nclass CheckoutForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message:''\n    };\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit(event) {\n    // LEARNING:\n    // DOCS:\n    // 1) The injectStripe function wraps the component, creating a new component with an injected stripe prop, which contains a Stripe object.\n    // MEANING: wrapped inside the injectStripe() function, CheckoutForm component gets a 'stripe' prop whose value is a stripe object => this.props.stripe\n    // this stripe object has many methods, and one of them is createToken(), used to tokenize the credential card info\n    // 2) https://stripe.com/docs/stripe-js/reference#stripe-create-token\n    // tokenData, an object containing additional payment information you might have collected, and it's highly recommended collecting name and address\n    // name should use the user's signup name!\n    // 2.5) tested: if not passing any argument to .createToken(), it still generates token\n    // however, as highly recommended by docs, collecting name and address can be used to perform a number of verifications, such as CVC, ZIP, and address verification!!!\n    let {token} = await this.props.stripe.createToken({name: \"Name\"});\n    // ********************** TODO: **********************\n    // 1, when a user login, send back user name for Stripe token creation + cart line_items info for updating top right corner cart items number, and store both in localStorage\n    // 2, when a user signup, store user name directly in localStorage, set cart item number as (0), later when add line items to cart, will need to update localStorage cart item number info!\n    // 3, when log out, clear localStorage, user name + cart info + jwt\n    // ***************************************************\n\n    // 3) the below line won't run, until the above line created a token and stored into the variable 'token', -> that's what await does!!!\n    console.log('****** token *****', token); // tested fine!\n\n    // some invalid card number will be recognised by stripe automatically during user input,\n    // while some numbers cannot generate Stripe token at all.\n    // to avoid crash, insert message and return function.\n    if(!token){\n      this.setState({\n        message:'Invalid card information. Please contact your card issuer for more details.'\n      });\n      return;\n    }\n\n    console.log('****** This is Stripe Token: *****', token.id); // tested fine!\n\n    // Only after the above token is generated, will then run the below code and post the data including the token to server, to actually make the charge!\n\n    // const URL = `https://toyshoppingsite.herokuapp.com/charge`;\n    const URL = `${url.URL}/charge`; // for test\n\n    const jwt = localStorage.getItem('jwt');\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt\n      }\n    };\n\n    const data = {\n      charge: {\n        stripeToken: token.id\n      }\n    };\n\n    axios.post(URL, data, configHeader)\n    .then(res => {\n      console.log('stripe response', res);\n      console.log('stripe response', res.statusText);\n\n      // 1, payment success\n      if (res.statusText == \"OK\"){\n\n        // 1> frontend, clear localStorage cart, to be reused!\n        // so that when redirect to the new page, top right corner cart item number changes back to \"0\"\n        localStorage.setItem('cart', 0);\n\n        // 2> backend, send request to server to change DB\n        // 1) move line_items from cart into order\n        // 2) also update product stock!\n        // 3) at last redirect to order page!\n        // ********** TODO: **************\n        // doing the below in a separate axios request as previously have already built the below process based on faking Successful payment\n        // will need to minimise the axios request and do logic process at the backend in one step once payment is successful.\n        // for now, using the already built process as a separate step due to tight deadline\n        moveLineItemsFromCartToOrderAndUpdateStock();\n      }\n    })\n    .catch(err => {\n      console.warn('stripe error', err.response);\n      this.setState({\n        message: 'Transaction unsuccessful. Please contact your card issuer for more details.'\n      });\n    });\n\n\n    const moveLineItemsFromCartToOrderAndUpdateStock = ()=>{\n      // const URL = `https://toyshoppingsite.herokuapp.com/order`;\n      const URL = `${url.URL}/order`;\n\n      const jwt = localStorage.getItem('jwt');\n\n      const configHeader = {\n        headers: {\n          Authorization: 'Bearer ' + jwt,\n        },\n      };\n\n      axios.get(URL, configHeader)\n      .then(res => {\n        console.log('response of success order id:', res.data.id);\n\n        // get the order_id from response, and redirect!\n        const orderId = res.data.id\n        // 1) if order succeed, redirect to order page, and show messages there!\n        this.props.history.push(`/order/${orderId}`)\n      })\n      .catch(err => {\n        // 2) if order failed, show message like out of order!\n        console.warn('ERROR!', err);\n      });\n    };\n  };\n\n\n\n  render(){\n    let errorMessage = (\n      <p className=\"errorMessage\"><small>\n        {this.state.message}\n      </small></p>\n    );\n\n    return (\n      <div className=\"payment-form\">\n        <Container>\n          <Row>\n            <Col>\n              <p className=\"enter-details\">Enter Card Details</p>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              {errorMessage}\n            </Col>\n          </Row>\n          <Row>\n            <Col className=\"stripe-form\">\n              <CardElement />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={7} className=\"submit-button-container\">\n              <button className=\"submit-button\" onClick={this.submit}><h5>Submit</h5></button>\n            </Col>\n            <Col md={5} className=\"hint-button-container\">\n              <ModalHint/>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default injectStripe(withRouter(CheckoutForm));\n","import React, {Component} from 'react';\nimport {Elements, StripeProvider} from 'react-stripe-elements';\nimport CheckoutForm from './CheckoutFormTODO';\n\nclass Payment extends Component {\n\n  // StripeProvider is what actually creates the Stripe instance\n  // and passes in your API key.\n  render() {\n    return (\n      <StripeProvider apiKey=\"pk_test_dBB7Zc6zujggRBFHQUdShiJg00Ee8VeuNR\">\n        <div className=\"payment-form\">\n          <h1>Payment Form</h1>\n          <div className=\"payment-form\">\n            <Elements>\n              <CheckoutForm />\n            </Elements>\n          </div>\n        </div>\n      </StripeProvider>\n    );\n  }\n}\n\nexport default Payment;\n","import React from 'react';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport './css/bootstrap.min.css';// import Bootstrap css\nimport './css/main.css';// import custom css\n\nimport BootNav from './components/BootNav';\n// import Image from \"react-bootstrap/Image\";\n\nimport Home from \"./components/Home\";\nimport MyAccount from \"./components/MyAccount\";\nimport Category from \"./components/Category\";\nimport Product from \"./components/Product\";\nimport CartConfirm from \"./components/CartConfirm\";\nimport CheckOut from \"./components/CheckOut\";\nimport Payment from './components/Payment.js';\nimport Order from './components/Order';\n\n\nconst Routes = (\n    <Router>\n    <div className=\"entireBody\">\n\n      <Route path=\"/\" component={BootNav}/>\n      <Route exact path=\"/\" component={Home}/>\n      <Route exact path=\"/account\" component={MyAccount}/>\n      <Route exact path=\"/category/:id\" component={Category}/>\n      <Route exact path=\"/product/:id\" component={Product}/>\n      <Route exact path=\"/cart\" component={CartConfirm}/>\n      <Route exact path=\"/checkout\" component={CheckOut}/>\n      <Route exact path=\"/payment\" component={Payment}/>\n      <Route exact path=\"/order/:id\" component={Order}/>\n\n\n\n      <footer className=\"body-footer\">\n        {\n        // <Image className=\"happykids\" src=\"/images/happykids.jpg\" />\n        // <img src={process.env.PUBLIC_URL + '/happykids.jpg'} />\n        }\n\n      </footer>\n    </div>\n  </Router>\n);\n\nexport default Routes;\n","import React, {useState} from 'react';\nimport {Link} from \"react-router-dom\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Dropdown from \"react-bootstrap/Dropdown\"\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\"\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\"\nimport DropdownItem from \"react-bootstrap/DropdownItem\"\n\nimport ModalSignUp from \"./ModalSignUp\";\nimport ModalLogIn from \"./ModalLogIn\";\n// import MyAccount from \"./MyAccount\";\n\n\n\nexport default function BootNav(props){\n\n  const [jwt, setJwt] = useState(localStorage.getItem('jwt'));\n\n  const _handleLogOut = () => {\n    // 1) clear localStorage : jwt, cart, userName\n    localStorage.removeItem('jwt');\n    localStorage.removeItem('cart');\n    localStorage.removeItem('userName');\n\n    // 2) update state, so BootNav can re-render\n    setJwt('');\n\n    // 3) redirect to Home\n    props.history.push('/');\n  }\n\n  let buttonLeft;\n  if(localStorage.getItem('jwt')){\n    // already logged in\n    buttonLeft = (\n      <Link to={'/account'}>\n        <Button className=\"btn-space\" variant=\"warning\">\n          MyAccount\n        </Button>\n      </Link>\n    );\n  } else {\n    // not yet logged in\n    buttonLeft = (\n      <ModalSignUp />\n    );\n  }\n\n  let buttonRight;\n  if(localStorage.getItem('jwt')){\n    // already logged in\n    buttonRight = (\n      <div>\n        <Button className=\"btn-space\" variant=\"info\" onClick={_handleLogOut}>\n          LogOut\n        </Button>\n        <Link to={'/cart'}>\n          <img className=\"cart-icon\" src={process.env.PUBLIC_URL +`/images/cart-icon.png`}></img>\n        </Link>\n      </div>\n    );\n  } else {\n    // not yet logged in\n    buttonRight = (\n      <ModalLogIn/>\n    );\n  }\n\n  return(\n    <Navbar sticky=\"top\" expand=\"md\" className=\"bg-light justify-content-between\">\n      <Navbar.Brand href=\"#/\">\n        <div>V's Toy</div>\n        <img className=\"happy-kids\" src={process.env.PUBLIC_URL + '/images/happy-kids.png'}/>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <ButtonToolbar>\n            <Button className=\"btn-space\" href=\"#/\" variant=\"danger\">Home</Button>\n            <Button id=\"test\"className=\"btn-space\" href=\"#about\" variant=\"primary\">About</Button>\n          </ButtonToolbar>\n\n          <Dropdown>\n            <Dropdown.Toggle className=\"btn-space\" variant=\"success\" id=\"dropdown-basic\">\n              Category\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <NavDropdown.Item id=\"category-1\" href=\"#category/1\">Age 0-2</NavDropdown.Item>\n              <NavDropdown.Item id=\"category-2\" href=\"#category/2\">Age 2-5</NavDropdown.Item>\n              <NavDropdown.Item id=\"category-3\" href=\"#category/3\">Age 5-8</NavDropdown.Item>\n              <NavDropdown.Item id=\"category-4\" href=\"#category/4\">Age over 8</NavDropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Nav>\n\n        <Form inline>\n          <FormControl type=\"text\" placeholder=\"e.g. hellokitty\" className=\"mr-sm-2\" />\n          <Button variant=\"secondary\" className=\"btn-space\" size=\"sm\">Search</Button>\n        </Form>\n\n        <Nav className=\"mr-auto\">\n          {buttonLeft}\n          {buttonRight}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n\n} // class BootNav\n  //\n  // <Image className=\"cart-icon\" src=\"../public/images/cart-icon.png\" fluid />\n\n// <img className=\"cart-icon\" src={process.env.PUBLIC_URL + '/images/c101.jpg'} />\n\n// <div className=\"cart-icon\">\n//   </div>\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport url from '../lib/url';\n\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\n\n\nexport default function Home(props){\n\n  const[products, setProducts] = useState([]);\n\n  useEffect(() => {\n    // const URL = `https://toyshoppingsite.herokuapp.com/products`;\n    // const URL = `http://localhost:3000/products`;\n    const URL = `${url.URL}/products`;\n\n    axios.get(URL)\n    .then(res => {\n      console.log('reponse.data:', res.data); // an array of all product objects\n      setProducts(res.data);\n    })\n    .catch(err => {\n      console.warn(err);\n    });\n  },[]);\n\n  console.log('products', products);\n\n\n\n\n\n  return(\n    <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/playingkids.jpg`} fluid />\n  );\n}\n\n\n// <Container>\n//   <Row>\n//     <Col>\n//     </Col>\n//   </Row>\n//   <Row>\n//     <Col>1 of 2</Col>\n//     <Col>2 of 2</Col>\n//     <Col>1 of 3</Col>\n//     <Col>2 of 3</Col>\n//     <Col>3 of 3</Col>\n//   </Row>\n//   <Row>\n//     <Col>1 of 3</Col>\n//     <Col>2 of 3</Col>\n//     <Col>3 of 3</Col>\n//   </Row>\n// </Container>\n","import React from 'react';\n\nexport default function MyAccount(){\n  return(\n    <div>\n      My Account\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport url from '../lib/url';\n\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Figure from \"react-bootstrap/Figure\";\nimport FigureImage from \"react-bootstrap/FigureImage\";\nimport FigureCaption from \"react-bootstrap/FigureCaption\";\n\n\n\nexport default function Category(props){\n\n  console.log('url is', url.URL);\n\n  const {id} = props.match.params;\n  // LEARNING: same as below\n  // const categoryId = props.match.params.id;\n  // console.log('categoryId:',categoryId);\n\n  const [products, setProducts] = useState([]);\n  // const [jwt, setJwt] = useState(localStorage.getItem('jwt'))\n\n  // LEARNING:\n  // whenever the props id changes, useEffect will catch that change and render the whole page\n  // even for the first time the component renders\n  useEffect(()=>{\n    getProductsOfCategory();\n  },[id]);\n\n\n  const getProductsOfCategory = ()=>{\n    // console.log('make axios request!');\n\n    // const URL = `https://toyshoppingsite.herokuapp.com/categories/${id}`;\n    // const URL = `http://localhost:3000/categories/${id}`;\n    const URL = `${url.URL}/categories/${id}`;\n\n    // LEARNING:\n    // category page doesn't need user authentication, thus no need to include jwt inside Header\n    // const configHeader = {\n    //   header: {\n    //     Authorization: 'Bearer ' + jwt\n    //   }\n    // };\n\n    axios.get(URL) //, configHeader\n    .then(res => {\n      // console.log('!!!res is :', res);\n      console.log('get all the products response:', res.data);// an array of products items\n      setProducts(res.data);\n    })\n    .catch(err => {\n      console.warn('ERRORS!!!:', err);\n    });\n  }\n\n  // console.log('updated products:', products);\n\n\n  return(\n    <Container>\n      <Row>\n        {\n          products.map( product => (\n            <Col xs={12} md={4} key={product.name}>\n              <Link to={`/product/${product.id}`}>\n                <Figure>\n                  <Figure.Image\n                    width={200}\n                    height={200}\n                    fluid={false}\n                    alt=\"200x200\"\n                    src={process.env.PUBLIC_URL + `/images/${product.image}`}\n                  />\n                  <Figure.Caption>\n                    <p><strong>{product.name}</strong></p>\n                    <p>Price: {`$${product.price}`}</p>\n                    <p>In Stock: {product.stock}</p>\n                    <p>{product.description}</p>\n                  </Figure.Caption>\n                </Figure>\n              </Link>\n            </Col>\n          ))\n        }\n      </Row>\n    </Container>\n  )\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport url from '../lib/url';\n\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Figure from \"react-bootstrap/Figure\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport Form from \"react-bootstrap/Form\";\nimport FormText from \"react-bootstrap/FormText\";\nimport Button from \"react-bootstrap/Button\";\n\n\nexport default function Product(props){\n\n  // product id passed by props\n  const {id} = props.match.params;\n  // console.log(id);\n\n  // need jwt for user to get a cart\n  // if use logged in, valid string; if not, null\n  const jwt = localStorage.getItem('jwt');\n  const [product, setProduct] = useState({});\n  const [category, setCategory] = useState({});\n  const [quantity, setQuantity]= useState(1);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [buttonStatus, setButtonStatus] = useState(false);\n  const [buttonText, setButtonText] = useState('Add to Cart');\n  const [successAddToCartMessage, setSuccessAddToCartMessage] = useState('');\n\n  // first time the component renders\n  // axios request to get the product info by id\n  useEffect(()=>{\n    getProductById(id);\n    if(!jwt){\n      setButtonStatus(true);\n      setButtonText('Login to use cart')\n    }\n  },[]);\n\n  const getProductById = (id)=>{\n    // const URL = `https://toyshoppingsite.herokuapp.com/products/${id}`;\n    // const URL = `http://localhost:3000/products/${id}`;\n    const URL = `${url.URL}/products/${id}`;\n\n    axios.get(URL)\n    .then(res => {\n      console.log('response:', res.data);\n      console.log('categoryName:', res.data.category.name);\n\n      setProduct(res.data); // the product object, including its category object\n      setCategory(res.data.category); // the associated category object\n    })\n    .catch(err => {\n      console.warn('ERRORS!!!:', err);\n      // setErrorMessage('Product not found');\n      props.history.push('/')\n    });\n  };\n\n\n  // ************ regardless of user loggin, check if the product is out of stock *************\n  // if yes, 1) show message, 2) disable AddtoCart button\n  // TESTED: if a button is disabled, won't be able to trigger click event handler\n  // let setButtonStatus(false);\n  // let inStockUI;\n  // if (product.stock <= 0){\n  //   setButtonStatus(true);\n  //   inStockUI = (\n  //     <span class=\"out-of-stock\">Sorry, this product is out of stock.</span>\n  //   );\n  // } else {\n  //   inStockUI = (<span>{product.stock} pcs</span>)\n  // }\n  // ************ // ************ // ************ // ************ // ************\n\n\n\n  // _handleChangeQuantity make sure quantity stored in state is <= stock\n  const _handleChangeQuantity = (event) => {\n    console.log('event.target.value:', event.target.value); // actual input quantity\n\n    // Only when a user is logged in,\n    // can the user toggle the button status based on user input quantity\n    if(jwt){\n      // if the user has added product into the cart, will get success message\n      // on next click on quantity, clear the message;\n      setSuccessAddToCartMessage('');\n\n      // TEST: typeof event.target.value is a string, need to parse it to integer!!!\n      let wantedQuantity = parseInt(event.target.value);\n      // console.log('type of wantedQuantity', typeof(wantedQuantity));\n\n      // check if the input quantity is more than actual stock\n      // since user can manually type in the amount\n      // ********************#TODO*********************\n      // this logic is not perfect\n      // should axios request the current cart data with the existing quantity(if any, by default = 0)\n      // then compare total requested quantity (wantedQuantity + existing cart quantity) with the product stock,\n      // currently, once post request, backend is checking the total requested quantity (existing + new) to make sure <= stock\n      // if not, would send back error to .catch()\n      // it's not perfect user experience, but at least currently, at the frontend\n      // make sure user's actual type-in value is <= stock number,\n      // will leave it for now due to tight deadline, but will refactor late\n      if (wantedQuantity > product.stock){\n        // 1) prompt message\n        setErrorMessage('Sorry, not enough stock.');\n        // 2) the input quantity doesn't count, reset state quantity to 0\n        setQuantity(1);\n        // 3) disable 'Add to Cart' button, cannot click\n        setButtonStatus(true);\n      } else {\n        setErrorMessage('');\n        setQuantity(wantedQuantity);\n        setButtonStatus(false);\n      }\n      console.log('wantedQuantity:', wantedQuantity);\n    }\n    // if a user is not logged in, do nothing, as the user cannot click 'Add to Cart'\n\n  }; //_handleChangeQuantity\n\n  console.log('stateQuantity:', quantity);\n  console.log('button disabled?:', buttonStatus);\n\n\n  // At this stage, have ensure that\n  // only when 1) user login & 2) input quantity <= stock\n  // that a user can click the 'Add to Cart' button!\n  const _handleAddToCart = (event) => {\n    // console.log(event);\n    console.log('clicked cart');\n    console.log('when click cart, stateQuantity', quantity);\n    console.log('when click cart, typeof stateQuantity', typeof(quantity));\n\n    // check if the state quantity is 0 or empty?\n    // if yes, propmt message, disable button and return early\n    if(!quantity){\n      console.log('when quantity === 0, it ran!');\n      setErrorMessage('Please select a quantity.')\n      setButtonStatus(true);\n      return;\n    }\n    // if not, then quantity is valid, send to the DB and add into the cart!\n    // const URL = \"https://toyshoppingsite.herokuapp.com/line_items\";\n    // const URL = \"http://localhost:3000/line_items\";\n    const URL = `${url.URL}/line_items`;\n    const product_id = product.id;\n    const data = {\n      line_item:{\n        product_id,\n        quantity\n      }\n    };\n    const configHeader = {\n      headers: {\n        Authorization: \"Bearer \" + jwt\n      }\n    };\n\n    axios.post(URL, data, configHeader)\n    .then(res => {\n      console.log('added to cart',res);\n      // pop up a msg to user, showing adding to cart successfully, with a link to cart page\n      setSuccessAddToCartMessage(`Successfully added to cart!`);\n    })\n    .catch(err => {\n      console.warn('ERROR of adding to cart', err);\n      setErrorMessage('Sorry, not enough stock.')\n    });\n  }; // _handleAddToCart\n\n  let showSuccessMessage = \"\";\n  if(successAddToCartMessage){\n    showSuccessMessage = (\n      <Link to={`/cart`} className=\"view-your-cart\">\n        <strong><p className = 'show-success-mesage'>\n          {successAddToCartMessage} {' '}\n          View your cart\n        </p></strong>\n      </Link>\n    )\n  }\n\n\n\n  return(\n    <Container>\n      <Row>\n        <Col sm md={7}>\n          <Figure>\n            <Figure.Image\n              fluid={true}\n              alt=\"500x500\"\n              src={process.env.PUBLIC_URL +`/images/${product.image}`}\n            />\n            <Figure.Caption>\n              {product.description}\n            </Figure.Caption>\n          </Figure>\n        </Col>\n        <Col sm md={5}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item><strong>{product.name}</strong></ListGroup.Item>\n            <ListGroup.Item>Category: {category.name}\n            </ListGroup.Item>\n            <ListGroup.Item>Price: {`$${product.price}`}</ListGroup.Item>\n            <ListGroup.Item>\n              <Form.Text className=\"errorMessage\">\n                {errorMessage}\n              </Form.Text>\n              Select Quantity:{' '}\n              <input type=\"number\" min=\"1\" max={product.stock} defaultValue=\"1\" onChange={_handleChangeQuantity}/>\n              <Form.Text>\n                (In stock: {product.stock})\n              </Form.Text>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button id=\"add-to-cart\" disabled={buttonStatus} onClick={_handleAddToCart}>{buttonText}</Button>\n            </ListGroup.Item>\n            <ListGroup.Item>{showSuccessMessage}</ListGroup.Item>\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport url from '../lib/url';\n\nimport Table from \"react-bootstrap/Table\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\n\n\n\nexport default function CartConfirm(props){\n\n  const jwt = localStorage.getItem('jwt');\n\n  const [lineItems, setLineItems] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  // const [quantity, setQuantity] = useState(0);\n  // const [product, setProduct] = useState({});\n\n  useEffect(()=>{\n    // const URL = `https://toyshoppingsite.herokuapp.com/cart`;\n    const URL = `${url.URL}/cart`;\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      },\n    };\n\n    // console.log('%c get CART', 'font-size: 20pt');\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log('response:', res.data); // an array of all line_item objects of the cart / current_user\n      setLineItems(res.data);\n    })\n    .catch(err => {\n      console.warn('SERVER ERROR:', err);\n      // if any error, e.g. unlogged in user send random request in address bar\n      // redirect to home page\n      props.history.push('/');\n    });\n  },[]);\n\n  // in case there's no line_items inside the cart of the current_user\n  let noLineItemsToShow = (\n    <tbody>\n      <tr>\n        <td>There's no item in your cart.</td>\n        <td> </td>\n        <td> </td>\n        <td> </td>\n        <td> </td>\n      </tr>\n    </tbody>\n  );\n\n\n  let subtotal = 0;\n  lineItems.forEach(li => {\n    subtotal += li.quantity * li.product.price;\n  })\n\n\n  const _handleUpdateQuantity = (event)=>{\n    event.preventDefault();\n    event.persist();\n    console.log(event);\n\n    const updatedQuantity = parseInt(event.target[0].value);\n    const lineItemId = parseInt(event.target[0].name);\n    console.log('updated quantity',updatedQuantity); // new quantity input\n    console.log('lineItemId',lineItemId); // product_id\n\n    // ******************LEARNING: ******************\n    // let currentProductStock;\n    // lineItems.forEach((li)=>{\n    //   if(li.product_id === lineItemId){\n    //     console.log('currentProductId', li.product_id);\n    //     currentProductStock = li.product.stock\n    //   }\n    // });\n    // console.log('currentProductStock', currentProductStock);\n    //\n    // // 1) double check if the updatedQuantity is <= currentProductStock\n    // // if no, pop up error message, and return early, no need to proceed\n    // // until the next updatedQuantity is a valid number, then do axios request\n    // if(updatedQuantity > currentProductStock){\n    //   setErrorMessage(`Sorry, only ${currentProductStock} in stock.`)\n    //   return;\n    // }\n    // ******************************************************\n\n    // APPARENTLY, the form input is very smart to check\n    // if the updatedQuantity(user input) is <= max && >= min\n    // ONE MORE THING !!!\n    if (isNaN(updatedQuantity)){\n      console.log('its NaN');\n      // POP UP MESSAGE:\n      setErrorMessage('Please select a quantity.')\n      // return early\n      return;\n    }\n    console.log('should not run if its NaN');\n\n    // if the above is clear,\n    // 1) clear errorMessage first\n    setErrorMessage('');\n    // 2) ideally, check if the updatedQuantity is the same as the existing quantity stored in line_item\n    // if yes, no need to send further axios request,\n    // but for now, it might be rare, leave this for refactor later.\n    // 3) send axios post request to DB, to update the single line_item\n    // axios.put(url[, data[, config]])\n    // const URL = `https://toyshoppingsite.herokuapp.com/line_items/${lineItemId}`;\n    const URL = `${url.URL}/line_items/${lineItemId}`;\n    const data = {\n      line_item: {\n        quantity: updatedQuantity\n      }\n    };\n    const configHeader = {\n      headers: {\n        Authorization: \"Bearer \" + jwt\n      }\n    };\n\n    axios.put(URL, data, configHeader)\n    .then(res => {\n      console.log('response from server:', res.data); // an array of all line_item objects of the cart / current_user\n      // if success, 1) update the state: lineItems\n      // DB send back the whole array of line_item objects, including its product association\n      // the whole page will re-render with updated state\n      setLineItems(res.data);\n    })\n    .catch(err => {\n      console.warn('ERROR of updating quantity', err);\n      setErrorMessage('Sorry, not enough stock.')\n    });\n\n  }\n\n\n\n  const _handleRemoveLineItem = (event) => {\n    event.persist();\n    console.log('click image', event);\n    console.log('lineItemId', event.target.name);\n    // console.log('typeof', typeof(event.target.name));\n\n    const lineItemId = parseInt(event.target.name);\n    // console.log('typeof', typeof(lineItemId));\n\n    // send delete request to DB with line_item id\n    // axios.delete(url[, config])\n    // const URL = `https://toyshoppingsite.herokuapp.com/line_items/${lineItemId}`;\n    const URL = `${url.URL}/line_items/${lineItemId}`;\n\n    const configHeader = {\n      headers: {\n        Authorization: \"Bearer \" + jwt\n      }\n    };\n\n    axios.delete(URL, configHeader)\n    .then(res => {\n      console.log('DELETE response:', res.data);\n      // after deleting, send back a new line_items array to update state!\n      setLineItems(res.data);\n    })\n    .catch(err => {\n      console.warn('ERRORS!!!:', err);\n    });\n  };\n\n\n  return(\n    <Table striped hover responsive=\"md\">\n      <thead>\n        <tr>\n          <th className=\"cart-label\"><strong>My Cart</strong></th>\n          <th className=\"cart-label\"><strong>Item</strong></th>\n          <th className=\"cart-label\"><strong>Quantity</strong></th>\n          <th className=\"cart-label\"><strong>Price</strong></th>\n          <th className=\"cart-label\"><strong>Total</strong></th>\n        </tr>\n      </thead>\n\n      { // if there's no line_items in the cart\n       !lineItems.length\n       ?\n       noLineItemsToShow\n       :\n      (\n        <tbody>\n          {lineItems.map(li => (\n            <tr key={li.product.name}>\n              <td>\n                <Link to={`/product/${li.product_id}`}>\n                  <Image\n                    className=\"cart-thumbnail\"\n                    src={process.env.PUBLIC_URL +`/images/${li.product.image}`}\n                    thumbnail\n                  />\n                </Link>\n              </td>\n\n              <td className=\"product-name\"><br/><strong>{li.product.name}</strong></td>\n\n              <td>\n                <form className=\"quantity-update change-quantity\" onSubmit={_handleUpdateQuantity}>\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    max={li.product.stock}\n                    name={li.id}\n                    defaultValue={li.quantity}\n                  /> {' '}\n                  <input\n                    type=\"submit\"\n                    className=\"update-quantity\"\n                    value=\"Update\"\n                    disabled={false}\n                  /> {' '}\n                </form>\n                <Image\n                  name={li.id}\n                  className=\"trash change-quantity\"\n                  src={process.env.PUBLIC_URL + '/images/small-trash.png'}\n                  title=\"Remove\"\n                  onClick={_handleRemoveLineItem}\n                  fluid\n                />\n              </td>\n\n              <td><br/><strong>${li.product.price}</strong></td>\n\n              <td><br/><strong>${li.quantity * li.product.price}</strong></td>\n            </tr>\n           ))\n          }\n          <tr>\n            <td> </td>\n            <td> </td>\n            <td>\n              <p className=\"errorMessage\">\n                {errorMessage}\n              </p>\n            </td>\n            <td><strong className=\"cart-label\">Subtotal: </strong></td>\n            <td><strong className=\"cart-label\">${subtotal}</strong></td>\n          </tr>\n          <tr>\n            <td> </td>\n            <td> </td>\n            <td> </td>\n            <td> </td>\n            <td>\n              <Link to={'/checkout'}>\n                <Button id=\"checkout\">Check Out</Button>\n              </Link>\n            </td>\n          </tr>\n        </tbody>\n      )}\n    </Table>\n  );\n} // CartConfirm\n\n\n\n\n\n\n// <div className=\"errorMessage\">{errorMessage}</div>\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport url from '../lib/url';\n\nimport Table from \"react-bootstrap/Table\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function CheckOut(props){\n  const jwt = localStorage.getItem('jwt');\n\n  const [lineItems, setLineItems] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  // const [quantity, setQuantity] = useState(0);\n  // const [product, setProduct] = useState({});\n\n  useEffect(()=>{\n    // const URL = `https://toyshoppingsite.herokuapp.com/cart`;\n    const URL = `${url.URL}/cart`;\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      },\n    };\n\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log('response:', res.data); // an array of all line_item objects of the cart / current_user\n      setLineItems(res.data);\n    })\n    .catch(err => {\n      console.warn('SERVER ERROR:', err);\n      // if any error, e.g. unlogged in user send random request in address bar\n      // redirect to home page\n      props.history.push('/');\n    });\n  },[]);\n\n  let subtotal = 0;\n  lineItems.forEach(li => {\n    subtotal += li.quantity * li.product.price;\n  })\n\n  return(\n    <Table responsive=\"md\">\n      <thead>\n        <tr>\n          <th className=\"cart-label\">\n            <strong>Confirm order</strong>\n          </th>\n          <th className=\"cart-label\"><strong>Item</strong></th>\n          <th className=\"cart-label\"><strong>Quantity</strong></th>\n          <th className=\"cart-label\"><strong>Price</strong></th>\n          <th className=\"cart-label\"><strong>Total</strong></th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {lineItems.map(li => (\n          <tr key={li.product.name}>\n            <td>\n              <Link to={`/product/${li.product_id}`}>\n                <Image className=\"cart-thumbnail\" src={process.env.PUBLIC_URL + `/images/${li.product.image}`} thumbnail />\n              </Link>\n            </td>\n            <td><strong>{li.product.name}</strong></td>\n            <td><strong>{li.quantity}</strong></td>\n            <td><strong>${li.product.price}</strong></td>\n            <td><strong>${li.quantity * li.product.price}</strong></td>\n          </tr>\n        ))\n      }\n        <tr>\n          <td> </td>\n          <td> </td>\n          <td>\n            <Link to={'/cart'} id=\"back-to-cart\">\n              <strong>\n                Back to cart\n              </strong>\n            </Link>\n          </td>\n          <td><strong className=\"cart-label\">Subtotal: </strong></td>\n          <td><strong className=\"cart-label\">${subtotal}</strong></td>\n        </tr>\n        <tr>\n          <td> </td>\n          <td> </td>\n          <td> </td>\n          <td> </td>\n          <td>\n            <Link to={'/payment'}>\n              <Button id=\"pay-by-card\">Pay by Card</Button>\n            </Link>\n          </td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport url from '../lib/url';\n\nimport Table from \"react-bootstrap/Table\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\n\n\n\n\nexport default function Order(props){\n\n  const orderId = props.match.params.id\n  console.log('orderId', orderId);\n  const jwt = localStorage.getItem('jwt');\n\n  const [lineItems, setLineItems] = useState([]);\n\n  const [show, setShow] = useState(true);\n\n  useEffect(() => {\n    // const URL = `https://toyshoppingsite.herokuapp.com/order/${orderId}`;\n    const URL = `${url.URL}/order/${orderId}`;\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      }\n    };\n\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log(res.data);\n      setLineItems(res.data);\n    })\n    .catch(err => {\n      console.warn('ERROR', err);\n    });\n  },[]);\n\n  let subtotal = 0;\n  lineItems.forEach(li => {\n    subtotal += li.quantity * li.product.price;\n  })\n\n\n  return(\n    <div>\n      <div className=\"success-purchase\">\n        <strong>Thanks for Purchase!</strong> {' '}\n        <Link className=\"success-purchase-link\" to={'/category/4'}>\n          <strong>Find More Toys?!</strong>\n        </Link>\n      </div>\n      <Table responsive=\"md\">\n        <thead>\n          <tr>\n            <th className=\"cart-label\">\n              <strong>Your Order</strong>\n            </th>\n            <th className=\"cart-label\"><strong>Item</strong></th>\n            <th className=\"cart-label\"><strong>Quantity</strong></th>\n            <th className=\"cart-label\"><strong>Price</strong></th>\n            <th className=\"cart-label\"><strong>Total</strong></th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {lineItems.map(li => (\n            <tr key={li.product.name}>\n              <td>\n                <Link to={`/product/${li.product_id}`}>\n                  <Image className=\"cart-thumbnail\" src={process.env.PUBLIC_URL + `/images/${li.product.image}`} thumbnail />\n                </Link>\n              </td>\n              <td><strong>{li.product.name}</strong></td>\n              <td><strong>{li.quantity}</strong></td>\n              <td><strong>${li.product.price}</strong></td>\n              <td><strong>${li.quantity * li.product.price}</strong></td>\n            </tr>\n          ))\n        }\n          <tr>\n            <td> </td>\n            <td> </td>\n            <td> </td>\n            <td><strong className=\"cart-label\">Subtotal: </strong></td>\n            <td><strong className=\"cart-label\">${subtotal}</strong></td>\n          </tr>\n          <tr>\n            <td> </td>\n            <td> </td>\n            <td> </td>\n            <td> </td>\n            <td>\n              <Link to={'/category/4'}>\n                <Button className=\"back-to-home\">Find More Toys</Button>\n              </Link>\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n\n\n\n}\n","// import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport Routes from './routes';\n\n\n\nReactDOM.render(Routes, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}