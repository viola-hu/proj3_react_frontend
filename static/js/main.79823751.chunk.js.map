{"version":3,"sources":["serviceWorker.js","components/SignUpForm.jsx","components/ModalSignUp.jsx","components/LogInForm.jsx","components/ModalLogIn.jsx","components/CheckoutForm.js","components/Payment.js","routes.js","components/BootNav.jsx","components/Home.jsx","components/MyAccount.jsx","components/Category.jsx","components/Product.jsx","components/CartConfirm.jsx","components/CheckOut.jsx","components/RemoveLineItem.jsx","components/Order.jsx","index.js"],"names":["Boolean","window","location","hostname","match","withRouter","props","_useState","useState","_useState2","Object","slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","pwConfirmation","setPwConfirmation","_useState9","_useState10","errorMessage","setErrorMessage","_useState11","_useState12","setJwt","resetErrorMessageIfAnyTypedValue","event","target","value","length","getTokenAndRedirect","data","auth","axios","post","then","res","console","log","jwt","localStorage","setItem","onHide","history","push","catch","err","warn","renderErrorMessage","react_default","a","createElement","map","error","Form_default","Text","key","className","onSubmit","preventDefault","user","password_confirmation","response","errors","Group","controlId","Label","Control","type","placeholder","onChange","Button_default","variant","ModalSignUp","modalShow","setModalShow","ButtonToolbar_default","onClick","SignUpVerticallyCenteredModal","show","Modal_default","assign","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","components_SignUpForm","performLogIn","getCart","get","ModalLogIn","LogInVerticallyCenteredModal","components_LogInForm","moveLineItemsFromCartToOrderAndUpdateStock","configHeader","headers","Authorization","getItem","orderId","concat","style","borderRadius","height","padding","border","marginTop","marginBottom","backgroundColor","width","es","Payment","apiKey","components_CheckoutForm","Component","Routes","react_router_dom","react_router","path","component","buttonLeft","buttonRight","to","removeItem","src","process","Navbar_default","sticky","expand","Brand","href","Toggle","aria-controls","Collapse","Nav_default","Dropdown_default","Menu","NavDropdown_default","Item","inline","FormControl_default","exact","products","setProducts","useEffect","Image_default","fluid","params","getProductsOfCategory","URL","Container_default","Row_default","product","Col_default","xs","md","Figure_default","Image","alt","image","Caption","price","stock","description","setProduct","category","setCategory","quantity","setQuantity","buttonStatus","setButtonStatus","buttonText","setButtonText","_useState13","_useState14","successAddToCartMessage","setSuccessAddToCartMessage","getProductById","showSuccessMessage","sm","ListGroup_default","min","max","defaultValue","wantedQuantity","parseInt","disabled","line_item","product_id","lineItems","setLineItems","noLineItemsToShow","subtotal","forEach","li","_handleUpdateQuantity","persist","updatedQuantity","lineItemId","isNaN","put","_handleRemoveLineItem","delete","Table_default","striped","hover","responsive","thumbnail","title","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79823751.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {useState} from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction SignUpForm(props){\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [pwConfirmation, setPwConfirmation] = useState('');\n  const [errorMessage, setErrorMessage] = useState([]);\n  const [jwt, setJwt] = useState('');\n\n  const resetErrorMessageIfAnyTypedValue = (event) => {\n    if(event.target.value.length > 0){\n      setErrorMessage([]);\n    }\n  };\n\n  const _handleNameChange = (event) => {\n    resetErrorMessageIfAnyTypedValue(event);\n    setName(event.target.value);\n  };\n\n  const _handleEmailChange = (event) => {\n    resetErrorMessageIfAnyTypedValue(event);\n    setEmail(event.target.value);\n  };\n\n  const _handlePasswordChange = (event) => {\n    resetErrorMessageIfAnyTypedValue(event);\n    setPassword(event.target.value);\n  };\n\n  const _handlePasswordConfirmation = (event) => {\n    resetErrorMessageIfAnyTypedValue(event);\n    setPwConfirmation(event.target.value)\n  };\n\n  // 1) create user, 2) get jwt\n  const _handleSubmit = (event) => {\n    event.preventDefault();\n\n    const URL = \"https://toyshoppingsite.herokuapp.com/signup\";\n\n    const data = {\n      user:{\n        name,\n        email,\n        password,\n        password_confirmation: pwConfirmation\n      }\n    };\n\n    axios.post(URL, data)\n    .then(res => {\n      console.log('created user!', res);\n      getTokenAndRedirect();\n    })\n    .catch(err => {\n      console.warn('SignUp ERROR!!!', err.response.data.errors); // an array of errors\n      setErrorMessage(err.response.data.errors)\n    });\n  }\n\n// *********************************************\n  const getTokenAndRedirect = () => {\n    const URL = \"https://toyshoppingsite.herokuapp.com/user_token\";\n    const data = {\n      auth: {\n        email,\n        password\n      }\n    };\n\n    axios.post(URL, data)\n    .then(res => {\n      console.log('response from server:', res, props);\n      setJwt(res.data.jwt);\n      // once login success\n      // 1) store jwt token in the localStorage\n      window.localStorage.setItem('jwt', res.data.jwt);\n      // 2) hide the modal\n      props.onHide();\n      // 3) go to the next page\n      props.history.push('/account');\n    })\n    .catch(err => {\n      // if any error, update state and print out in UI\n      console.warn('LOGIN TOKEN ERROR:', err);\n      setErrorMessage(['Error connecting to server'])\n    });\n  }\n\n  // TEST:\n  // console.log('name:', name);\n  // console.log('email:', email);\n  // console.log('password:', password);\n  // console.log('pwConfirmation:', pwConfirmation);\n  // console.log('errorMessage', errorMessage);\n\n  const renderErrorMessage = (\n    <div>\n      {errorMessage.map(error => (\n        <Form.Text key={error} className=\"errorMessage\">\n          {error}\n        </Form.Text>\n        )\n      )}\n    </div>\n  )\n\n  return(\n    <Form onSubmit={_handleSubmit}>\n      {renderErrorMessage}\n      <Form.Group controlId=\"signUpFormBasicName\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"name\" placeholder=\"enter your name\" onChange={_handleNameChange}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"signUpFormBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"enter email\" onChange={_handleEmailChange}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"signUpFormBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"enter password\" onChange={_handlePasswordChange}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"signUpFormPasswordConfirmation\">\n        <Form.Label>Password Confirmation</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"enter password again\" onChange={_handlePasswordConfirmation}/>\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Sign Up\n      </Button>\n    </Form>\n  );\n}\n\nexport default withRouter(SignUpForm);\n","import React, {useState} from 'react';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\n\nimport SignUpForm from \"./SignUpForm\";\n\n\n\nexport default function ModalSignUp(props){\n\n  const[modalShow, setModalShow] = useState(false);\n\n  // console.log('Re-rendered ModalSignUp!!');\n\n  return(\n    <ButtonToolbar>\n      <Button className=\"btn-space\" variant=\"warning\" onClick={() => setModalShow(true)}>\n        SignUp\n      </Button>\n\n      <SignUpVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </ButtonToolbar>\n  );\n}\n\n// functional component\nfunction SignUpVerticallyCenteredModal(props) {\n  return(\n    <Modal\n    {...props}\n    size=\"sm\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Sign Up\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <SignUpForm onHide={props.onHide}/>\n      </Modal.Body>\n    </Modal>\n  );\n}\n","import React, {useState} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n// import FormText from \"react-bootstrap/FormText\";\n\n\nfunction LogInForm(props){\n  //use hook to replace this.state\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [jwt, setJwt] = useState('');\n\n\n  const _handleEmailChange = (event) => {\n    if(event.target.value.length > 0){\n      setErrorMessage('');\n    }\n    // event.persist();\n    // console.log(event);\n    // console.log('changed email:', event.target.value); // input value - ok!\n    setEmail(event.target.value);\n  };\n\n  const _handlePasswordChange = (event) => {\n    if(event.target.value.length > 0){\n      setErrorMessage('');\n    }\n    setPassword(event.target.value);\n  };\n\n  const _handleSubmit = (event) => {\n    event.preventDefault();\n    if(email.length === 0 || password.length === 0){\n      setErrorMessage('Please enter an email and password')\n    } else {\n      performLogIn();\n    }\n  };\n\n  // console.log(errorMessage);\n\n  const performLogIn = () => {\n    // console.log('email:', email);\n    // console.log('password:', password); // tested ok!\n    const URL = \"https://toyshoppingsite.herokuapp.com/user_token\";\n    const data = {\n      auth: {\n        email,\n        password\n      }\n    };\n    // example:\n    // {\"auth\":\n    //   {\"email\": \"foo@bar.com\",\n    //     \"password\": \"secret\"\n    //   }\n    // }\n\n    axios.post(URL, data)\n    .then(res => {\n      console.log('response from server:', res, props);\n      setJwt(res.data.jwt);\n      // once login success\n      // 1) store jwt token in the localStorage\n      window.localStorage.setItem('jwt', res.data.jwt);\n      // 2) send another axios request to get the cart from DB, to save in localStorage\n      getCart();\n      // 3) hide the modal\n      props.onHide();\n      // 4) go to the next page\n      props.history.push('/category/1');\n    })\n    .catch(err => {\n      // if any error, update state and print out in UI\n      console.warn('!!!ERROR:', err);\n      setErrorMessage('Invalid email or password')\n    });\n  };\n  // **************TODO:**************\n  // once a user has logged in, either\n  // 1) along with the login token, send back user cart information: line_items\n  // 2) or, send another axios request to get the line_items information\n  // to store inside localStorage to show the shopping cart item number!\n  const getCart = ()=>{\n    console.log('send another axios request!');\n    axios.get('https://toyshoppingsite.herokuapp.com/cart')\n    // continue!!!!\n\n\n  };\n\n  //\n  // // TEST & LEARN:\n  // // if state (email / password's value) changes, then the whole function component will run again!\n  // // thus, the below line runs everytime the typed-in email's value changes!\n  // console.log('normal console.log', email);\n  // // Also, can use useEffect to catch the change of state\n  // useEffect(()=> console.log('useEffect:', email), [email]);\n  // console.log('currentPassword:', password);\n\n\n  return(\n    <Form onSubmit={_handleSubmit}>\n      <Form.Text className=\"errorMessage\">\n        {errorMessage}\n      </Form.Text>\n      <Form.Group controlId=\"loginFormBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"enter email\" onChange={_handleEmailChange}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"loginFormBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"enter password\" onChange={_handlePasswordChange}/>\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Log In\n      </Button>\n    </Form>\n  );\n}\n\n// using Curl in the bash to test - SUCCESS!\n// curl -X POST \"https://toyshoppingsite.herokuapp.com/user_token\" -d '{\"auth\": {\"email\": \"lily@lily.com\", \"password\": \"chicken\"}}' -H \"Content-Type: application/json\"\n\n\nexport default withRouter(LogInForm);\n","import React, {useState} from 'react';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\n\nimport LogInForm from \"./LogInForm\";\n\n\n\nexport default function ModalLogIn(props){\n\n  const[modalShow, setModalShow] = useState(false);\n\n  return(\n    <ButtonToolbar>\n      <Button className=\"btn-space\" variant=\"info\" onClick={() => setModalShow(true)}>\n        LogIn\n      </Button>\n\n\n      <LogInVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </ButtonToolbar>\n  );\n}\n\n// functional component\nfunction LogInVerticallyCenteredModal(props) {\n  return(\n    <Modal\n    {...props}\n    size=\"sm\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Log In\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <LogInForm onHide={props.onHide}/>\n      </Modal.Body>\n    </Modal>\n  );\n}\n","import React, {useState} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {CardElement, injectStripe} from 'react-stripe-elements';\nimport axios from 'axios';\nimport Button from \"react-bootstrap/Button\";\n\nimport Order from './Order';\n\n// fake that it's paid!\nfunction CheckoutForm(props){\n  // const[message, setMessage] = useState('');\n\n  const submit = () =>{\n    // setMessage('Congrats! Purchase complete!')\n    // send to server to move line_items from cart into order\n    // also update product stock!\n    moveLineItemsFromCartToOrderAndUpdateStock();\n  };\n\n\n  const moveLineItemsFromCartToOrderAndUpdateStock = ()=>{\n    const URL = `https://toyshoppingsite.herokuapp.com/order`;\n\n    const jwt = localStorage.getItem('jwt');\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      },\n    };\n\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log('response of success order id:', res.data.id);\n\n      // get the order_id from response, and redirect!\n      const orderId = res.data.id\n      // 1) if order succeed, redirect to order page, and show messages there!\n      props.history.push(`/order/${orderId}`)\n    })\n    .catch(err => {\n      // 2) if order failed, show message like out of order!\n      // ************TODO****************\n      console.warn('ERROR!');\n    });\n  };\n\n\n\n  return(\n    <div className=\"payment-form\">\n      <p>Would you like to complete the purchase?</p>\n      <div style={{borderRadius: '0.5em', height: '100px', padding: '50px', border: '3px solid orange', marginTop: '10px', marginBottom: '30px',  backgroundColor: 'aliceblue', width:'500px'}} >\n        <CardElement />\n      </div>\n      <Button id=\"pay-by-card\" onClick={submit}>Send</Button>\n    </div>\n  );\n}\n\nexport default withRouter(CheckoutForm);\n","import React, {Component} from 'react';\nimport {Elements, StripeProvider} from 'react-stripe-elements';\nimport CheckoutForm from './CheckoutForm';\n\nclass Payment extends Component {\n  render() {\n    return (\n      <StripeProvider apiKey=\"pk_test_TYooMQauvdEDq54NiTphI7jx\">\n        <div className=\"payment-form\">\n          <h1>Payment Form</h1>\n          <div className=\"payment-form\">\n            <Elements>\n              <CheckoutForm />\n            </Elements>\n          </div>\n        </div>\n      </StripeProvider>\n    );\n  }\n}\n\nexport default Payment;\n","import React from 'react';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport './css/bootstrap.min.css';// import Bootstrap css\nimport './css/main.css';// import custom css\n\nimport BootNav from './components/BootNav';\n// import Image from \"react-bootstrap/Image\";\n\nimport Home from \"./components/Home\";\nimport MyAccount from \"./components/MyAccount\";\nimport Category from \"./components/Category\";\nimport Product from \"./components/Product\";\nimport CartConfirm from \"./components/CartConfirm\";\nimport CheckOut from \"./components/CheckOut\";\nimport RemoveLineItem from \"./components/RemoveLineItem\";\nimport Payment from './components/Payment.js';\nimport Order from './components/Order';\n\n\nconst Routes = (\n    <Router>\n    <div className=\"entireBody\">\n\n      <Route path=\"/\" component={BootNav}/>\n\n      <Route exact path=\"/\" component={Home}/>\n      <Route exact path=\"/account\" component={MyAccount}/>\n      <Route exact path=\"/category/:id\" component={Category}/>\n      <Route exact path=\"/product/:id\" component={Product}/>\n      <Route exact path=\"/cart\" component={CartConfirm}/>\n      <Route exact path=\"/checkout\" component={CheckOut}/>\n      <Route exact path=\"/removeLineItem\" component={RemoveLineItem}/>\n      <Route exact path=\"/payment\" component={Payment}/>\n      <Route exact path=\"/order/:id\" component={Order}/>\n\n\n\n      <footer className=\"body-footer\">\n        {\n        // <Image className=\"happykids\" src=\"/images/happykids.jpg\" />\n        // <img src={process.env.PUBLIC_URL + '/happykids.jpg'} />\n        }\n\n      </footer>\n    </div>\n  </Router>\n);\n\nexport default Routes;\n","import React, {useState} from 'react';\nimport {Link} from \"react-router-dom\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Dropdown from \"react-bootstrap/Dropdown\"\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\"\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\"\nimport DropdownItem from \"react-bootstrap/DropdownItem\"\n\nimport ModalSignUp from \"./ModalSignUp\";\nimport ModalLogIn from \"./ModalLogIn\";\n// import MyAccount from \"./MyAccount\";\n\n\n\nexport default function BootNav(props){\n\n  const [jwt, setJwt] = useState(localStorage.getItem('jwt'));\n\n  const _handleLogOut = () => {\n    // 1) actually remove localStorage\n    localStorage.removeItem('jwt');\n    // 2) update state, so BootNav can re-render\n    setJwt('');\n    // 3) redirect to Home\n    props.history.push('/');\n  }\n\n  let buttonLeft;\n  if(localStorage.getItem('jwt')){\n    // already logged in\n    buttonLeft = (\n      <Link to={'/account'}>\n        <Button className=\"btn-space\" variant=\"warning\">\n          MyAccount\n        </Button>\n      </Link>\n    );\n  } else {\n    // not yet logged in\n    buttonLeft = (\n      <ModalSignUp />\n    );\n  }\n\n  let buttonRight;\n  if(localStorage.getItem('jwt')){\n    // already logged in\n    buttonRight = (\n      <div>\n        <Button className=\"btn-space\" variant=\"info\" onClick={_handleLogOut}>\n          LogOut\n        </Button>\n        <Link to={'/cart'}>\n          <img className=\"cart-icon\" src={process.env.PUBLIC_URL +`/images/cart-icon.png`}></img>\n        </Link>\n      </div>\n    );\n  } else {\n    // not yet logged in\n    buttonRight = (\n      <ModalLogIn/>\n    );\n  }\n\n  return(\n    <Navbar sticky=\"top\" expand=\"md\" className=\"bg-light justify-content-between\">\n      <Navbar.Brand href=\"#/\">\n        <div>V's Toy</div>\n        <img className=\"happy-kids\" src={process.env.PUBLIC_URL + '/images/happy-kids.png'}/>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <ButtonToolbar>\n            <Button className=\"btn-space\" href=\"#/\" variant=\"danger\">Home</Button>\n            <Button id=\"test\"className=\"btn-space\" href=\"#about\" variant=\"primary\">About</Button>\n          </ButtonToolbar>\n\n          <Dropdown>\n            <Dropdown.Toggle className=\"btn-space\" variant=\"success\" id=\"dropdown-basic\">\n              Category\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <NavDropdown.Item id=\"category-1\" href=\"#category/1\">Age 0-2</NavDropdown.Item>\n              <NavDropdown.Item id=\"category-2\" href=\"#category/2\">Age 2-5</NavDropdown.Item>\n              <NavDropdown.Item id=\"category-3\" href=\"#category/3\">Age 5-8</NavDropdown.Item>\n              <NavDropdown.Item id=\"category-4\" href=\"#category/4\">Age over 8</NavDropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Nav>\n\n        <Form inline>\n          <FormControl type=\"text\" placeholder=\"e.g. hellokitty\" className=\"mr-sm-2\" />\n          <Button variant=\"secondary\" className=\"btn-space\" size=\"sm\">Search</Button>\n        </Form>\n\n        <Nav className=\"mr-auto\">\n          {buttonLeft}\n          {buttonRight}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n\n} // class BootNav\n  //\n  // <Image className=\"cart-icon\" src=\"../public/images/cart-icon.png\" fluid />\n\n// <img className=\"cart-icon\" src={process.env.PUBLIC_URL + '/images/c101.jpg'} />\n\n// <div className=\"cart-icon\">\n//   </div>\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\n\n\nexport default function Home(props){\n\n  const[products, setProducts] = useState([]);\n\n  useEffect(() => {\n    const URL = `https://toyshoppingsite.herokuapp.com/products`;\n\n    axios.get(URL)\n    .then(res => {\n      console.log('reponse.data:', res.data); // an array of all product objects\n      setProducts(res.data);\n    })\n    .catch(err => {\n      console.warn(err);\n    });\n  },[]);\n\n  console.log('products', products);\n\n\n\n\n\n  return(\n    <Image className=\"home-image\" src={process.env.PUBLIC_URL +`/images/playingkids.jpg`} fluid />\n  );\n}\n\n\n// <Container>\n//   <Row>\n//     <Col>\n//     </Col>\n//   </Row>\n//   <Row>\n//     <Col>1 of 2</Col>\n//     <Col>2 of 2</Col>\n//     <Col>1 of 3</Col>\n//     <Col>2 of 3</Col>\n//     <Col>3 of 3</Col>\n//   </Row>\n//   <Row>\n//     <Col>1 of 3</Col>\n//     <Col>2 of 3</Col>\n//     <Col>3 of 3</Col>\n//   </Row>\n// </Container>\n","import React from 'react';\n\nexport default function MyAccount(){\n  return(\n    <div>\n      My Account\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Figure from \"react-bootstrap/Figure\";\nimport FigureImage from \"react-bootstrap/FigureImage\";\nimport FigureCaption from \"react-bootstrap/FigureCaption\";\n\n\n\nexport default function Category(props){\n\n  const {id} = props.match.params;\n  // LEARNING: same as below\n  // const categoryId = props.match.params.id;\n  // console.log('categoryId:',categoryId);\n\n  const [products, setProducts] = useState([]);\n  // const [jwt, setJwt] = useState(localStorage.getItem('jwt'))\n\n  // LEARNING:\n  // whenever the props id changes, useEffect will catch that change and render the whole page\n  // even for the first time the component renders\n  useEffect(()=>{\n    getProductsOfCategory(id);\n  },[id]);\n\n\n  const getProductsOfCategory = ()=>{\n    // console.log('make axios request!');\n\n    const URL = `https://toyshoppingsite.herokuapp.com/categories/${id}`;\n\n    // LEARNING:\n    // category page doesn't need user authentication, thus no need to include jwt inside Header\n    // const configHeader = {\n    //   header: {\n    //     Authorization: 'Bearer ' + jwt\n    //   }\n    // };\n\n    axios.get(URL) //, configHeader\n    .then(res => {\n      // console.log('!!!res is :', res);\n      console.log('get all the products response:', res.data);// an array of products items\n      setProducts(res.data);\n    })\n    .catch(err => {\n      console.warn('ERRORS!!!:', err);\n    });\n  }\n\n  // console.log('updated products:', products);\n\n\n  return(\n    <Container>\n      <Row>\n        {\n          products.map( product => (\n            <Col xs={12} md={4} key={product.name}>\n              <Link to={`/product/${product.id}`}>\n                <Figure>\n                  <Figure.Image\n                    width={200}\n                    height={200}\n                    fluid={false}\n                    alt=\"200x200\"\n                    src={process.env.PUBLIC_URL + `/images/${product.image}`}\n                  />\n                  <Figure.Caption>\n                    <p><strong>{product.name}</strong></p>\n                    <p>Price: {`$${product.price}`}</p>\n                    <p>In Stock: {product.stock}</p>\n                    <p>{product.description}</p>\n                  </Figure.Caption>\n                </Figure>\n              </Link>\n            </Col>\n          ))\n        }\n      </Row>\n    </Container>\n  )\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Figure from \"react-bootstrap/Figure\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport Form from \"react-bootstrap/Form\";\nimport FormText from \"react-bootstrap/FormText\";\nimport Button from \"react-bootstrap/Button\";\n\n\nexport default function Product(props){\n\n  // product id passed by props\n  const {id} = props.match.params;\n  // console.log(id);\n\n  // need jwt for user to get a cart\n  // if use logged in, valid string; if not, null\n  const jwt = localStorage.getItem('jwt');\n  const [product, setProduct] = useState({});\n  const [category, setCategory] = useState({});\n  const [quantity, setQuantity]= useState(1);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [buttonStatus, setButtonStatus] = useState(false);\n  const [buttonText, setButtonText] = useState('Add to Cart');\n  const [successAddToCartMessage, setSuccessAddToCartMessage] = useState('');\n\n  // first time the component renders\n  // axios request to get the product info by id\n  useEffect(()=>{\n    getProductById(id);\n    if(!jwt){\n      setButtonStatus(true);\n      setButtonText('Login to use cart')\n    }\n  },[]);\n\n  const getProductById = (id)=>{\n    const URL = `https://toyshoppingsite.herokuapp.com/products/${id}`;\n\n    axios.get(URL)\n    .then(res => {\n      console.log('response:', res.data);\n      console.log('categoryName:', res.data.category.name);\n\n      setProduct(res.data); // the product object, including its category object\n      setCategory(res.data.category); // the associated category object\n    })\n    .catch(err => {\n      console.warn('ERRORS!!!:', err);\n      // setErrorMessage('Product not found');\n      props.history.push('/')\n    });\n  };\n\n\n  // ************ regardless of user loggin, check if the product is out of stock *************\n  // if yes, 1) show message, 2) disable AddtoCart button\n  // TESTED: if a button is disabled, won't be able to trigger click event handler\n  // let setButtonStatus(false);\n  // let inStockUI;\n  // if (product.stock <= 0){\n  //   setButtonStatus(true);\n  //   inStockUI = (\n  //     <span class=\"out-of-stock\">Sorry, this product is out of stock.</span>\n  //   );\n  // } else {\n  //   inStockUI = (<span>{product.stock} pcs</span>)\n  // }\n  // ************ // ************ // ************ // ************ // ************\n\n\n\n  // _handleChangeQuantity make sure quantity stored in state is <= stock\n  const _handleChangeQuantity = (event) => {\n    console.log('event.target.value:', event.target.value); // actual input quantity\n\n    // Only when a user is logged in,\n    // can the user toggle the button status based on user input quantity\n    if(jwt){\n      // if the user has added product into the cart, will get success message\n      // on next click on quantity, clear the message;\n      setSuccessAddToCartMessage('');\n\n      // TEST: typeof event.target.value is a string, need to parse it to integer!!!\n      let wantedQuantity = parseInt(event.target.value);\n      // console.log('type of wantedQuantity', typeof(wantedQuantity));\n\n      // check if the input quantity is more than actual stock\n      // since user can manually type in the amount\n      // ********************#TODO*********************\n      // this logic is not perfect\n      // should axios request the current cart data with the existing quantity(if any, by default = 0)\n      // then compare total requested quantity (wantedQuantity + existing cart quantity) with the product stock,\n      // currently, once post request, backend is checking the total requested quantity (existing + new) to make sure <= stock\n      // if not, would send back error to .catch()\n      // it's not perfect user experience, but at least currently, at the frontend\n      // make sure user's actual type-in value is <= stock number,\n      // will leave it for now due to tight deadline, but will refactor late\n      if (wantedQuantity > product.stock){\n        // 1) prompt message\n        setErrorMessage('Sorry, not enough stock.');\n        // 2) the input quantity doesn't count, reset state quantity to 0\n        setQuantity(1);\n        // 3) disable 'Add to Cart' button, cannot click\n        setButtonStatus(true);\n      } else {\n        setErrorMessage('');\n        setQuantity(wantedQuantity);\n        setButtonStatus(false);\n      }\n      console.log('wantedQuantity:', wantedQuantity);\n    }\n    // if a user is not logged in, do nothing, as the user cannot click 'Add to Cart'\n\n  }; //_handleChangeQuantity\n\n  console.log('stateQuantity:', quantity);\n  console.log('button disabled?:', buttonStatus);\n\n\n  // At this stage, have ensure that\n  // only when 1) user login & 2) input quantity <= stock\n  // that a user can click the 'Add to Cart' button!\n  const _handleAddToCart = (event) => {\n    // console.log(event);\n    console.log('clicked cart');\n    console.log('when click cart, stateQuantity', quantity);\n    console.log('when click cart, typeof stateQuantity', typeof(quantity));\n\n    // check if the state quantity is 0 or empty?\n    // if yes, propmt message, disable button and return early\n    if(!quantity){\n      console.log('when quantity === 0, it ran!');\n      setErrorMessage('Please select a quantity.')\n      setButtonStatus(true);\n      return;\n    }\n    // if not, then quantity is valid, send to the DB and add into the cart!\n    const URL = \"https://toyshoppingsite.herokuapp.com/line_items\";\n    const product_id = product.id;\n    const data = {\n      line_item:{\n        product_id,\n        quantity\n      }\n    };\n    const configHeader = {\n      headers: {\n        Authorization: \"Bearer \" + jwt\n      }\n    };\n\n    axios.post(URL, data, configHeader)\n    .then(res => {\n      console.log('added to cart',res);\n      // pop up a msg to user, showing adding to cart successfully, with a link to cart page\n      setSuccessAddToCartMessage(`Successfully added to cart!`);\n    })\n    .catch(err => {\n      console.warn('ERROR of adding to cart', err);\n      setErrorMessage('Sorry, not enough stock.')\n    });\n  }; // _handleAddToCart\n\n  let showSuccessMessage = \"\";\n  if(successAddToCartMessage){\n    showSuccessMessage = (\n      <Link to={`/cart`} className=\"view-your-cart\">\n        <strong><p className = 'show-success-mesage'>\n          {successAddToCartMessage} {' '}\n          View your cart\n        </p></strong>\n      </Link>\n    )\n  }\n\n\n\n  return(\n    <Container>\n      <Row>\n        <Col sm md={7}>\n          <Figure>\n            <Figure.Image\n              fluid={true}\n              alt=\"500x500\"\n              src={process.env.PUBLIC_URL +`/images/${product.image}`}\n            />\n            <Figure.Caption>\n              {product.description}\n            </Figure.Caption>\n          </Figure>\n        </Col>\n        <Col sm md={5}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item><strong>{product.name}</strong></ListGroup.Item>\n            <ListGroup.Item>Category: {category.name}\n            </ListGroup.Item>\n            <ListGroup.Item>Price: {`$${product.price}`}</ListGroup.Item>\n            <ListGroup.Item>\n              <Form.Text className=\"errorMessage\">\n                {errorMessage}\n              </Form.Text>\n              Select Quantity:{' '}\n              <input type=\"number\" min=\"1\" max={product.stock} defaultValue=\"1\" onChange={_handleChangeQuantity}/>\n              <Form.Text>\n                (In stock: {product.stock})\n              </Form.Text>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button id=\"add-to-cart\" disabled={buttonStatus} onClick={_handleAddToCart}>{buttonText}</Button>\n            </ListGroup.Item>\n            <ListGroup.Item>{showSuccessMessage}</ListGroup.Item>\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\n\nimport Table from \"react-bootstrap/Table\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\n\n\n\nexport default function CartConfirm(props){\n\n  const jwt = localStorage.getItem('jwt');\n\n  const [lineItems, setLineItems] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  // const [quantity, setQuantity] = useState(0);\n  // const [product, setProduct] = useState({});\n\n  useEffect(()=>{\n    const URL = `https://toyshoppingsite.herokuapp.com/cart`;\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      },\n    };\n\n    // console.log('%c get CART', 'font-size: 20pt');\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log('response:', res.data); // an array of all line_item objects of the cart / current_user\n      setLineItems(res.data);\n    })\n    .catch(err => {\n      console.warn('SERVER ERROR:', err);\n      // if any error, e.g. unlogged in user send random request in address bar\n      // redirect to home page\n      props.history.push('/');\n    });\n  },[]);\n\n  // in case there's no line_items inside the cart of the current_user\n  let noLineItemsToShow = (\n    <tbody>\n      <tr>\n        <td>There's no item in your cart.</td>\n        <td> </td>\n        <td> </td>\n        <td> </td>\n        <td> </td>\n      </tr>\n    </tbody>\n  );\n\n\n  let subtotal = 0;\n  lineItems.forEach(li => {\n    subtotal += li.quantity * li.product.price;\n  })\n\n\n  const _handleUpdateQuantity = (event)=>{\n    event.preventDefault();\n    event.persist();\n    console.log(event);\n\n    const updatedQuantity = parseInt(event.target[0].value);\n    const lineItemId = parseInt(event.target[0].name);\n    console.log('updated quantity',updatedQuantity); // new quantity input\n    console.log('lineItemId',lineItemId); // product_id\n\n    // ******************LEARNING: ******************\n    // let currentProductStock;\n    // lineItems.forEach((li)=>{\n    //   if(li.product_id === lineItemId){\n    //     console.log('currentProductId', li.product_id);\n    //     currentProductStock = li.product.stock\n    //   }\n    // });\n    // console.log('currentProductStock', currentProductStock);\n    //\n    // // 1) double check if the updatedQuantity is <= currentProductStock\n    // // if no, pop up error message, and return early, no need to proceed\n    // // until the next updatedQuantity is a valid number, then do axios request\n    // if(updatedQuantity > currentProductStock){\n    //   setErrorMessage(`Sorry, only ${currentProductStock} in stock.`)\n    //   return;\n    // }\n    // ******************************************************\n\n    // APPARENTLY, the form input is very smart to check\n    // if the updatedQuantity(user input) is <= max && >= min\n    // ONE MORE THING !!!\n    if (isNaN(updatedQuantity)){\n      console.log('its NaN');\n      // POP UP MESSAGE:\n      setErrorMessage('Please select a quantity.')\n      // return early\n      return;\n    }\n    console.log('should not run if its NaN');\n\n    // if the above is clear,\n    // 1) clear errorMessage first\n    setErrorMessage('');\n    // 2) ideally, check if the updatedQuantity is the same as the existing quantity stored in line_item\n    // if yes, no need to send further axios request,\n    // but for now, it might be rare, leave this for refactor later.\n    // 3) send axios post request to DB, to update the single line_item\n    // axios.put(url[, data[, config]])\n    const URL = `https://toyshoppingsite.herokuapp.com/line_items/${lineItemId}`;\n    const data = {\n      line_item: {\n        quantity: updatedQuantity\n      }\n    };\n    const configHeader = {\n      headers: {\n        Authorization: \"Bearer \" + jwt\n      }\n    };\n\n    axios.put(URL, data, configHeader)\n    .then(res => {\n      console.log('response from server:', res.data); // an array of all line_item objects of the cart / current_user\n      // if success, 1) update the state: lineItems\n      // DB send back the whole array of line_item objects, including its product association\n      // the whole page will re-render with updated state\n      setLineItems(res.data);\n    })\n    .catch(err => {\n      console.warn('ERROR of updating quantity', err);\n      setErrorMessage('Sorry, not enough stock.')\n    });\n\n  }\n\n\n\n  const _handleRemoveLineItem = (event) => {\n    event.persist();\n    console.log('click image', event);\n    console.log('lineItemId', event.target.name);\n    // console.log('typeof', typeof(event.target.name));\n\n    const lineItemId = parseInt(event.target.name);\n    // console.log('typeof', typeof(lineItemId));\n\n    // send delete request to DB with line_item id\n    // axios.delete(url[, config])\n    const URL = `https://toyshoppingsite.herokuapp.com/line_items/${lineItemId}`;\n\n    const configHeader = {\n      headers: {\n        Authorization: \"Bearer \" + jwt\n      }\n    };\n\n    axios.delete(URL, configHeader)\n    .then(res => {\n      console.log('DELETE response:', res.data);\n      // after deleting, send back a new line_items array to update state!\n      setLineItems(res.data);\n    })\n    .catch(err => {\n      console.warn('ERRORS!!!:', err);\n    });\n  };\n\n\n  return(\n    <Table striped hover responsive=\"md\">\n      <thead>\n        <tr>\n          <th className=\"cart-label\"><strong>My Cart</strong></th>\n          <th className=\"cart-label\"><strong>Item</strong></th>\n          <th className=\"cart-label\"><strong>Quantity</strong></th>\n          <th className=\"cart-label\"><strong>Price</strong></th>\n          <th className=\"cart-label\"><strong>Total</strong></th>\n        </tr>\n      </thead>\n\n      { // if there's no line_items in the cart\n       !lineItems.length\n       ?\n       noLineItemsToShow\n       :\n      (\n        <tbody>\n          {lineItems.map(li => (\n            <tr key={li.product.name}>\n              <td>\n                <Link to={`/product/${li.product_id}`}>\n                  <Image\n                    className=\"cart-thumbnail\"\n                    src={process.env.PUBLIC_URL +`/images/${li.product.image}`}\n                    thumbnail\n                  />\n                </Link>\n              </td>\n\n              <td className=\"product-name\"><br/><strong>{li.product.name}</strong></td>\n\n              <td>\n                <form className=\"quantity-update change-quantity\" onSubmit={_handleUpdateQuantity}>\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    max={li.product.stock}\n                    name={li.id}\n                    defaultValue={li.quantity}\n                  /> {' '}\n                  <input\n                    type=\"submit\"\n                    className=\"update-quantity\"\n                    value=\"Update\"\n                    disabled={false}\n                  /> {' '}\n                </form>\n                <Image\n                  name={li.id}\n                  className=\"trash change-quantity\"\n                  src={process.env.PUBLIC_URL + '/images/small-trash.png'}\n                  title=\"Remove\"\n                  onClick={_handleRemoveLineItem}\n                  fluid\n                />\n              </td>\n\n              <td><br/><strong>${li.product.price}</strong></td>\n\n              <td><br/><strong>${li.quantity * li.product.price}</strong></td>\n            </tr>\n           ))\n          }\n          <tr>\n            <td> </td>\n            <td> </td>\n            <td>\n              <p className=\"errorMessage\">\n                {errorMessage}\n              </p>\n            </td>\n            <td><strong className=\"cart-label\">Subtotal: </strong></td>\n            <td><strong className=\"cart-label\">${subtotal}</strong></td>\n          </tr>\n          <tr>\n            <td> </td>\n            <td> </td>\n            <td> </td>\n            <td> </td>\n            <td>\n              <Link to={'/checkout'}>\n                <Button id=\"checkout\">Check Out</Button>\n              </Link>\n            </td>\n          </tr>\n        </tbody>\n      )}\n    </Table>\n  );\n} // CartConfirm\n\n\n\n\n\n\n// <div className=\"errorMessage\">{errorMessage}</div>\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\n\nimport Table from \"react-bootstrap/Table\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function CheckOut(props){\n  const jwt = localStorage.getItem('jwt');\n\n  const [lineItems, setLineItems] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  // const [quantity, setQuantity] = useState(0);\n  // const [product, setProduct] = useState({});\n\n  useEffect(()=>{\n    const URL = `https://toyshoppingsite.herokuapp.com/cart`;\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      },\n    };\n\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log('response:', res.data); // an array of all line_item objects of the cart / current_user\n      setLineItems(res.data);\n    })\n    .catch(err => {\n      console.warn('SERVER ERROR:', err);\n      // if any error, e.g. unlogged in user send random request in address bar\n      // redirect to home page\n      props.history.push('/');\n    });\n  },[]);\n\n  let subtotal = 0;\n  lineItems.forEach(li => {\n    subtotal += li.quantity * li.product.price;\n  })\n\n  return(\n    <Table responsive=\"md\">\n      <thead>\n        <tr>\n          <th className=\"cart-label\">\n            <strong>Confirm order</strong>\n          </th>\n          <th className=\"cart-label\"><strong>Item</strong></th>\n          <th className=\"cart-label\"><strong>Quantity</strong></th>\n          <th className=\"cart-label\"><strong>Price</strong></th>\n          <th className=\"cart-label\"><strong>Total</strong></th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {lineItems.map(li => (\n          <tr key={li.product.name}>\n            <td>\n              <Link to={`/product/${li.product_id}`}>\n                <Image className=\"cart-thumbnail\" src={process.env.PUBLIC_URL + `/images/${li.product.image}`} thumbnail />\n              </Link>\n            </td>\n            <td><strong>{li.product.name}</strong></td>\n            <td><strong>{li.quantity}</strong></td>\n            <td><strong>${li.product.price}</strong></td>\n            <td><strong>${li.quantity * li.product.price}</strong></td>\n          </tr>\n        ))\n      }\n        <tr>\n          <td> </td>\n          <td> </td>\n          <td>\n            <Link to={'/cart'} id=\"back-to-cart\">\n              <strong>\n                Back to cart\n              </strong>\n            </Link>\n          </td>\n          <td><strong className=\"cart-label\">Subtotal: </strong></td>\n          <td><strong className=\"cart-label\">${subtotal}</strong></td>\n        </tr>\n        <tr>\n          <td> </td>\n          <td> </td>\n          <td> </td>\n          <td> </td>\n          <td>\n            <Link to={'/payment'}>\n              <Button id=\"pay-by-card\">Pay by Card</Button>\n            </Link>\n          </td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n","import React from 'react';\n\nexport default function RemoveLineItem(props){\n\n  console.log('clicked trash icon!');\n  \n\n  return (\n    <div>???</div>\n  );\n\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\n\nimport Table from \"react-bootstrap/Table\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\n\n\n\n\nexport default function Order(props){\n\n  const orderId = props.match.params.id\n  console.log('orderId', orderId);\n  const jwt = localStorage.getItem('jwt');\n\n  const [lineItems, setLineItems] = useState([]);\n\n  const [show, setShow] = useState(true);\n\n  useEffect(() => {\n    const URL = `https://toyshoppingsite.herokuapp.com/order/${orderId}`;\n\n    const configHeader = {\n      headers: {\n        Authorization: 'Bearer ' + jwt,\n      }\n    };\n\n    axios.get(URL, configHeader)\n    .then(res => {\n      console.log(res.data);\n      setLineItems(res.data);\n    })\n    .catch(err => {\n      console.warn('ERROR', err);\n    });\n  },[]);\n\n  let subtotal = 0;\n  lineItems.forEach(li => {\n    subtotal += li.quantity * li.product.price;\n  })\n\n\n  return(\n    <div>\n      <div className=\"success-purchase\">\n        <strong>Thanks for Purchase!</strong> {' '}\n        <Link className=\"success-purchase-link\"to={'/'}>\n          <strong>Find More Toys?!</strong>\n        </Link>\n      </div>\n      <Table responsive=\"md\">\n        <thead>\n          <tr>\n            <th className=\"cart-label\">\n              <strong>Your Order</strong>\n            </th>\n            <th className=\"cart-label\"><strong>Item</strong></th>\n            <th className=\"cart-label\"><strong>Quantity</strong></th>\n            <th className=\"cart-label\"><strong>Price</strong></th>\n            <th className=\"cart-label\"><strong>Total</strong></th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {lineItems.map(li => (\n            <tr key={li.product.name}>\n              <td>\n                <Link to={`/product/${li.product_id}`}>\n                  <Image className=\"cart-thumbnail\" src={process.env.PUBLIC_URL + `/images/${li.product.image}`} thumbnail />\n                </Link>\n              </td>\n              <td><strong>{li.product.name}</strong></td>\n              <td><strong>{li.quantity}</strong></td>\n              <td><strong>${li.product.price}</strong></td>\n              <td><strong>${li.quantity * li.product.price}</strong></td>\n            </tr>\n          ))\n        }\n          <tr>\n            <td> </td>\n            <td> </td>\n            <td> </td>\n            <td><strong className=\"cart-label\">Subtotal: </strong></td>\n            <td><strong className=\"cart-label\">${subtotal}</strong></td>\n          </tr>\n          <tr>\n            <td> </td>\n            <td> </td>\n            <td> </td>\n            <td> </td>\n            <td>\n              <Link to={'/'}>\n                <Button className=\"back-to-home\">Find More Toys</Button>\n              </Link>\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n\n\n\n}\n","// import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport Routes from './routes';\n\n\n\nReactDOM.render(Routes, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}